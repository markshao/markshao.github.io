<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2018 总结 [质量篇]</title>
    <url>/2019/03/01/2018-conclusion/</url>
    <content><![CDATA[<p>&#x4E0A;&#x4E00;&#x6B21;&#x5199;&#x535A;&#x5BA2;&#x5DF2;&#x7ECF;&#x4E0D;&#x77E5;&#x9053;&#x662F;&#x591A;&#x4E45;&#x4E4B;&#x524D;&#x7684;&#x4E8B;&#x60C5;&#x4E86;&#xFF0C;&#x5F00;&#x901A; <code>Github Page</code> &#x521A;&#x5F00;&#x59CB;&#x66F4;&#x591A;&#x662F;&#x51FA;&#x4E8E;&#x5BF9;&#x4E8E;&#x65B0;&#x4E8B;&#x7269;&#x5C1D;&#x9C9C;&#xFF0C;&#x5BF9;&#x4E8E;&#x575A;&#x6301;&#x5199;&#x4F5C;&#x8FD9;&#x4E2A;&#x4E8B;&#x60C5;&#x53CD;&#x800C;&#x6CA1;&#x6709;&#x600E;&#x4E48;&#x91CD;&#x89C6;&#x3002;&#x5DE5;&#x4F5C;&#x8FD9;&#x51E0;&#x5E74;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5728;&#x4F9D;&#x56FE;&#x7684;&#x8FD9;2&#x5E74;&#x8D8A;&#x6765;&#x8D8A;&#x611F;&#x53D7;&#x5230;&#x601D;&#x8003;&#x7684;&#x6DF1;&#x5EA6;&#x662F;&#x591A;&#x4E48;&#x7684;&#x91CD;&#x8981;&#xFF0C;&#x800C;&#x5176;&#x4E2D;&#x5199;&#x4F5C;&#x6B63;&#x597D;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x597D;&#x7684;&#x9759;&#x4E0B;&#x6765;&#x53BB;&#x601D;&#x8003;&#xFF0C;&#x53BB;&#x590D;&#x76D8;&#x7684;&#x4E00;&#x4E2A;&#x624B;&#x6BB5;&#x3002;&#x8D81;&#x7740;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4;&#x5728;&#x5317;&#x4EAC;&#x51FA;&#x5DEE;&#x5728;&#x9152;&#x5E97;&#x7A7A;&#x7740;&#x6CA1;&#x4E8B;&#x513F;&#xFF0C;&#x628A;&#x4E4B;&#x524D;&#x57FA;&#x4E8E;<code>octopress</code> &#x7684; blog &#x8FC1;&#x79FB;&#x5230;&#x4E86; <code>hexo</code> , &#x5E0C;&#x671B;&#x4ECE;2019&#x5E74;&#x5F00;&#x59CB;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x91CC;&#x8BB0;&#x5F55;&#x4E0B;&#x5DE5;&#x4F5C;&#x751F;&#x6D3B;&#x4E2D;&#x7684;&#x70B9;&#x70B9;&#x6EF4;&#x6EF4;&#xFF0C;&#x6700;&#x5173;&#x5065;&#x7684;&#x662F;&#x8981;&#x80FD;&#x4E00;&#x76F4;&#x575A;&#x6301;&#x4E0B;&#x53BB;&#x3002;</p>
<h3 id="&#x5173;&#x4E8E;&#x5DE5;&#x4F5C;"><a href="#&#x5173;&#x4E8E;&#x5DE5;&#x4F5C;" class="headerlink" title="&#x5173;&#x4E8E;&#x5DE5;&#x4F5C;"></a>&#x5173;&#x4E8E;&#x5DE5;&#x4F5C;</h3><hr>
<p>&#x6574;&#x4E2A;2018&#x5E74;&#x7684;&#x5DE5;&#x4F5C;&#x53EF;&#x4EE5;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x9636;&#x6BB5;&#xFF0C;&#x4E0A;&#x534A;&#x5E74;&#x6211;&#x57FA;&#x672C;&#x4E0A;&#x662F;&#x6234;&#x7740;&#x6D4B;&#x8BD5;&#x56E2;&#x961F;&#x8D1F;&#x8D23;&#x4EBA;&#x7684;&#x5E3D;&#x5B50;&#x5E72;&#x7740; <code>60%</code> &#x6D4B;&#x8BD5;&#x7684;&#x5DE5;&#x4F5C;&#x548C; <code>40%</code> &#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x4E0B;&#x534A;&#x5E74;&#x662F;&#x6234;&#x7740;&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x7684;&#x5E3D;&#x5B50;&#x5E72;&#x7740; <code>80%</code> &#x4EA7;&#x54C1;&#x7BA1;&#x7406;&#x7684;&#x6D3B;&#x548C; <code>20%</code> &#x6D4B;&#x8BD5;&#x6A2A;&#x5411;&#x7684;&#x4E8B;&#x60C5; &#x3002; &#x5148;&#x6765;&#x8C08;&#x8C08;&#x5728;&#x6D4B;&#x8BD5;&#x8FD9;&#x5757;&#x505A;&#x7684;&#x4E00;&#x4E9B;&#x5DE5;&#x4F5C;&#xFF0C;&#x8BB0;&#x5F55;&#x4E00;&#x4E9B;&#x5173;&#x4E8E;&#x6846;&#x67B6;&#xFF0C;&#x5DE5;&#x5177;&#x65B9;&#x9762;&#x7684;&#x6C89;&#x6DC0;&#x5427;</p>
<h4 id="Atom-Integration"><a href="#Atom-Integration" class="headerlink" title="Atom Integration"></a>Atom Integration</h4><p>&#x8FD9;&#x4E2A;&#x662F;&#x6211;&#x4E0A;&#x534A;&#x5E74;&#x5728;&#x8D1F;&#x8D23;&#x539F;&#x5B50;&#x7684;&#x6D4B;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x8BBE;&#x8BA1;&#x5F00;&#x53D1;&#x7684;&#x4E00;&#x4E2A;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#xFF0C;&#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4F1A;&#x53BB;&#x8D1F;&#x8D23;&#x539F;&#x5B50;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x539F;&#x56E0;&#x662F;2&#x4E2A;</p>
<ol>
<li>&#x6574;&#x4E2A;2017&#x5E74;&#x7684;&#x62DB;&#x8058;&#x5DE5;&#x4F5C;&#x4E0D;&#x7ED9;&#x529B;&#xFF0C;18&#x5E74;&#x7EB5;&#x961F;&#x5316;&#x6539;&#x9769;&#x540E;&#xFF0C;&#x4E00;&#x4E0B;&#x5B50;&#x66B4;&#x9732;&#x51FA;&#x4E86;&#x4EBA;&#x5458;&#x77ED;&#x7F3A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x65F6;&#x7684;&#x4E3B;&#x529B;&#x90FD;&#x8981;&#x6295;&#x5230;<code>&#x4EBA;&#x50CF;&#x5927;&#x5E73;&#x53F0;</code>&#x548C;<code>&#x4EBA;&#x50CF;&#x5927;&#x6570;&#x636E;</code>&#x7684;&#x4EA7;&#x54C1;&#x4E0A;&#xFF0C;&#x4F5C;&#x4E3A;&#x516C;&#x53F8;&#x65B0;&#x7684;&#x91CD;&#x8981;&#x5B75;&#x5316;&#x4EA7;&#x54C1;&#xFF0C;&#x53EA;&#x80FD;&#x6211;&#x81EA;&#x5DF1;&#x4E0A;&#x4E86;</li>
<li>&#x53E6;&#x5916;&#x539F;&#x5B50;&#x662F;&#x4E00;&#x4E2A;&#x5168;&#x65B0;&#x7684;&#x8D34;&#x8FD1;&#x7B97;&#x6CD5;&#x7684;&#x5C42;&#x9762;&#x7684;&#x5E95;&#x5C42;&#x4EA7;&#x54C1;&#xFF0C;&#x652F;&#x6301;&#x5206;&#x5E03;&#x5F0F;&#xFF0C;&#x6211;&#x4E2A;&#x4EBA;&#x4E5F;&#x6BD4;&#x8F83;&#x5E0C;&#x671B;&#x53EF;&#x4EE5;&#x501F;&#x8FD9;&#x4E2A;&#x673A;&#x4F1A;&#x5BF9;&#x5E95;&#x5C42;&#x7684;&#x4E00;&#x4E9B;&#x6280;&#x672F;&#x53EF;&#x4EE5;&#x6709;&#x66F4;&#x591A;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x800C;&#x4E14;&#x5F53;&#x65F6;&#x56E2;&#x961F;&#x90FD;&#x662F;Python&#xFF0C;&#x5C31;&#x6211;&#x53EF;&#x80FD;&#x7B97;&#x8FD8;&#x4F1A;&#x4E00;&#x4E9B;&#x4E00;&#x70B9; Java</li>
</ol>
<p>&#x539F;&#x5B50;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5E95;&#x5C42;&#x7B97;&#x6CD5;&#x7684;&#x4EA7;&#x54C1;&#xFF0C;&#x6700;&#x4E3A;&#x5173;&#x6CE8;&#x7684;&#x5C31;&#x662F;&#x6027;&#x80FD;&#xFF0C;&#x7531;&#x4E8E;&#x5BF9;&#x5916;&#x63D0;&#x4F9B;&#x7684; interface &#x662F;Java SDK &#xFF08;RPC Client&#xFF09;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4E00;&#x5F00;&#x59CB;&#x9009;&#x62E9;&#x7684;&#x65B9;&#x5F0F;&#x7684; <code>Jmeter</code> + <code>Java Sampler</code>&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x7684;Client &#x4E2D;&#x5B58;&#x5728;&#x4E00;&#x4E9B;&#x540C;&#x6B65;&#x8F6C;&#x5F02;&#x6B65;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5185;&#x90E8;Client&#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x5957;&#x5728;<code>Jmeter</code>&#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x91CC;&#x540E;&#xFF0C;&#x6700;&#x540E;&#x6D4B;&#x8BD5;&#x51FA;&#x6765;&#x7684;QPS &#x548C;&#x5F00;&#x53D1;&#x81EA;&#x6D4B;&#x7684;QPS&#x603B;&#x662F;&#x4E0D;&#x80FD;&#x5BF9;&#x9F50;&#xFF0C;&#x800C;&#x4E14;GPU&#x7684;&#x5229;&#x7528;&#x7387;&#x4E5F;&#x4E00;&#x76F4;&#x4E0A;&#x4E0D;&#x53BB;&#xFF0C;&#x5F53;&#x65F6;&#x9879;&#x76EE;&#x5B9E;&#x5728;&#x662F;&#x7D27;&#x6025;&#xFF0C;&#x4E5F;&#x6765;&#x4E0D;&#x53CA;&#x901A;&#x8FC7;&#x770B;<code>Jmeter</code>source code &#x7684;&#x65B9;&#x5F0F;&#x6765;&#x6392;&#x67E5;&#x5177;&#x4F53;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x5C31;&#x51B3;&#x5B9A;&#x901A;&#x8FC7;&#x5FEB;&#x901F;rush &#x4E00;&#x4E2A;&#x6027;&#x80FD;&#x538B;&#x6D4B;&#x7684;&#x6846;&#x67B6;&#x51FA;&#x6765;&#x518D;&#x8BF4;&#xFF0C;&#x53D6;&#x540D; <code>Atom Integration</code>, &#x6574;&#x4E2A;&#x6846;&#x67B6;&#x57FA;&#x4E8E; Java Executors &#x7684;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#xFF0C;&#x652F;&#x6301;&#x901A;&#x8FC7; Console &#x8F93;&#x51FA;&#x6700;&#x7EC8;&#x7684; QPS &#x548C;&#x5E73;&#x5747; Latency&#xFF0C;&#x5BF9;&#x4E8E;&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x5B9E;&#x65F6; QPS &#x7684; Latency &#x7684;&#x76D1;&#x63A7;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x7684;&#x7EBF;&#x7A0B;&#x628A;metrics &#x6253;&#x5230;influxdb&#xFF0C; &#x5E76;&#x901A;&#x8FC7;grafana&#x6765;&#x770B;&#xFF0C;&#x5728;&#x5F00;&#x53D1;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x8FD8;&#x662F;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x540E;&#x9762;&#x6211;&#x4F1A;&#x5355;&#x72EC;&#x5199;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x6765;&#x4ECB;&#x7ECD;&#x8FD9;&#x4E2A;&#x6574;&#x4E2A;&#x8BBE;&#x8BA1;&#x7684;&#x601D;&#x8DEF;&#x548C;&#x8FC7;&#x7A0B;&#xFF0C;&#x8FD9;&#x91CC;&#x628A;&#x5F53;&#x65F6;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x8FD9;&#x91CC;&#x8BB0;&#x4E00;&#x4E0B;</p>
<ol>
<li>&#x957F;&#x65F6;&#x95F4;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;Result &#x7684; Queue &#x4F1A;&#x51FA;&#x73B0; Out of memory &#x7684;&#x60C5;&#x51B5;</li>
<li>P99 &#x548C; P95 &#x8BA1;&#x7B97;&#x65B9;&#x5F0F;&#x8BBE;&#x8BA1;&#x4E0D;&#x592A;&#x597D;&#xFF0C;&#x6700;&#x540E;&#x7528;&#x4E86;&#x4E00;&#x4E2A;time window&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4E22;&#x6389;&#x4E86;&#x4E00;&#x4E9B;&#x5386;&#x53F2;&#x6570;&#x636E;</li>
<li>Request &#x7684;&#x552F;&#x4E00;&#x6027;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A; Result &#x662F;&#x4E00;&#x4E2A;HashMap &lt;Request, Latency&gt;, &#x4F46;&#x662F; Request &#x7684;&#x552F;&#x4E00;&#x6027;&#x4E0D;&#x592A;&#x591F;&#xFF0C;&#x5BFC;&#x81F4;&#x51FA;&#x73B0; Key Conflict</li>
</ol>
<p><code>Atom Integration</code> &#x5F00;&#x53D1;&#x51FA;&#x6765;&#x540E;&#xFF0C;&#x652F;&#x6301;&#x4E86;&#x539F;&#x5B50;&#x591A;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#xFF0C;&#x540E;&#x6765;&#x8FD8;&#x88AB;&#x4ED6;&#x4EEC;&#x6539;&#x9020;&#x6210;&#x4E86;&#x4E00;&#x4E2A;HTTP Result API &#x7684;&#x538B;&#x529B;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x3002;&#x8FD9;&#x6BB5;&#x7ECF;&#x5386;&#x5F25;&#x8DB3;&#x73CD;&#x8D35;&#xFF0C;&#x8BA9;&#x6211;&#x6709;&#x673A;&#x4F1A;&#x4ECE;&#x5934;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#xFF0C;&#x5BF9;&#x4E8E;&#x7EBF;&#x7A0B;&#x7684;&#x8C03;&#x5EA6;&#x6CBB;&#x7406;&#xFF0C;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x7684;&#x63A7;&#x5236;&#x6709;&#x4E86;&#x66F4;&#x52A0;&#x6DF1;&#x523B;&#x7684;&#x8BA4;&#x8BC6;</p>
<h4 id="Kan-Kan"><a href="#Kan-Kan" class="headerlink" title="Kan Kan"></a>Kan Kan</h4><p>&#x5403;&#x72D7;&#x7CAE;&#x662F;&#x6211;&#x4EEC;&#x91CD;&#x8981;&#x7684;&#x8D28;&#x91CF;&#x6587;&#x5316;&#xFF0C;&#x4F46;&#x662F;<code>&#x4EBA;&#x50CF;&#x539F;&#x5B50;</code>&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#x7684;&#x4EA7;&#x54C1;&#x662F;&#x6CA1;&#x6709;&#x754C;&#x9762;&#x7684;&#xFF0C;&#x6CA1;&#x6CD5;&#x5403;&#x72D7;&#x7CAE;&#x3002;&#x6211;&#x82B1;&#x4E86;&#x4E00;&#x4E2A;&#x661F;&#x671F;&#x7684;&#x65F6;&#x95F4;&#x505A;&#x4E86;&#x4E00;&#x4E2A;&#x53EB;<code> KanKan</code>&#x7684;&#x524D;&#x7AEF;&#x5E94;&#x7528;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4E00;&#x4E2A;&#x661F;&#x671F;&#x4E2D;&#x7684;&#x5927;&#x90E8;&#x5206;&#x662F;&#x5728;&#x5B66;&#x4E60;&#x524D;&#x7AEF;&#x7684;&#x6280;&#x672F;&#xFF0C;&#x4E3B;&#x8981;&#x662F;<code>Web Socket</code> &#x76F8;&#x5173;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x5728;<code>&#x4EBA;&#x50CF;&#x5927;&#x5E73;&#x53F0;</code>&#x548C;&#x524D;&#x7AEF;&#x804A;&#x5E0C;&#x671B;&#x4ED6;&#x4EEC;&#x5F15;&#x5165;<code>Web Socket</code>&#x6280;&#x672F;&#x6765;&#x63D0;&#x9AD8;<code>drawer</code>&#x7684;&#x6548;&#x679C;&#x88AB;&#x4ED6;&#x4EEC;&#x4EE5;&#x590D;&#x6742;&#x62D2;&#x7EDD;&#x540E;&#xFF0C;&#x6211;&#x5C31;&#x4E00;&#x76F4;&#x5E0C;&#x671B;&#x5728;&#x539F;&#x5B50;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;i &#x5C1D;&#x8BD5;&#x4E00;&#x4E0B;<code>Web Socket</code>&#x6280;&#x672F;&#xFF0C;&#x73B0;&#x5728;<code>KanKan</code>&#x5728;&#x5BCC;&#x9E9F;&#x4ED6;&#x4EEC;&#x7684;&#x6539;&#x9020;&#x4E0B;&#xFF08;&#x589E;&#x52A0;&#x4E86;&#x66F4;&#x591A;&#x76D1;&#x63A7;metraic&#xFF09;&#xFF0C;&#x5DF2;&#x7ECF;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x7A33;&#x5B9A;&#x6027;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#xFF0C;&#x5173;&#x952E;&#x8FD8;&#x633A;&#x597D;&#x73A9;&#x7684;</p>
<h4 id="Nebula"><a href="#Nebula" class="headerlink" title="Nebula"></a>Nebula</h4><p>&#x4E0B;&#x534A;&#x5E74;&#x5F00;&#x59CB;&#x8F6C;&#x578B;&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x540E;&#xFF0C;&#x4E5F;&#x82B1;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x65F6;&#x95F4;&#x627F;&#x62C5;&#x4E86;&#x6D4B;&#x8BD5;&#x56E2;&#x961F;&#x6A2A;&#x5411;&#x5DE5;&#x4F5C;&#x65B9;&#x9762;&#x7684;&#x4E00;&#x4E9B;&#x4E8B;&#x60C5;&#xFF0C;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x5C31;&#x662F;CI 2.0&#x7684;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;<code>Nebula</code> &#x9879;&#x76EE;&#x3002; &#x76EE;&#x7684;&#x662F;&#x5E0C;&#x671B;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x6574;&#x4E2A;&#x56E2;&#x961F;&#x7684;&#x6A2A;&#x5411;&#x5DE5;&#x4F5C;&#xFF0C;&#x8BA9;&#x5927;&#x5BB6;&#x7EB5;&#x5411;&#x5DE5;&#x4F5C;&#x4E4B;&#x4F59;&#x7684;&#x65F6;&#x95F4;&#x53EF;&#x4EE5;&#x6295;&#x5165;&#x5230;&#x8FD9;&#x4E2A;&#x5B83;&#x7684;&#x5F00;&#x53D1;&#x4E2D;&#x53BB;&#xFF0C;&#x5E76;&#x4E14;&#x6700;&#x7EC8;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x5230;&#x7EB5;&#x5411;&#x7684;&#x6D4B;&#x8BD5;&#x5DE5;&#x4F5C;&#xFF0C;&#x63D0;&#x9AD8;&#x6574;&#x4F53;&#x7684;&#x7814;&#x53D1;&#x6548;&#x7387;.</p>
<p><code>Nebula</code>&#x7684;&#x6574;&#x4F53;&#x8BBE;&#x8BA1;&#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5C31;&#x662F;<code>TaaS - Test as a Service</code> &#xFF0C;&#x5E0C;&#x671B;&#x628A;&#x6D4B;&#x8BD5;&#x4E5F;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x670D;&#x52A1;&#x653E;&#x5230;&#x6574;&#x4E2A;&#x88AB;&#x6D4B;&#x8BD5;&#x670D;&#x52A1;&#x7684;&#x94FE;&#x8DEF;&#x4E2D;&#x6765;&#x3002;&#x5F53;&#x7136;&#x5B83;&#x6240;&#x805A;&#x7126;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x9762;&#x524D;80%&#x7684;&#x6D4B;&#x8BD5;&#x56E2;&#x961F;&#x5728;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#x548C;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E3B;&#x8981;&#x9488;&#x5BF9;&#x7684;&#x662F;&#x5404;&#x79CD;&#x670D;&#x52A1;&#xFF0C;&#x5176;&#x4E2D;HTTP &#x4E3A;&#x4E3B;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x662F;RPC &#x6216;&#x8005;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x79C1;&#x6709;&#x534F;&#x8BAE;&#x3002;&#x5E0C;&#x671B;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x5DE5;&#x5177;&#x628A;&#x8FD9;&#x4E9B;&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;&#x4E2D;&#x95EE;&#x9898;&#x7EDF;&#x4E00;&#x89E3;&#x51B3;&#x6389;&#xFF0C;&#x5305;&#x62EC;&#x88AB;&#x6D4B;&#x8BD5;&#x670D;&#x52A1;&#x7684;&#x90E8;&#x7F72;&#xFF0C;&#x63A5;&#x53E3;&#x6D4B;&#x8BD5;&#xFF0C;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x7B49;&#xFF0C;&#x5E76;&#x7ED3;&#x5408;Docker Kubernetse&#xFF0C; Jenkins &#xFF0C;ELK&#x7B49;&#x5F00;&#x6E90;&#x5DE5;&#x5177;&#xFF0C;&#x628A;&#x6574;&#x4E2A;&#x5DE5;&#x5177;&#x94FE;&#x7CFB;&#x7EDF;&#x5316;&#xFF0C;&#x5E73;&#x53F0;&#x5316;&#xFF0C;&#x670D;&#x52A1;&#x5316;&#x3002;&#x540E;&#x9762;&#x6709;&#x65F6;&#x95F4;&#x4E5F;&#x4F1A;&#x5199;&#x4E00;&#x7CFB;&#x5217;&#x6587;&#x7AD9;&#x8FC7;&#x6765;&#x4ECB;&#x7ECD; Nebula &#x4E2D;&#x4E00;&#x4E9B;&#x6838;&#x5FC3;&#x7EC4;&#x4EF6;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#xFF0C;&#x5148;&#x653E;&#x4E00;&#x4E2A;&#x8131;&#x654F;&#x8FC7;&#x7684; PPT&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6B22;&#x8FCE;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x7ED9;&#x6211;&#x7559;&#x8A00;&#x8BA8;&#x8BBA;</p>


<iframe src="https://myslide.cn/html_player/10962" width="562.5" height="388.25" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="margin-bottom:5px; max-width: 100%;" allowfullscreen></iframe>	








]]></content>
      <categories>
        <category>年终总结</category>
      </categories>
      <tags>
        <tag>Nebula</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode 杂谈</title>
    <url>/2019/03/04/vscode-introduction/</url>
    <content><![CDATA[<p>&#x5728;&#x4F9D;&#x56FE;&#x7684;&#x65F6;&#x5019;&#x4E3A;&#x4E86;&#x5B89;&#x5229;&#x5468;&#x56F4;&#x7684;&#x540C;&#x5B66;&#x90FD;&#x4F7F;&#x7528;visual studio code &#xFF0C;&#x7279;&#x5730;&#x5199;&#x4E86;&#x4E00;&#x4E2A;ppt&#x7ED9;&#x4ED6;&#x4EEC;&#x505A;&#x4E86;&#x4E00;&#x4E2A;&#x57F9;&#x8BAD;&#x3002;&#x5F53;&#x7136;&#x4E0D;&#x662F;&#x4ECB;&#x7ECD;vscode &#x672C;&#x8EAB;&#x90A3;&#x4E48;&#x65E0;&#x804A;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x516B;&#x5366;&#x4E86;&#x4E00;&#x4E0B;vscode &#x80CC;&#x540E;&#x7684;&#x4F5C;&#x8005;&#x4EE5;&#x53CA;&#x76F8;&#x5173;&#x7684;&#x6280;&#x672F;&#x5B9E;&#x73B0;&#x3002; vscode &#x672C;&#x8EAB;&#x7684;&#x8BBE;&#x8BA1;&#x8FD8;&#x662F;&#x5F88;&#x7ECF;&#x5178;&#x7684;, &#x4E3B;&#x8981;&#x662F;2&#x4E2A;&#x65B9;&#x9762;</p>
<ul>
<li>Plugin &#x89E3;&#x5076;&#xFF0C;&#x4E0D;&#x540C;&#x4E8E;&#x8FC7;&#x53BB; <code>eclipse OSGI</code> &#x7684;&#x5168;&#x90E8;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x6A21;&#x5F0F;&#xFF0C;&#x901A;&#x8FC7; RPC &#x548C;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x4E8E;vscode &#x7684;n <code>extension</code>&#x8FDB;&#x7A0B;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5DE5;&#x4F5C;</li>
<li>[Language Server Protoocl][<a href="https://langserver.org/]">https://langserver.org/]</a> &#xFF0C;&#x6574;&#x4E2A;&#x8BBE;&#x8BA1;&#x975E;&#x5E38;&#x4F18;&#x96C5;&#xFF0C;&#x4F8B;&#x5982;<code>Java Extension</code> &#x5176;&#x5B9E;&#x5C31;&#x6CA1;&#x6709;&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x5F00;&#x53D1;&#xFF0C;&#x57FA;&#x4E8E;<code>eclipse</code> &#x5C01;&#x88C5;&#x4E86;&#x4E00;&#x4E2A;<code>Language Server</code> &#x5C31;&#x5B8C;&#x4E8B;&#x4E86;</li>
</ul>
<p>&#x6709;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x4EE5;&#x770B;&#x4E00;&#x4E0B;PPT &#xFF0C;&#x91CC;&#x9762;&#x8FD8;&#x4ECB;&#x7ECD;&#x4E86;vscode &#x7684;&#x4F5C;&#x8005;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x5806;&#x5927;&#x725B;</p>


<iframe src="https://myslide.cn/html_player/10979" width="562.5" height="388.25" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="margin-bottom:5px; max-width: 100%;" allowfullscreen></iframe>


]]></content>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>JMeter 源码解读 [1] - 配置开发环境</title>
    <url>/2019/03/03/jmeter-source-code-initenviroment/</url>
    <content><![CDATA[<h3 id="&#x51C6;&#x5907;&#x73AF;&#x5883;"><a href="#&#x51C6;&#x5907;&#x73AF;&#x5883;" class="headerlink" title="&#x51C6;&#x5907;&#x73AF;&#x5883;"></a>&#x51C6;&#x5907;&#x73AF;&#x5883;</h3><ol>
<li>&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF; MacOS Mojave</li>
<li>JDK 1.8</li>
<li>Git</li>
<li><a href="https://ant.apache.org/">Apache Ant </a> (Mac &#x7684;&#x5316;&#x53EF;&#x4EE5;&#x7528; <code>brew install ant</code> &#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B89;&#x88C5;)&#xFF0C; &#x7248;&#x672C;&#x7528;&#x6700;&#x65B0;&#x7684;&#x5C31;&#x597D;&#x4E86;</li>
<li><a href="https://www.jetbrains.com/idea/">Intellij</a> &#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#x6700;&#x597D;&#x7684;Java IDE, &#x4E0B;&#x8F7D;&#x4E00;&#x4E2A;&#x6700;&#x65B0;&#x7684;&#x7248;&#x672C;&#x5C31;&#x597D;&#x4E86;</li>
</ol>
<h3 id="clone&#x4EE3;&#x7801;&#x5230;&#x672C;&#x5730;&#x76EE;&#x5F55;&#x4E0B;"><a href="#clone&#x4EE3;&#x7801;&#x5230;&#x672C;&#x5730;&#x76EE;&#x5F55;&#x4E0B;" class="headerlink" title="clone&#x4EE3;&#x7801;&#x5230;&#x672C;&#x5730;&#x76EE;&#x5F55;&#x4E0B;"></a>clone&#x4EE3;&#x7801;&#x5230;&#x672C;&#x5730;&#x76EE;&#x5F55;&#x4E0B;</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; git <span class="built_in">clone</span> git@github.com:apache/jmeter.git</span><br></pre></td></tr></table></figure>

<p>###&#x8FDB;&#x5165;&#x5230;<code>jmeter</code>&#x76EE;&#x5F55;&#xFF0C;&#x4E0B;&#x8F7D;&#x7B2C;&#x4E09;&#x65B9;&#x4F9D;&#x8D56; Jar</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; ant download_jars</span><br></pre></td></tr></table></figure>

<p>&#x7B49;<code>download_jars</code>&#x4EFB;&#x52A1;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x786E;&#x8BA4;&#x4E00;&#x4E0B;<code>lib</code>&#x76EE;&#x5F55;&#x4E0B;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x9700;&#x8981;&#x7684;&#x4F9D;&#x8D56;Jar &#x6587;&#x4EF6;&#x4E86;</p>
<p>###&#x7528; Intellij &#x76F4;&#x63A5;&#x6253;&#x5F00; JMeter</p>
<p>&#x5982;&#x679C;&#x4E4B;&#x524D;&#x5B89;&#x88C5;<code>intellij</code> &#x65F6;&#x5DF2;&#x7ECF;&#x628A;<code>idea</code>&#x6DFB;&#x52A0;&#x5230;&#x4E86;command line&#x7684;&#x53EF;&#x4EE5;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;<code>Jmeter</code>&#x76EE;&#x5F55;&#x4E0B;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x547D;&#x4EE4;&#x884C;&#x6253;&#x5F00;		</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; idea .</span><br></pre></td></tr></table></figure>

<p>###&#x914D;&#x7F6E; IDE </p>
<p>&#x6DFB;&#x52A0; Jar &#x5230; classpath &#xFF0C;&#x70B9;&#x51FB;&#x53F3;&#x4E0A;&#x89D2;&#x7684;&#x84DD;&#x8272;&#x6309;&#x94AE;&#xFF0C;&#x9009;&#x62E9;<code>Project Settings -&gt; Library</code>,&#x9009;&#x62E9;<code>+</code> &#xFF0C;&#x5E76;&#x9009;&#x62E9;<code>Java</code>, &#x7136;&#x540E;&#x9009;&#x62E9;<code>lib</code>&#x540E;&#x70B9;&#x51FB;&#x786E;&#x8BA4;, &#x8FD9;&#x6837;&#x5C31;&#x628A;&#x4E4B;&#x524D;<code>download_jars</code>&#x4E0B;&#x8F7D;&#x5230;<code>lib</code>&#x4E2D;&#x7684;&#x6240;&#x6709;jar&#x6DFB;&#x52A0;&#x5230;&#x4E86;classpath &#x4E2D;</p>
<p><img src="/2019/03/03/jmeter-source-code-initenviroment/Jietu20190303-225136.jpg" alt="&#x8BBE;&#x7F6E;classpath"></p>
<h3 id="&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;"><a href="#&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;" class="headerlink" title="&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;"></a>&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;</h3><p><code>Jmeter</code> &#x7684; <code>Main</code>&#x51FD;&#x6570;&#x5165;&#x53E3;&#x5728;<code>org.apache.jmeter.NewDriver</code>&#x8FD9;&#x4E2A;class&#xFF0C;&#x5728;&#x5B8C;&#x6210; classpath &#x8BBE;&#x7F6E;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4F1A;&#x62A5;&#x5F88;&#x591A;Runtime&#x7684;Exception&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x518D;&#x505A;&#x4E00;&#x4E9B;&#x8BBE;&#x7F6E;</p>
<ol>
<li><p>&#x8BBE;&#x7F6E; <code>jmeter.properties</code>. &#x5982;&#x679C;&#x662F;&#x7528;<code>ant</code>&#x6253;&#x5305;&#x7684;&#x8BDD;&#x4F1A;&#x628A;&#x76F8;&#x5173;&#x7684;resource &#x90FD;&#x6253;&#x5230;Jar&#x5305;&#x5185;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x6765;&#x8FD0;&#x884C;&#x7684;&#x8BDD;&#xFF0C;&#x9700;&#x8981;&#x663E;&#x793A;&#x6307;&#x5B9A;&#x4E00;&#x4E0B;<code>jmeter.properties</code> &#x5426;&#x5219;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x63D0;&#x793A;&#x627E;&#x4E0D;&#x5230;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x4FEE;&#x6539;&#x8FD0;&#x884C;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#xFF0C;&#x624B;&#x52A8;&#x8BBE;&#x7F6E;<code>jmeter.propreties</code>, &#x5728;&#x8FD9;&#x91CC;&#x6211;&#x7528;&#x7684;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;</p>
<p><img src="/2019/03/03/jmeter-source-code-initenviroment/Jietu20190303-233230.jpg" alt="&#x914D;&#x7F6E;jmeter.properties"></p>
</li>
<li><p>&#x4FEE;&#x6539;&#x4E00;&#x4E0B;<code>jmeter.properties</code>, &#x628A;&#x7B2C;37&#x884C;&#x6CE8;&#x91CA;&#x6253;&#x5F00;&#x5C31;&#x597D;&#xFF0C;&#x5426;&#x5219;&#x7CFB;&#x7EDF;&#x754C;&#x9762;&#x4F1A;&#x662F;&#x4E00;&#x5806;&#x4E71;&#x7801;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x9009;&#x62E9;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x6539;&#x6210;&#x82F1;&#x6587;&#x5C31;&#x597D;&#x4E86;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">language=en</span><br></pre></td></tr></table></figure>


</li>
<li><p>&#x6700;&#x540E;&#x6539;&#x52A8;&#x4E00;&#x4E0B;<code>org.apache.jmeter.NewDriver</code>&#x4E2D;&#x7B2C;83&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x8BBE;&#x7F6E;&#x4E00;&#x4E0B;&#x5F53;&#x524D;<code>jmeter</code>&#x76EE;&#x5F55;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84; (&#x4E4B;&#x524D;&#x60F3;&#x7528;System Property&#x6765;&#x8BBE;&#x7F6E;&#xFF0C;&#x597D;&#x50CF;&#x6CA1;&#x4EC0;&#x4E48;&#x5C0F;&#x59D1;&#x54E6;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x6539;&#x6E90;&#x4EE3;&#x7801;&#x597D;&#x4E86;)</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (tok.countTokens() == <span class="number">1</span></span><br><span class="line">                || (tok.countTokens()  == <span class="number">2</span> <span class="comment">// Java on Mac OS can add a second entry to the initial classpath</span></span><br><span class="line">                    &amp;&amp; OS_NAME_LC.startsWith(<span class="string">&quot;mac os x&quot;</span>)<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                   )</span><br><span class="line">           ) {</span><br><span class="line">            <span class="type">File</span> <span class="variable">jar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(tok.nextToken());</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                tmpDir = jar.getCanonicalFile().getParentFile().getParent();</span><br><span class="line">            } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                tmpDir = <span class="literal">null</span>;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {<span class="comment">// e.g. started from IDE with full classpath</span></span><br><span class="line">            tmpDir = System.getProperty(<span class="string">&quot;jmeter.home&quot;</span>,<span class="string">&quot;/Users/ylshao/code/github/jmeter&quot;</span>);<span class="comment">// Allow override $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line">            <span class="keyword">if</span> (tmpDir.length() == <span class="number">0</span>) {</span><br><span class="line">                <span class="type">File</span> <span class="variable">userDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(System.getProperty(<span class="string">&quot;user.dir&quot;</span>));<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                tmpDir = userDir.getAbsoluteFile().getParent();</span><br><span class="line">            }</span><br><span class="line">        } </span><br></pre></td></tr></table></figure>



<h3 id="&#x5927;&#x529F;&#x544A;&#x6210;"><a href="#&#x5927;&#x529F;&#x544A;&#x6210;" class="headerlink" title="&#x5927;&#x529F;&#x544A;&#x6210;"></a>&#x5927;&#x529F;&#x544A;&#x6210;</h3><p>&#x597D;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x542F;&#x52A8;&#x4E00;&#x4E0B;<code>org.apache.jmeter.NewDriver &#x8FD9;&#x4E2A;&#x5165;&#x53E3;&#x7A0B;&#x5E8F;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x719F;&#x6089;&#x7684;</code>Jmeter &#x754C;&#x9762;&#x4E86;</p>
<p><img src="/2019/03/03/jmeter-source-code-initenviroment/Jietu20190303-233942@2x.jpg" alt="&#x8BBE;&#x7F6E;classpath"></p>
<h3 id="&#x95EE;&#x9898;&#x89E3;&#x7B54;"><a href="#&#x95EE;&#x9898;&#x89E3;&#x7B54;" class="headerlink" title="&#x95EE;&#x9898;&#x89E3;&#x7B54;"></a>&#x95EE;&#x9898;&#x89E3;&#x7B54;</h3><ol>
<li>&#x8FC7;&#x7A0B;&#x4E2D;&#x5982;&#x679C;&#x9047;&#x5230;&#x4E00;&#x4E9B;<code>test</code>&#x76EE;&#x5F55;&#x63D0;&#x793A;&#x7F16;&#x8BD1;&#x5931;&#x8D25;&#x7684;&#x5316;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;<code>Project Settings - Module</code>&#x4E2D;&#x628A;&#x4ED6;&#x4EEC;&#x5220;&#x9664;&#x6389;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x53CD;&#x6B63;&#x6E90;&#x7801;&#x5206;&#x6790;&#x6682;&#x65F6;&#x4E5F;&#x7528;&#x4E0D;&#x5230;</li>
</ol>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [2] - 目录结构分析</title>
    <url>/2019/03/05/jmeter-directory-structure/</url>
    <content><![CDATA[<p>&#x672C;&#x6765;&#x662F;&#x51C6;&#x5907;&#x81EA;&#x5DF1;&#x5199;&#x4E00;&#x4E2A;&#x5173;&#x4E8E;<code>Jmeter</code> &#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x78B0;&#x5DE7;&#x770B;&#x5230;&#x4E86;&#x8FD9;&#x7BC7;  <a href="https://wiki.apache.org/jmeter/DeveloperManual/DirStructure">&#x5B98;&#x65B9;&#x6587;&#x6863;</a> &#x5185;&#x5BB9;&#x57FA;&#x672C;&#x548C;&#x6211;&#x8981;&#x5199;&#x7684;&#x5DEE;&#x4E0D;&#x90FD;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x62FF;&#x6765;&#x7FFB;&#x8BD1;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#xFF08;<u>&#x5BF9;&#x4E8E;&#x5176;&#x4E2D;&#x4E00;&#x4E9B;&#x8FC7;&#x65F6;&#x7684;&#x5185;&#x5BB9;&#x4F1A;&#x76F4;&#x63A5;&#x5220;&#x9664;&#x6389;</u>&#xFF09;</p>
<p>JMeter &#x7684;&#x4EE3;&#x7801;&#x76EE;&#x5F55;&#x4E3B;&#x8981;&#x662F;&#x6839;&#x636E;&#x652F;&#x6301;&#x7684;&#x534F;&#x8BAE;&#x548C;&#x529F;&#x80FD;&#x6765;&#x7EC4;&#x7EC7;&#x7684;&#x3002;&#x8FD9;&#x6837;&#x8BBE;&#x8BA1;&#x7684;&#x597D;&#x5904;&#x662F;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x7F16;&#x8BD1;&#x4E00;&#x4E2A;&#x53EA;&#x652F;&#x6301;&#x67D0;&#x79CD;&#x534F;&#x8BAE;&#x7684;JMeter &#x5305;&#x800C;&#x4E0D;&#x7528;&#x7F16;&#x8BD1;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x63A5;&#x4E0B;&#x6765;&#x4F1A;&#x7ED9;&#x5230;&#x66F4;&#x591A;JMeter &#x4EE3;&#x7801;&#x76EE;&#x5F55;&#x7684;&#x89E3;&#x6790;&#xFF0C;&#x56E0;&#x4E3A;&#x5927;&#x591A;&#x6570;&#x7684;JMeter&#x5F00;&#x53D1;&#x8005;&#x662F;&#x7528;<code>ecipse</code>&#x6765;&#x505A;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x7528;eclipse &#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x6765;&#x505A;&#x4ECB;&#x7ECD;</p>
<h3 id="&#x9876;&#x90E8;&#x76EE;&#x5F55;"><a href="#&#x9876;&#x90E8;&#x76EE;&#x5F55;" class="headerlink" title="&#x9876;&#x90E8;&#x76EE;&#x5F55;"></a>&#x9876;&#x90E8;&#x76EE;&#x5F55;</h3><ul>
<li>bin - &#x5305;&#x542B;.bat &#x548C; . sh &#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x7528;&#x4E8E;&#x542F;&#x52A8;JMeter&#x3002;&#x540C;&#x65F6;&#x4E5F;&#x5305;&#x542B;&#x4E86;ApacheJmeter.jar &#x548C; &#x76F8;&#x5173;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</li>
<li>build - build &#x811A;&#x672C;&#x521B;&#x5EFA;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x5B58;&#x653E;&#x4E00;&#x4E9B;build&#x8FC7;&#x7A0B;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;</li>
<li>dist - build &#x811A;&#x672C;&#x521B;&#x5EFA;&#x997F;&#x76EE;&#x5F55;&#xFF0C;&#x5B58;&#x653E;&#x6700;&#x540E;&#x8F93;&#x51FA;&#x7684;&#x6587;&#x4EF6;</li>
<li>docs - JMeter &#x76F8;&#x5173;&#x76EE;&#x5F55;</li>
<li>extras - ant &#x76F8;&#x5173;&#x7684;&#x5176;&#x4ED6;&#x6587;&#x4EF6;</li>
<li>lib - &#x5305;&#x542B;JMeter &#x4F9D;&#x8D56;&#x7684;&#x76F8;&#x5173;&#x6587;&#x4EF6;</li>
<li>src - &#x5B50;&#x76EE;&#x5F55;&#x5305;&#x542B;&#x652F;&#x6301;&#x7684;&#x534F;&#x8BAE;&#x548C;&#x76F8;&#x5173;&#x7EC4;&#x4EF6;&#x4EE3;&#x7801;</li>
<li>test - &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x76EE;&#x5F55;</li>
<li>xdocs - &#x7528;&#x4E8E;&#x751F;&#x6210;&#x6587;&#x6863;&#x7684;xml&#x6587;&#x4EF6;&#xFF0C;JMeter&#x7528;xml&#x6765;&#x751F;&#x6210;&#x6587;&#x6863;</li>
</ul>
<h3 id="Lib-&#x76EE;&#x5F55;&#x7ED3;&#x6784;"><a href="#Lib-&#x76EE;&#x5F55;&#x7ED3;&#x6784;" class="headerlink" title="Lib &#x76EE;&#x5F55;&#x7ED3;&#x6784;"></a>Lib &#x76EE;&#x5F55;&#x7ED3;&#x6784;</h3><ul>
<li>ext - &#x5305;&#x542B; JMeter &#x6838;&#x5FC3;&#x548C;&#x534F;&#x8BAE;&#x76F8;&#x5173;&#x7684; jar &#x6587;&#x4EF6;&#x3002;&#x628A;&#x8FD9;&#x4E9B; jar &#x6587;&#x4EF6;&#x72EC;&#x7ACB;&#x51FA;&#x6765;&#x539F;&#x56E0;&#x662F;&#x5982;&#x679C;&#x90FD;&#x653E;&#x5728;<code>lib/</code>&#x76EE;&#x5F55;&#x91CC;&#x542F;&#x52A8;&#x901F;&#x5EA6;&#x4F1A;&#x53D8;&#x6162;</li>
<li>opt - &#x4E00;&#x4E9B;&#x53EF;&#x9009;&#x7684; jar &#x7528;&#x4E8E; JMeter &#x7684;&#x4E00;&#x4E9B;&#x53EF;&#x9009;&#x7684;&#x529F;&#x80FD;&#x3002;&#x8FD9;&#x4E9B; jar &#x53EA;&#x6709;&#x5728;build &#x548C; &#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x88AB;&#x5F15;&#x5165;&#x3002;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x4E0B;&#x6765;&#x53EF;&#x9009;&#x7684; jar &#x653E;&#x5230;&#x6574;&#x4E2A;&#x76EE;&#x5F55;&#x91CC;</li>
</ul>
<h3 id="Src-&#x76EE;&#x5F55;&#x7ED3;&#x6784;"><a href="#Src-&#x76EE;&#x5F55;&#x7ED3;&#x6784;" class="headerlink" title="Src &#x76EE;&#x5F55;&#x7ED3;&#x6784;"></a>Src &#x76EE;&#x5F55;&#x7ED3;&#x6784;</h3><ul>
<li>core - JMeter &#x6838;&#x5FC3;&#x529F;&#x80FD;&#x548C;&#x63A5;&#x53E3;&#x7684;&#x4EE3;&#x7801;&#x76EE;&#x5F55;&#xFF0C;&#x4E5F;&#x662F;&#x6211;&#x4EEC;&#x5206;&#x6790;&#x7684;&#x91CD;&#x70B9;</li>
<li>components - &#x548C;&#x534F;&#x8BAE;&#x65E0;&#x5173;&#x7684;&#x4E00;&#x4E9B;&#x7C7B;&#xFF0C;&#x4F8B;&#x5982;&#x534F;&#x8BAE;&#xFF0C; GUI &#x7EC4;&#x4EF6;&#x7B49;</li>
<li>examples - &#x4E00;&#x4E9B;sampler&#x7684;&#x4F8B;&#x5B50;</li>
<li>functions - &#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x7EC4;&#x4EF6;&#x4F1A;&#x4F7F;&#x7528;&#x7684;&#x6807;&#x51C6;&#x51FD;&#x6570;</li>
<li>jorphan - &#x516C;&#x5171;&#x65B9;&#x6CD5;&#x7C7B; &#xFF08;<a href="https://markmail.org/message/xisc5fw2dr4bw4uy%EF%BC%89">https://markmail.org/message/xisc5fw2dr4bw4uy&#xFF09;</a></li>
<li>protocol - &#x4E0D;&#x540C;&#x7684;&#x534F;&#x8BAE;&#x652F;&#x6301;&#x4EE3;&#x7801;</li>
<li>junit - &#x6D4B;&#x8BD5;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801;</li>
</ul>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [3] - 程序入口 NewDriver</title>
    <url>/2019/03/05/jmeter-new-driver/</url>
    <content><![CDATA[<p><code>NewDriver</code> &#x7684;&#x5B8C;&#x6574;&#x8DEF;&#x5F84;&#x662F;<code>org.apache.jmeter.NewDriver</code> , &#x5B83;&#x662F;&#x6574;&#x4E2A;<code>JMeter</code> &#x7684;&#x5165;&#x53E3;&#x7C7B;&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x63D0;&#x4F9B;&#x4E86;main &#x51FD;&#x6570;&#x7528;&#x4E8E;&#x542F;&#x52A8;<code>JMeter</code>.</p>
<p>&#x4E0D;&#x8FC7;&#x5728;&#x542F;&#x52A8;&#x7A0B;&#x5E8F; main &#x51FD;&#x6570;&#x4E4B;&#x524D;&#xFF0C;<code>NewDriver</code>&#x4F1A;&#x505A;&#x4E00;&#x4E9B;&#x8FD0;&#x884C;&#x73AF;&#x5883;&#x7684;&#x68C0;&#x67E5;&#x548C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x4E3B;&#x8981;&#x901A;&#x8FC7; <code>static initializer</code> &#x7684;&#x65B9;&#x5F0F;&#x6765;&#x505A;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x521D;&#x59CB;&#x5316;&#x7684;&#x4EE3;&#x7801;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JAVA_CLASS_PATH</span> <span class="operator">=</span> <span class="string">&quot;java.class.path&quot;</span>;<span class="comment">// $NON-NLS-1$</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5176;&#x4ED6;&#x7701;&#x7565;&#x4E86;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x4E0D;&#x8D34;&#x8FD9;&#x91CC;&#x4E86;&#xFF0C;&#x5426;&#x5219;&#x592A;&#x957F;&#x4E86;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x9759;&#x6001;&#x521D;&#x59CB;&#x5316;&#x7684;&#x4EE3;&#x7801;&#x5757;</span></span><br><span class="line"><span class="keyword">static</span> {</span><br><span class="line">        <span class="keyword">final</span> List&lt;URL&gt; jars = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">initiaClasspath</span> <span class="operator">=</span> System.getProperty(JAVA_CLASS_PATH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Find JMeter home dir from the initial classpath</span></span><br><span class="line">        String tmpDir;</span><br><span class="line">        <span class="type">StringTokenizer</span> <span class="variable">tok</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(initiaClasspath, File.pathSeparator);</span><br><span class="line">        <span class="keyword">if</span> (tok.countTokens() == <span class="number">1</span></span><br><span class="line">                || (tok.countTokens()  == <span class="number">2</span> <span class="comment">// Java on Mac OS can add a second entry to the initial classpath</span></span><br><span class="line">                    &amp;&amp; OS_NAME_LC.startsWith(<span class="string">&quot;mac os x&quot;</span>)<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                   )</span><br><span class="line">           ) {</span><br><span class="line">            <span class="type">File</span> <span class="variable">jar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(tok.nextToken());</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                tmpDir = jar.getCanonicalFile().getParentFile().getParent();</span><br><span class="line">            } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                tmpDir = <span class="literal">null</span>;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {<span class="comment">// e.g. started from IDE with full classpath</span></span><br><span class="line">            tmpDir = System.getProperty(<span class="string">&quot;jmeter.home&quot;</span>,<span class="string">&quot;/Users/ylshao/code/github/jmeter&quot;</span>);<span class="comment">// Allow override $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line">            <span class="keyword">if</span> (tmpDir.length() == <span class="number">0</span>) {</span><br><span class="line">                <span class="type">File</span> <span class="variable">userDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(System.getProperty(<span class="string">&quot;user.dir&quot;</span>));<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                tmpDir = userDir.getAbsoluteFile().getParent();</span><br><span class="line">            }</span><br><span class="line">      }</span><br><span class="line">        JMETER_INSTALLATION_DIRECTORY=tmpDir; <span class="comment">// &#x83B7;&#x53D6; jmeter &#x5F53;&#x524D;&#x5B89;&#x88C5;&#x76EE;&#x5F55;</span></span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x4E2A;&#x662F;&#x9759;&#x6001;&#x521D;&#x59CB;&#x5316;&#x4EE3;&#x7801;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x4E3B;&#x8981;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5224;&#x65AD; JMeter &#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x5BF9;&#x4E8E;&#x901A;&#x8FC7;<code>jmeter.sh</code> &#x8FD0;&#x884C;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x901A;&#x8FC7; classpath &#x6765;&#x63A8;&#x5BFC; parent &#xFF0C;&#x5426;&#x5219;&#x5C31;&#x901A;&#x8FC7;&#x8BFB;&#x53D6;&#x7CFB;&#x7EDF;&#x53D8;&#x91CF; <code>jmeter.home</code> &#x6765;&#x83B7;&#x53D6;&#xFF0C;&#x6700;&#x540E;&#x628A;tmpDir &#x8D4B;&#x503C;&#x7ED9; <code>JMETER_INSTALLATION_DIRECTORY</code> &#x53D8;&#x91CF;&#xFF0C;<code>JMETER_INSTALLATION_DIRECTORY</code> &#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x8FD8;&#x662F;&#x5F88;&#x5F88;&#x91CD;&#x8981;&#x7684;&#xFF0C;&#x7528;&#x6765;&#x63A8;&#x5BFC;&#x6574;&#x4E2A;jmeter &#x540E;&#x7EED;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;, &#x770B;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Add standard jar locations to initial classpath</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">classpath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        File[] libDirs = <span class="keyword">new</span> <span class="title class_">File</span>[] { <span class="keyword">new</span> <span class="title class_">File</span>(JMETER_INSTALLATION_DIRECTORY + File.separator + <span class="string">&quot;lib&quot;</span>),<span class="comment">// $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">File</span>(JMETER_INSTALLATION_DIRECTORY + File.separator + <span class="string">&quot;lib&quot;</span> + File.separator + <span class="string">&quot;ext&quot;</span>),<span class="comment">// $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">File</span>(JMETER_INSTALLATION_DIRECTORY + File.separator + <span class="string">&quot;lib&quot;</span> + File.separator + <span class="string">&quot;junit&quot;</span>)};<span class="comment">// $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;<code>JMETER_INSTALLATION_DIRECTORY</code>,&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x76F8;&#x5173; lib &#x548C;&#x5176;&#x5B50;&#x76EE;&#x5F55;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5E76;&#x8BFB;&#x53D6;&#x5230;&#x4ED6;&#x4EEC;&#x4E0B;&#x9762;&#x6240;&#x6709;&#x7684;jar &#x6587;&#x4EF6;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x76EE;&#x7684;&#x662F;&#x901A;&#x8FC7;&#x8FD9;&#x4E9B; jar &#x6587;&#x4EF6;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; <code>classloader</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (File libJar : libJars) {</span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> libJar.getPath();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// Fix path to allow the use of UNC URLs</span></span><br><span class="line">                    <span class="keyword">if</span> (usesUNC) {</span><br><span class="line">                        <span class="keyword">if</span> (s.startsWith(<span class="string">&quot;\\\\&quot;</span>) &amp;&amp; !s.startsWith(<span class="string">&quot;\\\\\\&quot;</span>)) {<span class="comment">// $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line">                            s = <span class="string">&quot;\\\\&quot;</span> + s;<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                        } <span class="keyword">else</span> <span class="keyword">if</span> (s.startsWith(<span class="string">&quot;//&quot;</span>) &amp;&amp; !s.startsWith(<span class="string">&quot;///&quot;</span>)) {<span class="comment">// $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line">                            s = <span class="string">&quot;//&quot;</span> + s;<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                        }</span><br><span class="line">                    } <span class="comment">// usesUNC</span></span><br><span class="line"></span><br><span class="line">                    jars.add(<span class="keyword">new</span> <span class="title class_">File</span>(s).toURI().toURL());<span class="comment">// See Java bug 4496398</span></span><br><span class="line">                    classpath.append(CLASSPATH_SEPARATOR);</span><br><span class="line">                    classpath.append(s);</span><br><span class="line">                   } <span class="keyword">catch</span> (MalformedURLException e) { <span class="comment">// NOSONAR</span></span><br><span class="line">                    EXCEPTIONS_IN_INIT.add(<span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;Error adding jar:&quot;</span>+libJar.getAbsolutePath(), e));</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ClassFinder needs the classpath</span></span><br><span class="line">        System.setProperty(JAVA_CLASS_PATH, initiaClasspath + classpath.toString());</span><br><span class="line">		<span class="comment">// ### &#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x7684;classloader</span></span><br><span class="line">        loader = AccessController.doPrivileged(</span><br><span class="line">                (PrivilegedAction&lt;DynamicClassLoader&gt;) () -&gt;</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">DynamicClassLoader</span>(jars.toArray(<span class="keyword">new</span> <span class="title class_">URL</span>[jars.size()]))</span><br><span class="line">        );</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<p>&#x76F4;&#x5230;&#x521B;&#x5EFA;&#x4E86; <code>loader</code> &#x8FD9;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684; <code>classloader</code> &#x540E;&#xFF0C;&#x6574;&#x4E2A;&#x9759;&#x6001;&#x521D;&#x59CB;&#x5316;&#x624D;&#x7B97;&#x7ED3;&#x675F;</p>
<p>&#x6700;&#x540E;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E9B; main &#x51FD;&#x6570;&#xFF0C;&#x903B;&#x8F91;&#x5C31;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x4E86;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">if</span>(!EXCEPTIONS_IN_INIT.isEmpty()) {</span><br><span class="line">            System.err.println(<span class="string">&quot;Con figuration error during init, see exceptions:&quot;</span>+exceptionsToString(EXCEPTIONS_IN_INIT)); <span class="comment">// NOSONAR Intentional System.err use</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            Thread.currentThread().setContextClassLoader(loader);</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            setLoggingProperties(args);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="comment">// Only set property if it has not been set explicitely </span></span><br><span class="line">                <span class="keyword">if</span>(System.getProperty(HEADLESS_MODE_PROPERTY) == <span class="literal">null</span> &amp;&amp; shouldBeHeadless(args)) {</span><br><span class="line">                    System.setProperty(HEADLESS_MODE_PROPERTY, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">                }</span><br><span class="line">                Class&lt;?&gt; initialClass = loader.loadClass(<span class="string">&quot;org.apache.jmeter.JMeter&quot;</span>);<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">instance</span> <span class="operator">=</span> initialClass.getDeclaredConstructor().newInstance();</span><br><span class="line">                <span class="type">Method</span> <span class="variable">startup</span> <span class="operator">=</span> initialClass.getMethod(<span class="string">&quot;start&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] { <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">0</span>].getClass() });<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                startup.invoke(instance, <span class="keyword">new</span> <span class="title class_">Object</span>[] { args });</span><br><span class="line">            } <span class="keyword">catch</span>(Throwable e){ <span class="comment">// NOSONAR We want to log home directory in case of exception</span></span><br><span class="line">                e.printStackTrace(); <span class="comment">// NOSONAR No logger at this step</span></span><br><span class="line">                System.err.println(<span class="string">&quot;JMeter home directory was detected as: &quot;</span>+JMETER_INSTALLATION_DIRECTORY); <span class="comment">// NOSONAR Intentional System.err use</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>

<ol>
<li>&#x5148;&#x5224;&#x65AD;&#x4E00;&#x4E0B;<code>EXCEPTIONS_IN_INIT</code> &#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#x5C31;&#x8868;&#x793A;&#x9759;&#x6001;&#x521D;&#x59CB;&#x5316;&#x6709;&#x5F02;&#x5E38;&#xFF0C;&#x76F4;&#x63A5;&#x9000;&#x51FA;&#x8FDB;&#x7A0B;&#x5E76;&#x6253;&#x5370;&#x9519;&#x8BEF;&#x4FE1;&#x606F;</li>
<li>&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x65E5;&#x5FD7;&#x914D;&#x7F6E;</li>
<li>&#x7528;&#x521A;&#x624D;&#x521D;&#x59CB;&#x5316;&#x7684; <code>classloader</code> &#x52A0;&#x8F7D;&#x7C7B; <code>org.apache.jmeter.JMeter</code> &#x7136;&#x540E;&#x901A;&#x8FC7; java &#x53CD;&#x5C04;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8C03;&#x7528; <code>org.apache.jmeter.JMeter</code> &#x7684; <code>start</code> &#x65B9;&#x6CD5;&#xFF0C;&#x6B63;&#x5F0F;&#x5B8C;&#x6210; JMeter &#x7684;&#x542F;&#x52A8;</li>
</ol>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [6] - 核心类 org.apache.jmeter.engine.StandardJMeterEngine</title>
    <url>/2019/03/07/StandardJMeterEngine/</url>
    <content><![CDATA[<p>&#x6211;&#x4EEC;&#x8D8A;&#x6765;&#x7EA6;&#x8D8A;&#x63A5;&#x8FD1; <code>JMeter</code> &#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;<code>StandardJMeterEngine</code> &#x8FD9;&#x4E2A;&#x7C7B;&#x5B9E;&#x73B0;&#x4E86;&#x54EA;&#x4E9B;&#x63A5;&#x53E3;&#xFF0C;&#x9996;&#x5148;&#x662F;<code>JMeterEngine</code>, &#x5B83;&#x5B9A;&#x4E49;&#x4E86; JMeterEngine &#x7684;&#x4E00;&#x4E9B;&#x6838;&#x5FC3;&#x63A5;&#x53E3; &#xFF0C;&#x5176;&#x4E2D;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x662F;&#x4E0B;&#x9762;&#x51E0;&#x4E2A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Configure engine</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> testPlan the test plan</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HashTree testPlan)</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Runs the test</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> JMeterEngineException if an error occurs</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">runTest</span><span class="params">()</span> <span class="keyword">throws</span> JMeterEngineException;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Stop test immediately interrupting current samplers</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">default</span> <span class="keyword">void</span> <span class="title function_">stopTest</span><span class="params">()</span> {</span><br><span class="line">       stopTest(<span class="literal">true</span>);</span><br><span class="line">   }</span><br></pre></td></tr></table></figure>

<p>&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x65B9;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x5355;&#x673A;&#x7248;&#x672C;&#x7684;<code>StandardJMeterEngine</code> , &#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x5206;&#x5E03;&#x5F0F;&#x6A21;&#x5F0F;&#x4E0B;&#x7684;<code>ClientJmeterEngine</code></p>
<p>&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x662F;<code>Runnable</code> &#xFF0C;&#x8FD9;&#x4E2A;&#x5F88;&#x663E;&#x7136;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x731C;&#x5230;&#xFF0C;<code>StandardJMeterEngine</code> &#x81EA;&#x8EAB;&#x4F1A;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x679C;&#x4E0D;&#x5176;&#x7136;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x5230;<code>StandardJMeterEngine</code>&#x7684;<code>runTest()</code>&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5C31;&#x662F;&#x628A;&#x81EA;&#x5DF1;<code>this</code> &#x653E;&#x5230;&#x4E00;&#x4E2A;Thread &#x91CC;&#x6765;&#x8C03;&#x7528;</p>
<p>``</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">runTest</span><span class="params">()</span> <span class="keyword">throws</span> JMeterEngineException {</span><br><span class="line">    <span class="keyword">if</span> (host != <span class="literal">null</span>){</span><br><span class="line">        <span class="type">long</span> now=System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;Starting the test on host &quot;</span> + host + <span class="string">&quot; @ &quot;</span>+<span class="keyword">new</span> <span class="title class_">Date</span>(now)+<span class="string">&quot; (&quot;</span>+now+<span class="string">&quot;)&quot;</span>); <span class="comment">// NOSONAR Intentional</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">runningThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="built_in">this</span>, <span class="string">&quot;StandardJMeterEngine&quot;</span>);</span><br><span class="line">        runningThread.start();</span><br><span class="line">    } <span class="keyword">catch</span> (Exception err) {</span><br><span class="line">        stopTest();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">JMeterEngineException</span>(err);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x518D;&#x6765;&#x770B;&#x4E00;&#x4E0B;<code>run()</code>&#x7684;&#x8FD9;&#x4E2A;Runnable &#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x600E;&#x4E48;&#x6837;&#x7684;, &#x9996;&#x5148;&#x770B;&#x5230;&#x7B2C;&#x4E00;&#x884C;&#x4EE3;&#x7801; <code>log.info(&quot;Running the test!&quot;);</code> &#x54C8;&#x54C8;&#xFF0C;&#x603B;&#x7B97;&#x5230;&#x8FD9;&#x91CC;&#x65F6;&#x771F;&#x7684;&#x5F00;&#x59CB;&#x6267;&#x884C;case &#x4E86;&#xFF0C;&#x54CE;&#xFF0C;&#x8FD9;&#x4E00;&#x5C42;&#x5C42;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x592A;&#x8270;&#x8F9B;&#x4E86;&#xFF01;&#xFF01;&#xFF01;</p>
<p>&#x9996;&#x5148;&#x770B;&#x4E00;&#x4E0B;<code>JMeterContextService.startTest();</code> &#x8FD9;&#x4E2A;&#x662F;&#x7528;&#x6765;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x8FD0;&#x884C;&#x542F;&#x52A8;&#x7684;&#x72B6;&#x6001;&#xFF0C;<code>JMeterContextService</code> &#x4ECE;&#x540D;&#x5B57;&#x6765;&#x770B;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x4E0A;&#x4E0B;&#x6587;&#x7684;&#x7C7B;&#xFF0C;&#x5B83;&#x662F;&#x5728;&#x6574;&#x4E2A;JMeter&#x7684;&#x7EBF;&#x7A0B;&#x4E4B;&#x95F4;&#x662F;&#x5171;&#x4EAB;&#x7684;&#xFF0C;&#x9664;&#x4E86;&#x6709;&#x4E00;&#x4E2A;<code>threadContext</code> &#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x6574;&#x4E2A;&#x662F;&#x4E00;&#x4E2A;<code>ThreadLocal</code>&#x7684;&#x72EC;&#x4EAB;&#xFF0C;&#x662F;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x72EC;&#x4EAB;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x7B80;&#x5355;&#x770B;&#x4E00;&#x4E9B;<code>JMeterContextService</code> &#x5C31;&#x80FD;&#x66F4;&#x6E05;&#x6670;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x4E86;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">JMeterContextService</span> {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;JMeterContext&gt; threadContext = ThreadLocal.withInitial(JMeterContext::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@GuardedBy(JMeterContextService.class)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">testStart</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@GuardedBy(JMeterContextService.class)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">numberOfActiveThreads</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@GuardedBy(JMeterContextService.class)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">numberOfThreadsStarted</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@GuardedBy(JMeterContextService.class)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">numberOfThreadsFinished</span> <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p>&#x518D;&#x7EE7;&#x7EED;&#x505A;&#x4E86;&#x4E00;&#x4E9B;&#x7B80;&#x7B54;&#x7684;&#x521D;&#x59CB;&#x5316;&#x540E;&#xFF0C;&#x4F1A;&#x5148;&#x5F00;&#x59CB;&#x505A;&#x7528;<code>setup thread group </code> &#x505A;&#x4E00;&#x4E9B;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5DE5;&#x4F5C; &#xFF0C;&#x8FD9;&#x91CC;&#x4F1A;&#x542F;&#x52A8; N &#x4E2A;&#x7EBF;&#x7A0B;&#x7EC4;&#x6765;&#x505A;&#x521D;&#x59CB;&#x5316;&#xFF0C;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (setupIter.hasNext()) {</span><br><span class="line">            log.info(<span class="string">&quot;Starting setUp thread groups&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> (running &amp;&amp; setupIter.hasNext()) {<span class="comment">//for each setup thread group</span></span><br><span class="line">                <span class="type">AbstractThreadGroup</span> <span class="variable">group</span> <span class="operator">=</span> setupIter.next();</span><br><span class="line">                groupCount++;</span><br><span class="line">                <span class="type">String</span> <span class="variable">groupName</span> <span class="operator">=</span> group.getName();</span><br><span class="line">                log.info(<span class="string">&quot;Starting setUp ThreadGroup: {} : {} &quot;</span>, groupCount, groupName);</span><br><span class="line">                startThreadGroup(group, groupCount, setupSearcher, testLevelElements, notifier);</span><br><span class="line">                <span class="keyword">if</span> (serialized &amp;&amp; setupIter.hasNext()) {</span><br><span class="line">                    log.info(<span class="string">&quot;Waiting for setup thread group: {} to finish before starting next setup group&quot;</span>, </span><br><span class="line">                            groupName);</span><br><span class="line">                    group.waitThreadsStopped();</span><br><span class="line">                }</span><br><span class="line">            }    </span><br><span class="line">            log.info(<span class="string">&quot;Waiting for all setup thread groups to exit&quot;</span>);</span><br><span class="line">            <span class="comment">//wait for all Setup Threads To Exit</span></span><br><span class="line">            waitThreadsStopped();</span><br><span class="line">            log.info(<span class="string">&quot;All Setup Threads have ended&quot;</span>);</span><br><span class="line">            groupCount=<span class="number">0</span>;</span><br><span class="line">            JMeterContextService.clearTotalThreads();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        groups.clear();</span><br></pre></td></tr></table></figure>

<p>&#x5728; <code>setup thread group</code> &#x5B8C;&#x6210;&#x4E00;&#x4E9B;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5DE5;&#x4F5C;&#x540E;&#xFF0C;&#x4F1A;&#x4E3B;&#x52A8;&#x51FA;&#x53D1;&#x4E00;&#x6B21; <code>JMeterUtils.helpGC();</code>  GC &#x7684;&#x52A8;&#x4F5C;&#xFF0C;&#x540E;&#x9762;&#x5C31;&#x662F;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x7684;<code>Thread Group</code> &#x548C; &#x6700;&#x540E;&#x7684;<code>Post Thread Group</code> &#xFF0C;&#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#x548C;<code>setup thread group</code> &#x7684;&#x8C03;&#x7528;&#x90FD;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#xFF0C;&#x4EE5;&#x4E3A;&#x5B9E;&#x9645;&#x6267;&#x884C;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x548C;&#x5E76;&#x53D1;&#x7EBF;&#x7A0B;&#x7684;&#x7BA1;&#x7406;&#x90FD;&#x5728; <code>ThreaeGroup</code> &#x4E2D; </p>
<p>&#x4ECA;&#x5929;&#x5C31;&#x8BF4;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x4E0B;&#x6B21;&#x4F1A;&#x5355;&#x72EC;&#x6765;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B; <code>JMeter</code> &#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;</p>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [4] - HashTree</title>
    <url>/2019/03/06/hashtree/</url>
    <content><![CDATA[<h3 id="HashTree"><a href="#HashTree" class="headerlink" title="HashTree"></a>HashTree</h3><p>&#x9996;&#x5148;&#x8981;&#x7279;&#x522B;&#x8BF4;&#x660E;&#x4E00;&#x4E0B;&#x8FD9;&#x91CC;&#x8BF4;&#x7684;<code>HashTree</code> &#x548C;&#x6211;&#x4EEC;&#x5728;<code>&#x6570;&#x636E;&#x7ED3;&#x6784;</code>&#x91CC;&#x9762;&#x8C08;&#x7684; <a href="https://zh.wikipedia.org/zh-hans/%E5%93%88%E5%B8%8C%E6%A0%91">&#x54C8;&#x5E0C;&#x6811;</a> &#x5B8C;&#x5168;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x4E5F;&#x88AB;&#x5B83;&#x7684;&#x540D;&#x5B57;&#x8BEF;&#x5BFC;&#xFF0C;&#x7279;&#x5730;&#x53BB;&#x770B;&#x4E86;&#x4E00;&#x4F1A;<code>&#x54C8;&#x5E0C;&#x6811;</code>&#x76F8;&#x5173;&#x7684;&#x6280;&#x672F;&#x7EC6;&#x8282;&#xFF0C;&#x540E;&#x6765;&#x8D8A;&#x6DF1;&#x4EBA;&#x8D8A;&#x53D1;&#x73B0;&#xFF0C;&#x8FD9;&#x4E2A;<code>HashTree</code> &#x5B8C;&#x5168;&#x662F;&#x6302;&#x7F8A;&#x5934;&#x5356;&#x72D7;&#x8089;&#x561B;&#xFF0C;&#x4E0D;&#x8FC7;&#x4F5C;&#x4E3A;&#x6574;&#x4E2A;JMeter &#x6700;&#x6838;&#x5FC3;&#x7684;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x8FD8;&#x662F;&#x5F88;&#x503C;&#x5F97;&#x8BA4;&#x771F;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x7684;</p>
<h3 id="JMX&#x6587;&#x4EF6;"><a href="#JMX&#x6587;&#x4EF6;" class="headerlink" title="JMX&#x6587;&#x4EF6;"></a>JMX&#x6587;&#x4EF6;</h3><p>&#x6211;&#x4EEC;&#x77E5;&#x9053;<code>jmx</code> &#x662F;<code>JMeter</code>&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x6838;&#x5FC3;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x5728;GUI &#x6A21;&#x5F0F;&#x4E0B;&#x52A0;&#x8F7D;&#x6574;&#x4E2A;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#x4E8E;<code>Non-GUI</code>&#x7684;&#x6267;&#x884C;&#x6A21;&#x5F0F;&#xFF0C;&#x5B83;&#x662F;&#x683C;&#x5F0F;&#x662F;&#x57FA;&#x4E8E;XML &#x3002;&#x90A3;&#x4E48;<code>HashTree</code>&#x5C31;&#x662F;&#x5B83;&#x5728;&#x5185;&#x5B58;&#x7684;&#x4E00;&#x4EFD;&#x6620;&#x5C04;&#x3002; &#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4EFD;&#x6211;&#x81EA;&#x5B9A;&#x4E49;&#x7684;JMX &#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x628A;&#x4E00;&#x4E9B; xml &#x8282;&#x70B9;&#x90FD; fold &#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x5F88;&#x957F;</p>
<p><img src="/2019/03/06/hashtree/Jietu20190306-222921.jpg" alt="JMX Test Plan"></p>
<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x4E2A;xml&#x662F;&#x6709;&#x4E00;&#x5B9A;&#x683C;&#x5F0F;&#x7684;&#xFF0C;&#x4ED6;&#x7684;&#x6BCF;&#x4E00;&#x5C42;&#x90FD;&#x53EA;&#x6709;2&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x8282;&#x70B9;</p>
<ul>
<li>Object &#x8282;&#x70B9; - &#x4EE3;&#x8868;&#x4E00;&#x4E2A; Test Component</li>
<li>HashTree - &#x4E00;&#x4E2A;HashTree &#x7684;&#x5B50;&#x8282;&#x70B9;</li>
</ul>
<p>&#x90A3;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;<code>org.apache.jorphan.collections.HashTree</code> &#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashTree</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>, Map&lt;Object, HashTree&gt;, Cloneable {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">240L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Used for the RuntimeException to short-circuit the traversal</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FOUND</span> <span class="operator">=</span> <span class="string">&quot;found&quot;</span>; <span class="comment">// $NON-NLS-1$</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// N.B. The keys can be either JMeterTreeNode or TestElement</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;Object, HashTree&gt; data; <span class="comment">// </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates an empty new HashTree.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HashTree</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">this</span>(<span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">    }</span><br><span class="line">    .......</span><br></pre></td></tr></table></figure>

<p>&#x5B83;&#x7684;&#x6838;&#x5FC3;&#x5B58;&#x50A8;&#x5C31;&#x662F;&#x4E00;&#x4E2A;<code>protected final Map&lt;Object, HashTree&gt; data</code> &#x7684; Map &#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x5BF9;&#x5916;&#x63D0;&#x4F9B;Map &#x63A5;&#x53E3;&#x6765;&#x7ED9;&#x4E0A;&#x5C42;&#x63D0;&#x4F9B;&#x8BFB;&#x5199;&#x7684;&#x80FD;&#x529B;&#x3002;&#x6211;&#x5C1D;&#x8BD5;&#x5355;&#x6B65;&#x8C03;&#x8BD5;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x786E;&#x8BA4;<code>ListedHashTree</code> &#x5728;&#x5185;&#x5B58;&#x7684;&#x7ED3;&#x6784;&#x5C31;&#x662F; jmx &#x6587;&#x4EF6;&#x7684;&#x6620;&#x5C04;, <code>ListedHashTre</code> &#x662F;<code>HashTree</code>&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x7684;&#x90FD;&#x662F;<code>ListedHashMap</code>&#xFF0C;&#x5B83;&#x7C7B;&#x4F3C;&#x4E8E;<code>LinkedHashMap</code> &#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x5C55;&#x5F00;&#x4E86;</p>
<p><img src="/2019/03/06/hashtree/Jietu20190306-223707.jpg" alt="image-debug"></p>
<h3 id="Vistor-&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;"><a href="#Vistor-&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;" class="headerlink" title="Vistor &#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;"></a>Vistor &#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;</h3><p><code>HashTree</code>&#x5728;&#x6570;&#x636E;&#x8282;&#x70B9;&#x7684;&#x904D;&#x5386;&#x4E0A;&#x8FD8;&#x7528;&#x4E86;&#x4E00;&#x4E2A;&#x7ECF;&#x5178;&#x7684;&#x8BBF;&#x95EE;&#x8005;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x7531;&#x4E8E;&#x5728;&#x6D4B;&#x8BD5;&#x6267;&#x884C;&#x4E2D;JMeter&#x7684;Engine&#x9700;&#x8981;&#x7ECF;&#x5E38;&#x8BBF;&#x95EE; JMX &#x4E2D;&#x7684;&#x67D0;&#x4E9B;&#x8282;&#x70B9;&#x548C;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x5982;&#x679C;&#x628A;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x653E;&#x5728;HashTree &#x672C;&#x8EAB;&#x4F1A;&#x4F7F;&#x5F97;&#x8026;&#x5408;&#x7279;&#x522B;&#x7D27;&#x5BC6;&#xFF0C;&#x901A;&#x8FC7;&#x8BBF;&#x95EE;&#x8005;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x89E3;&#x8026;&#x5E76;&#x63D0;&#x4F9B;&#x66F4;&#x597D;&#x7075;&#x6D3B;&#x7684;&#x6269;&#x5C55;&#x6027;, &#x8BBF;&#x95EE;&#x8005;&#x6A21;&#x5F0F;&#x53C2;&#x8003;<a href="https://www.jianshu.com/p/cd17bae4e949">&#x8FD9;&#x91CC;</a></p>
<p><code>HashTreeIterator</code> &#x5B9A;&#x4E49;&#x7C7B;&#x8BBF;&#x95EE;&#x8005;&#x7684;&#x6807;&#x51C6;&#x63A5;&#x53E3;&#xFF0C;&#x7C7B;&#x4F3C;<code>accept(Object node)</code> &#x8FD9;&#x6837;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x662F;<code>addNode</code>&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;<code>HashTreeIterator</code>&#x7684;&#x5B9A;&#x4E49;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">HashTreeTraverser</span> {</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The tree traverses itself depth-first, calling addNode for each object it</span></span><br><span class="line"><span class="comment">     * encounters as it goes. This is a callback method, and should not be</span></span><br><span class="line"><span class="comment">     * called except by a HashTree during traversal.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> node</span></span><br><span class="line"><span class="comment">     *            the node currently encountered</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subTree</span></span><br><span class="line"><span class="comment">     *            the HashTree under the node encountered</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">addNode</span><span class="params">(Object node, HashTree subTree)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Indicates traversal has moved up a step, and the visitor should remove</span></span><br><span class="line"><span class="comment">     * the top node from its stack structure. This is a callback method, and</span></span><br><span class="line"><span class="comment">     * should not be called except by a HashTree during traversal.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">subtractNode</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Process path is called when a leaf is reached. If a visitor wishes to</span></span><br><span class="line"><span class="comment">     * generate Lists of path elements to each leaf, it should keep a Stack data</span></span><br><span class="line"><span class="comment">     * structure of nodes passed to it with addNode, and removing top items for</span></span><br><span class="line"><span class="comment">     * every {<span class="doctag">@link</span> #subtractNode()} call. This is a callback method, and should</span></span><br><span class="line"><span class="comment">     * not be called except by a HashTree during traversal.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">processPath</span><span class="params">()</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>SearchByClass</code> &#x662F;&#x8BBF;&#x95EE;&#x8005;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5B83;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x4E86;<code>addNode</code>&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x8FC7;&#x6CDB;&#x578B;&#x5B9A;&#x4E49;&#x4E86;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x7684;Object &#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E0B;&#x4EE3;&#x7801;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchByClass</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">HashTreeTraverser</span> {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;T&gt; objectsOfClass = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Object, ListedHashTree&gt; subTrees = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;T&gt; searchClass;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates an instance of SearchByClass, and sets the Class to be searched</span></span><br><span class="line"><span class="comment">     * for.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchClass</span></span><br><span class="line"><span class="comment">     *            class to be searched for</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SearchByClass</span><span class="params">(Class&lt;T&gt; searchClass)</span> {</span><br><span class="line">        <span class="built_in">this</span>.searchClass = searchClass;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * After traversing the HashTree, call this method to get a collection of</span></span><br><span class="line"><span class="comment">     * the nodes that were found.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Collection All found nodes of the requested type</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;T&gt; <span class="title function_">getSearchResults</span><span class="params">()</span> { <span class="comment">// TODO specify collection type without breaking callers</span></span><br><span class="line">        <span class="keyword">return</span> objectsOfClass;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Given a specific found node, this method will return the sub tree of that</span></span><br><span class="line"><span class="comment">     * node.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> root</span></span><br><span class="line"><span class="comment">     *            the node for which the sub tree is requested</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> HashTree</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> HashTree <span class="title function_">getSubTree</span><span class="params">(Object root)</span> {</span><br><span class="line">        <span class="keyword">return</span> subTrees.get(root);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** {<span class="doctag">@inheritDoc</span>} */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addNode</span><span class="params">(Object node, HashTree subTree)</span> { <span class="comment">// &#x67D0;&#x4E00;&#x5C42;HashTre &#x7684;&#x6570;&#x636E;&#x8BBF;&#x95EE;</span></span><br><span class="line">        <span class="keyword">if</span> (searchClass.isAssignableFrom(node.getClass())) {</span><br><span class="line">            objectsOfClass.add((T) node);</span><br><span class="line">            <span class="type">ListedHashTree</span> <span class="variable">tree</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListedHashTree</span>(node);</span><br><span class="line">            tree.set(node, subTree);</span><br><span class="line">            subTrees.put(node, tree);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** {<span class="doctag">@inheritDoc</span>} */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">subtractNode</span><span class="params">()</span> {</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** {<span class="doctag">@inheritDoc</span>} */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processPath</span><span class="params">()</span> {</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;&#x4E1A;&#x52A1;&#x4EE3;&#x7801;&#x600E;&#x4E48;&#x4F7F;&#x7528;&#x8BBF;&#x95EE;&#x8005;&#x6A21;&#x5F0F;&#x6765;&#x9009;&#x62E9; jmx &#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x8FD9;&#x91CC;&#x501F;&#x7528;&#x6838;&#x5FC3;&#x7684;<code>StandardJMeterEnginer</code>&#x7684;<code>configure</code>&#x51FD;&#x6570;&#x6765;&#x8BF4;&#x660E;&#x4E00;&#x4E0B;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HashTree testTree)</span> {</span><br><span class="line">        <span class="comment">// Is testplan serialised?</span></span><br><span class="line">        SearchByClass&lt;TestPlan&gt; testPlan = <span class="keyword">new</span> <span class="title class_">SearchByClass</span>&lt;&gt;(TestPlan.class);</span><br><span class="line">        testTree.traverse(testPlan);</span><br><span class="line">        Object[] plan = testPlan.getSearchResults().toArray();</span><br><span class="line">        <span class="keyword">if</span> (plan.length == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Could not find the TestPlan class!&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="type">TestPlan</span> <span class="variable">tp</span> <span class="operator">=</span> (TestPlan) plan[<span class="number">0</span>];</span><br><span class="line">        serialized = tp.isSerialized();</span><br><span class="line">        tearDownOnShutdown = tp.isTearDownOnShutdown();</span><br><span class="line">        active = <span class="literal">true</span>;</span><br><span class="line">        test = testTree;</span><br><span class="line">    }</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&#x76EE;&#x6807;&#x662F;&#x8981;&#x83B7;&#x53D6; TestPlan &#x7684;&#x8282;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x600E;&#x4E48;&#x8C03;&#x7528;&#x7684;</p>
<ol>
<li>&#x521B;&#x5EFA;<code>SearchByClass</code>&#x5BF9;&#x8C61;&#xFF0C;&#x4F20;&#x5165;TestPlan.class &#x7528;&#x6765;&#x6784;&#x9020;</li>
<li>&#x8C03;&#x7528; HashTree &#x8D44;&#x6DF1;&#x7684; <code>traverse</code> &#x65B9;&#x6CD5;&#xFF0C;&#x4F20;&#x5165;<code>SearchByClass</code> &#x5BF9;&#x8C61;</li>
<li>&#x901A;&#x8FC7; <code>testPlan.getSearchResults().toArray();</code> &#x83B7;&#x53D6;&#x8BBF;&#x95EE;&#x7ED3;&#x679C;</li>
</ol>
<p>&#x5173;&#x4E8E;HashTree&#x5C31;&#x8BF4;&#x5230;&#x8FD9;&#x4E86;&#xFF0C;&#x4E0B;&#x6B21;&#x6211;&#x4EEC;&#x6DF1;&#x5165;&#x5230;JMeter &#x7684;&#x8FD0;&#x884C;&#x539F;&#x7406;&#x53BB;&#x8FDB;&#x4E00;&#x6B65;&#x5206;&#x6790;</p>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 生活 OKR</title>
    <url>/2019/03/08/2019-objectives/</url>
    <content><![CDATA[<p>&#x8FD9;&#x5468;&#x5728;&#x5317;&#x4EAC;&#x548C;&#x8001;&#x677F;&#x5BF9;&#x9F50;&#x4E86;&#x63A5;&#x4E0B;&#x6765;&#x53CC;&#x6708;&#x7684; okr &#xFF0C;&#x7A81;&#x7136;&#x53D1;&#x73B0; 2019&#x5E74;&#x5DF2;&#x7ECF;&#x8FC7;&#x53BB;&#x4E86;&#x5FEB;1/4&#x4E86;&#x3002;&#x7B2C;&#x4E00;&#x6B21;&#x5C1D;&#x8BD5;&#x7ED9;&#x81EA;&#x5DF1;&#x5168;&#x5E74;&#x7684;&#x5DE5;&#x4F5C;&#x548C;&#x751F;&#x6D3B;&#x5B9A;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x8BB0;&#x5F55;&#x5728;&#x535A;&#x5BA2;&#x4E5F;&#x662F;&#x5E0C;&#x671B;&#x53EF;&#x4EE5;&#x97AD;&#x7B56;&#x548C;&#x7763;&#x4FC3;&#x81EA;&#x5DF1;&#xFF0C;&#x7B49;&#x5E74;&#x5E95;&#x7684;&#x65F6;&#x5019;&#x518D;&#x6765;&#x770B;&#x770B;&#x5B8C;&#x6210;&#x7684;&#x600E;&#x4E48;&#x6837;&#x3002;</p>
<h3 id="&#x6280;&#x672F;"><a href="#&#x6280;&#x672F;" class="headerlink" title="&#x6280;&#x672F;"></a>&#x6280;&#x672F;</h3><ol>
<li>&#x5B66;&#x4E60; Hadoop / MapRedcue / Flink /Kaka &#x76F8;&#x5173;&#x7684;&#x5B66;&#x4E60;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E5F;&#x662F;&#x63A5;&#x4E0B;&#x6765;&#x5DE5;&#x4F5C;&#x7684;&#x4E3B;&#x8981;&#x5185;&#x5BB9;</li>
<li>Linux Perfomance &#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x7684;&#x6DF1;&#x5165;&#x5B66;&#x4E60;</li>
<li>Chao Engineering &#x7684;&#x5E8F;&#x8BF6;&#x4E0B;</li>
<li>&#x628A; Golang &#x7CFB;&#x7EDF;&#x6027;&#x5B66;&#x4E60;&#x4E00;&#x4E0B;&#xFF0C;&#x4E89;&#x53D6;&#x7528; Golang &#x5199;&#x4E00;&#x4E9B;&#x5C0F;&#x4E1C;&#x897F;</li>
<li>&#x5206;&#x4EAB; JMeter &#x548C; Pytest &#x7684;&#x6E90;&#x7801;&#x5206;&#x6790;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x5757;&#x4EE3;&#x7801;&#x4E4B;&#x524D;&#x4E5F;&#x65AD;&#x65AD;&#x7EED;&#x7EED;&#x7814;&#x7A76;&#x8FC7;&#x597D;&#x4E00;&#x9635;&#x4E86;&#xFF0C;&#x5C31;&#x662F;&#x6CA1;&#x7CFB;&#x7EDF;&#x6027;&#x7684;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;</li>
<li>&#x4E89;&#x53D6;&#x53EF;&#x4EE5;&#x7ED9; Pytest &#x63D0;&#x53CA;&#x4E00;&#x4E2A; patch</li>
</ol>
<h3 id="&#x751F;&#x6D3B;"><a href="#&#x751F;&#x6D3B;" class="headerlink" title="&#x751F;&#x6D3B;"></a>&#x751F;&#x6D3B;</h3><ol>
<li>&#x5B8C;&#x6210;&#x4E24;&#x6B21;&#x56FD;&#x5185;&#xFF0C;&#x4E00;&#x6B21;&#x56FD;&#x5916;&#x7684;&#x65C5;&#x884C; &#xFF08;&#x548C;&#x5AB3;&#x5987;&#x4E00;&#x8D77;&#xFF09;</li>
<li>&#x5E26;&#x7238;&#x5988;&#x53BB;&#x4E00;&#x6B21;&#x5317;&#x4EAC;&#xFF0C;&#x5F25;&#x8865;&#x4E00;&#x4E0B;&#x8001;&#x7238;&#x4ECE;&#x6765;&#x6CA1;&#x53BB;&#x8FC7;&#x9996;&#x90FD;&#x7684;&#x68A6;&#x60F3;</li>
<li>&#x6BCF;&#x5468;&#x7ED9;&#x7238;&#x5988;&#x6253;&#x81F3;&#x5C11;3&#x6B21;&#x7535;&#x8BDD;</li>
<li>&#x7ED3;&#x5A5A;&#x5468;&#x5E74;&#x5927;&#x5E86;&#x4E00;&#x4E0B;</li>
<li>&#x6BCF;&#x5468;&#x4FDD;&#x8BC1;&#x81F3;&#x5C11; 3 &#x6B21;&#x53BB;&#x5065;&#x8EAB;&#x623F;&#x953B;&#x70BC;&#x8EAB;&#x4F53;&#xFF0C;2018 &#x5E74;&#x5BF9;&#x4E8E;&#x8EAB;&#x4F53;&#x7684;&#x91CD;&#x89C6;&#x592A;&#x5C11;&#x4E86;&#xFF0C;&#x5BFC;&#x81F4;&#x8EAB;&#x4F53;&#x4E0A;&#x5F00;&#x59CB;&#x51FA;&#x73B0;&#x4E00;&#x4E9B;&#x5C0F;&#x6BDB;&#x75C5;</li>
<li>&#x575A;&#x6301;&#x6BCF;&#x5929;&#x5403;&#x65E9;&#x996D;</li>
<li>&#x6BCF;&#x5929;&#x575A;&#x6301;11:00 &#x7761;&#x89C9;</li>
<li>&#x770B; 15 &#x4EBA;&#x6587;&#x5386;&#x53F2;&#x65B9;&#x9762;&#x7684;&#x4E66; &#xFF08;&#x5148;&#x628A;&#x4E4B;&#x524D;&#x53CC;&#x5341;&#x4E00;&#x5C6F;&#x7684;&#x4E00;&#x4E9B;&#x4E66;&#x770B;&#x5B8C;&#x5427;&#xFF09;</li>
<li>&#x7EE7;&#x7EED;&#x575A;&#x6301;&#x535A;&#x5BA2;&#x7684;&#x5199;&#x4F5C;, &#x6BCF;&#x5468;&#x81F3;&#x5C11;2&#x7BC7;&#xFF0C;&#x8BB0;&#x5F55;&#x548C;&#x5206;&#x4EAB;&#x751F;&#x6D3B;&#x4E2D;&#x7684;&#x70B9;&#x70B9;&#x6EF4;&#x6EF4;</li>
</ol>
<p>&#x4E0B;&#x56FE;&#x62CD;&#x6444;&#x4E8E;&#x666F;&#x5C71;&#x5C71;&#x9876; (2019/3/3)</p>
<p><img src="/2019/03/08/2019-objectives/gugong.jpeg" alt="&#x62CD;&#x6444;&#x4E8E;2019/3/3 &#x7684;&#x666F;&#x5C71;&#x5C71;&#x9876;"></p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [7] - JMeter 线程模型</title>
    <url>/2019/03/08/jmeter-thread-model/</url>
    <content><![CDATA[<p><code>JMeter</code> &#x7684;&#x7EBF;&#x7A0B;&#x7BA1;&#x7406;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7;&#x4E24;&#x4E2A;&#x7C7B;&#x6765;&#x8FDB;&#x884C;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;<code>ThreadGroup</code> &#x987E;&#x540D;&#x601D;&#x4E49;&#x6574;&#x4E2A;&#x662F;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x662F;<code>JMeterThread</code> &#x6574;&#x4E2A;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x662F;&#x4E00;&#x4E2A;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#xFF0C;&#x7528;&#x6765;&#x505A;&#x5B9E;&#x9645;&#x8BF7;&#x6C42;&#x53D1;&#x9001;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x4E0A;&#x4E00;&#x6B21;&#x5206;&#x6790;<code>StandardJMeterEngine</code>t&#x63D0;&#x5230;&#x5B83;&#x6700;&#x540E;&#x5B9E;&#x9645;&#x662F;&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A;<code>ThreadGroup</code>&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x8C03;&#x7528;<code>startThreadGroup</code>&#x65B9;&#x6CD5;&#x6765;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7EC4;&#xFF0C;&#x5B9E;&#x9645;&#x5185;&#x90E8;&#x5C31;&#x8C03;&#x7528;<code>ThreadGroup</code>&#x81EA;&#x8EAB;&#x7684;<code>start</code>&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6838;&#x5FC3;&#x5728;&#x505A;&#x4EC0;&#x4E48;</p>
<h3 id="ThreadGroup-start"><a href="#ThreadGroup-start" class="headerlink" title="ThreadGroup.start"></a>ThreadGroup.start</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">delayedStartup = isDelayedStartup(); <span class="comment">// Fetch once; needs to stay constant</span></span><br><span class="line">        log.info(<span class="string">&quot;Starting thread group... number={} threads={} ramp-up={} perThread={} delayedStart={}&quot;</span>, groupNumber,</span><br><span class="line">                numThreads, rampUpPeriodInSeconds, perThreadDelayInMillis, delayedStartup);</span><br><span class="line">        <span class="keyword">if</span> (delayedStartup) {</span><br><span class="line">            threadStarter = <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ThreadStarter</span>(notifier, threadGroupTree, engine), getName()+<span class="string">&quot;-ThreadStarter&quot;</span>);</span><br><span class="line">            threadStarter.setDaemon(<span class="literal">true</span>);</span><br><span class="line">            threadStarter.start();</span><br><span class="line">            <span class="comment">// N.B. we don&apos;t wait for the thread to complete, as that would prevent parallel TGs</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="type">long</span> <span class="variable">now</span> <span class="operator">=</span> System.currentTimeMillis(); <span class="comment">// needs to be same time for all threads in the group</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">JMeterContext</span> <span class="variable">context</span> <span class="operator">=</span> JMeterContextService.getContext();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">threadNum</span> <span class="operator">=</span> <span class="number">0</span>; running &amp;&amp; threadNum &lt; numThreads; threadNum++) {</span><br><span class="line">                startNewThread(notifier, threadGroupTree, engine, threadNum, context, now, (<span class="type">int</span>)(threadNum * perThreadDelayInMillis));</span><br><span class="line">            }</span><br><span class="line">        }</span><br></pre></td></tr></table></figure>

<ol>
<li>&#x9996;&#x5148;&#x662F;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;delayedStartup &#x7684;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E2A;&#x8868;&#x793A;&#x7684;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7EC4;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x662F;&#x5426;&#x662F;&#x7ACB;&#x5373;&#x542F;&#x52A8;&#x5168;&#x90E8;&#xFF0C;&#x8FD8;&#x662F;&#x8BF4;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;period &#x7684;&#x5468;&#x671F;&#x6765;&#x542F;&#x52A8;&#x6574;&#x4E2A;&#x7EBF;&#x7A0B;&#x7EC4;</li>
<li>&#x5982;&#x679C;delayedStartup&#x662F;true &#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x5148;&#x542F;&#x52A8;&#x8FC7;&#x4E00;&#x4E2A;&#x53EB;<code>ThreadStarter</code> &#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x6765;&#x542F;&#x52A8;&#x8FC7;&#x7EBF;&#x7A0B;&#x7EC4;</li>
<li>&#x53CD;&#x4E4B;&#x5C31;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x5FAA;&#x73AF;&#x8C03;&#x7528;<code>startNewThread</code> &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7EC4;</li>
</ol>
<p>###&#x770B;&#x4E00;&#x4E0B; ThreadStarter &#x7EBF;&#x7A0B;&#x662F;&#x600E;&#x4E48;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7EC4;&#x7684;</p>
<p>&#x6211;&#x4EEC;&#x77E5;&#x9053;<code>JMeter</code>&#x5728;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7EC4;&#x7684;&#x65F6;&#x5019;&#x662F;&#x6709;&#x8BBE;&#x7F6E;<code>Ramp up period</code>&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x6574;&#x4E2A;&#x5C31;&#x662F;&#x901A;&#x8FC7;<code>ThreadStarter</code>&#x7EBF;&#x7A0B;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x6211;&#x4E48;&#x7B80;&#x5355;&#x770B;&#x4E00;&#x4E0B;&#x5B83;&#x7684;<code>run()</code> &#x51FD;&#x6570;&#x662F;&#x548B;&#x4E48;&#x5DE5;&#x4F5C;&#x7684;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">int</span> <span class="variable">perThreadDelayInMillis</span> <span class="operator">=</span> Math.round((<span class="type">float</span>) (getRampUp() * <span class="number">1000</span>) / (<span class="type">float</span>) numThreads);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">threadNumber</span> <span class="operator">=</span> <span class="number">0</span>; running &amp;&amp; threadNumber &lt; numThreads; threadNumber++) {</span><br><span class="line">                    <span class="keyword">if</span> (threadNumber &gt; <span class="number">0</span>) {</span><br><span class="line">                        pause(perThreadDelayInMillis); <span class="comment">// ramp-up delay (except first)</span></span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">if</span> (usingScheduler &amp;&amp; System.currentTimeMillis() &gt; endtime) {</span><br><span class="line">                        <span class="keyword">break</span>; <span class="comment">// no point continuing beyond the end time</span></span><br><span class="line">                    }</span><br><span class="line">                    <span class="type">JMeterThread</span> <span class="variable">jmThread</span> <span class="operator">=</span> makeThread(notifier, threadGroupTree, engine, threadNumber, context);</span><br><span class="line">                    jmThread.setInitialDelay(<span class="number">0</span>);   <span class="comment">// Already waited</span></span><br></pre></td></tr></table></figure>

<ol>
<li>&#x9996;&#x5148;&#x8BA1;&#x7B97;&#x4E00;&#x4E0B;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x95F4;&#x7B49;&#x5F85;&#x95F4;&#x9694;&#xFF0C;<code>final int perThreadDelayInMillis = Math.round((float) (getRampUp() * 1000) / (float) numThreads);</code></li>
<li>&#x7136;&#x540E;&#x5C31;&#x662F;&#x6BCF;&#x6B21;&#x542F;&#x52A8;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B49;&#x5F85;&#x4E00;&#x4E0B; <code> pause(perThreadDelayInMillis)</code></li>
</ol>
<h3 id="&#x6211;&#x4EEC;&#x518D;&#x770B;&#x4E00;&#x4E0B;startNewThread-&#x662F;&#x600E;&#x4E48;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7684;"><a href="#&#x6211;&#x4EEC;&#x518D;&#x770B;&#x4E00;&#x4E0B;startNewThread-&#x662F;&#x600E;&#x4E48;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7684;" class="headerlink" title="&#x6211;&#x4EEC;&#x518D;&#x770B;&#x4E00;&#x4E0B;startNewThread &#x662F;&#x600E;&#x4E48;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7684;"></a>&#x6211;&#x4EEC;&#x518D;&#x770B;&#x4E00;&#x4E0B;startNewThread &#x662F;&#x600E;&#x4E48;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x7684;</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> JMeterThread <span class="title function_">startNewThread</span><span class="params">(ListenerNotifier notifier, ListedHashTree threadGroupTree, StandardJMeterEngine engine,</span></span><br><span class="line"><span class="params">            <span class="type">int</span> threadNum, <span class="keyword">final</span> JMeterContext context, <span class="type">long</span> now, <span class="type">int</span> delay)</span> {</span><br><span class="line">        <span class="type">JMeterThread</span> <span class="variable">jmThread</span> <span class="operator">=</span> makeThread(notifier, threadGroupTree, engine, threadNum, context);</span><br><span class="line">        scheduleThread(jmThread, now); <span class="comment">// set start and end time</span></span><br><span class="line">        jmThread.setInitialDelay(delay);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">newThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(jmThread, jmThread.getThreadName());</span><br><span class="line">        registerStartedThread(jmThread, newThread);</span><br><span class="line">        newThread.start();</span><br><span class="line">        <span class="keyword">return</span> jmThread;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>



<p>&#x975E;&#x5E38;&#x76F4;&#x89C2;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;<code>JMeterThread</code> &#x5BF9;&#x8C61;&#xFF0C;&#x505A;&#x4E00;&#x4E9B;&#x8BBE;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x653E;&#x5230;&#x4E00;&#x4E2A;<code>Thread</code> &#x91CC;&#x9762;&#x8DD1;&#x5C31;&#x597D;&#x4E86;&#xFF0C;<code>registerStartedThread(jmThread, newThread);</code> &#x8FD9;&#x4E2A;&#x8C03;&#x7528;&#x662F;&#x5728;<code>ThreadGroup</code>&#x7684;&#x4E00;&#x4E2A;Map &#x91CC;&#x628A;<code>JMeterThread</code>&#x548C;&#x771F;&#x5B9E;&#x7684;<code>Thread</code>&#x5173;&#x7CFB;&#x5B58;&#x4E00;&#x4E0B;&#xFF0C;&#x65B9;&#x4FBF;&#x540E;&#x9762;&#x7684;&#x67E5;&#x627E;</p>
<h3 id="JMeterThread"><a href="#JMeterThread" class="headerlink" title="JMeterThread"></a>JMeterThread</h3><p>&#x6700;&#x540E;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x6838;&#x5FC3;&#x7684;<code>JMeterThread</code> &#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x662F;&#x600E;&#x4E48;work&#x7684;&#x3002;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x8981;&#x627E;&#x4E00;&#x4E2A;&#x7B54;&#x6848;&#xFF0C;&#x5B83;&#x600E;&#x4E48;&#x5904;&#x7406;&#x2018;Loop Count / Forever&#x2019; &#x7684;&#x8FD0;&#x884C;&#x6A21;&#x5F0F;&#x7684;</p>
<p>&#x6211;&#x4E4B;&#x524D;&#x5728;&#x8BBE;&#x8BA1;&#x4F9D;&#x56FE;&#x81EA;&#x8EAB;&#x7684;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x7684;&#x65F6;&#x5019;&#x5BF9;&#x5FEB;&#x95EE;&#x9898;&#x91C7;&#x7528;&#x7684;&#x8BBE;&#x8BA1;&#x65B9;&#x5F0F;&#x662F;&#x901A;&#x8FC7;<code>producer / consumer</code>&#x7684;&#x65B9;&#x5F0F;&#x628A;&#x7CFB;&#x7EDF;&#x89E3;&#x8026;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x4E2A; <code>Queue</code>&#x6765;&#x51FA;&#x6765;&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;<code>JMeter</code>&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x5F88;&#x597D;&#x5947;&#x3002;&#x770B;&#x4E86;&#x4EE3;&#x7801;&#x53D1;&#x73B0; <code>JMeter</code>&#x7684;&#x5B9E;&#x73B0;&#x975E;&#x5E38;&#x7B80;&#x7B54;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;<code>run</code> &#x51FD;&#x6570;&#x5934;&#x90E8;&#x7684;&#x51E0;&#x4E2A;&#x5FAA;&#x73AF;&#x5224;&#x65AD;&#x6761;&#x4EF6;&#x5C31;&#x80FD;&#x627E;&#x5230;&#x7B54;&#x6848;&#x4E86;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// threadContext is not thread-safe, so keep within thread</span></span><br><span class="line">        <span class="type">JMeterContext</span> <span class="variable">threadContext</span> <span class="operator">=</span> JMeterContextService.getContext();</span><br><span class="line">        <span class="type">LoopIterationListener</span> <span class="variable">iterationListener</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            iterationListener = initRun(threadContext);</span><br><span class="line">            <span class="keyword">while</span> (running) {</span><br><span class="line">                <span class="type">Sampler</span> <span class="variable">sam</span> <span class="operator">=</span> threadGroupLoopController.next();</span><br><span class="line">                <span class="keyword">while</span> (running &amp;&amp; sam != <span class="literal">null</span>) {</span><br><span class="line">                    processSampler(sam, <span class="literal">null</span>, threadContext);</span><br><span class="line">                    threadContext.cleanAfterSample();</span><br></pre></td></tr></table></figure>

<ol>
<li><code>Sampler</code> &#x8868;&#x793A;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#xFF0C;&#x6BCF;&#x6B21;&#x901A;&#x8FC7;<code>threadGroupLoopController.next()</code> &#x8FD9;&#x4E2A;&#x8FED;&#x4EE3;&#x5668;&#x6765;&#x83B7;&#x53D6;&#x4E0B;&#x4E00;&#x4E2A;Sampler&#x5BF9;&#x8C61;&#xFF0C;&#x5F53; sampler &#x4E0D;&#x4E3A;&#x7A7A;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x7EE7;&#x7EED;&#x53D1;&#x8BF7;&#x6C42;</li>
<li><code>threadGroupLoopController</code> &#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x5B9E;&#x9645;&#x662F;&#x4E00;&#x4E2A;<code>Controller</code>&#x63A5;&#x53E3;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;, Controller &#x7684;&#x5B9E;&#x73B0;&#x6709;&#x5F88;&#x591A;&#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x754C;&#x9762;&#x4E0A;&#x9009;&#x62E9;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x91CC;&#x9762;&#x4FEE;&#x6539;, &#x4E0B;&#x9762;&#x5C31;&#x662F;&#x7528;&#x4E86;&#x4E00;&#x4E2A; <code>LoopController</code></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">elementProp</span> <span class="attr">name</span>=<span class="string">&quot;ThreadGroup.main_controller&quot;</span> <span class="attr">elementType</span>=<span class="string">&quot;LoopController&quot;</span> <span class="attr">guiclass</span>=<span class="string">&quot;LoopControlPanel&quot;</span> <span class="attr">testclass</span>=<span class="string">&quot;LoopController&quot;</span> <span class="attr">testname</span>=<span class="string">&quot;Loop Controller&quot;</span> <span class="attr">enabled</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>&#x5F53;controller&#x5BF9;&#x8C61;&#x7684;isDone&#x5224;&#x5B9A;&#x4E3A;&#x771F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x628A;<code>running</code>&#x72B6;&#x6001;&#x8BBE;&#x7F6E;&#x6210;False&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;<code>JMeterThread</code> &#x4E5F;&#x5C31;&#x7ED3;&#x675F;&#x751F;&#x547D;&#x4E86;</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (threadGroupLoopController.isDone()) {</span><br><span class="line">                    running = false;</span><br><span class="line">                    log.info(&quot;Thread is done: {}&quot;, threadName);</span><br><span class="line">                }</span><br></pre></td></tr></table></figure>



<h3 id="&#x7EBF;&#x7A0B;&#x8BBE;&#x8BA1;&#x6A21;&#x578B;&#x7684;&#x66F4;&#x591A;&#x601D;&#x8003;"><a href="#&#x7EBF;&#x7A0B;&#x8BBE;&#x8BA1;&#x6A21;&#x578B;&#x7684;&#x66F4;&#x591A;&#x601D;&#x8003;" class="headerlink" title="&#x7EBF;&#x7A0B;&#x8BBE;&#x8BA1;&#x6A21;&#x578B;&#x7684;&#x66F4;&#x591A;&#x601D;&#x8003;"></a>&#x7EBF;&#x7A0B;&#x8BBE;&#x8BA1;&#x6A21;&#x578B;&#x7684;&#x66F4;&#x591A;&#x601D;&#x8003;</h3><p>&#x53C2;&#x8003;&#x4E4B;&#x524D;<code>Gatling</code>&#x7684;&#x4F7F;&#x7528;&#x6765;&#x770B;&#xFF0C;&#x5B83;&#x5BF9;&#x4E8E;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x672C;&#x8EAB;&#x7684;&#x652F;&#x6301;&#x7C92;&#x5EA6;&#x975E;&#x5E38;&#x7EC6;&#xFF0C;&#x4F8B;&#x5982;&#x652F;&#x6301;&#x6052;&#x5B9A;&#x5E76;&#x53D1;&#xFF0C;&#x6052;&#x5B9A; QPS &#x7B49;&#x4E0D;&#x540C;&#x5E76;&#x53D1;&#x573A;&#x666F;&#x7684;&#x8BBE;&#x8BA1;</p>
<p>&#x6211;&#x5728;&#x81EA;&#x5DF1;&#x8BBE;&#x8BA1; <code>Atom Integraion</code>&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x5E0C;&#x671B;&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x80FD;&#x5728;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x652F;&#x6301;&#x7684;&#x7075;&#x83B7;&#x6027;&#x4E0A;&#x505A;&#x7684;&#x66F4;&#x597D;&#xFF0C;&#x901A;&#x8FC7;&#x5F15;&#x5165;Queue &#x628A; Scheduler &#x548C; Load Generator &#x5206;&#x79BB;&#xFF0C;&#x6211;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5199;&#x5165; Queue &#x7684;&#x901F;&#x5EA6;&#x6765;&#x63A7;&#x5236;&#x6700;&#x7EC8; Load Generator &#x7684;&#x5E76;&#x53D1;&#x6A21;&#x578B;</p>
<p>&#x4ECE;&#x4EE5;&#x524D;&#x4F7F;&#x7528; <code>JMeter</code>&#x7684;&#x7ECF;&#x9A8C;&#x6765;&#x770B;&#xFF0C;&#x5B83;&#x5BF9;&#x4E8E;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x7684;&#x652F;&#x6301;&#x662F;&#x6BD4;&#x8F83;&#x6709;&#x9650;&#x7684;&#xFF0C;&#x4ECE;&#x5B83;&#x76EE;&#x524D;&#x7684;&#x8BBE;&#x8BA1;&#x6765;&#x770B;&#xFF0C;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x89E3;&#x8026;&#x505A;&#x7684;&#x662F;&#x4E0D;&#x592A;&#x597D;&#x7684;&#xFF0C;&#x9996;&#x5148;&#x6BCF;&#x4E2A;<code>JMeterThread</code>&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#x72EC;&#x7ACB;&#x7684; , &#x867D;&#x7136;&#x5B83;&#x4EEC;&#x662F;&#x5171;&#x4EAB;&#x540C;&#x4E00;&#x4E2A;<code>threadGroupLoopController</code>&#x5BF9;&#x8C61;&#xFF0C;&#x4F46;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x8FED;&#x4EE3;&#x5668;&#x6765;&#x63A7;&#x5236;&#x5E76;&#x53D1;&#x7684;&#x7C92;&#x5EA6;&#xFF0C;&#x5B9E;&#x5728;&#x662F;&#x6709;&#x70B9;&#x96BE;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x672A;&#x6765;<code>JMeter</code> &#x5F00;&#x53D1;&#x56E2;&#x961F;&#x5BF9;&#x4E8E;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x652F;&#x6301;&#x8FD9;&#x5757;&#x4F1A;&#x4E0D;&#x4F1A;&#x6709;&#x66F4;&#x591A;&#x7684;&#x8BA1;&#x5212; &#x3002; &#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x6211;&#x7684;&#x4E00;&#x4E9B;&#x611A;&#x89C1;&#xFF0C; &#x4E5F;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x7559;&#x8A00;&#x548C;&#x6211;&#x8BA8;&#x8BBA;&#x3002;</p>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [5] - 核心类 org.apache.jmeter.JMeter</title>
    <url>/2019/03/07/jmeter/</url>
    <content><![CDATA[<p>&#x4E0A;&#x4E00;&#x7BC7; <a href="http://markshao.github.io/2019/03/05/jmeter-new-driver/">&#x7A0B;&#x5E8F;&#x5165;&#x53E3; NewDriver</a> &#x63D0;&#x5230;<code>Main</code>&#x51FD;&#x6570;&#x662F;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x7684;&#x65B9;&#x5F0F;&#x8C03;&#x7528;<code>org.apache.jmeter.JMeter</code> &#x7684; <code>start</code>&#x51FD;&#x6570;&#x6765;&#x542F;&#x52A8;Jmeter &#xFF0C;&#x90A3;&#x4E48;&#x4ECA;&#x5929;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;<code>Jmeter</code> &#x8FD9;&#x4E2A;&#x7C7B;&#x662F;&#x600E;&#x4E48;&#x5DE5;&#x4F5C;&#x7684;.</p>
<p>&#x6211;&#x4EEC;&#x4ECE;<code>start</code> &#x51FD;&#x6570;&#x6765;&#x5F00;&#x59CB;&#x5206;&#x6790;&#xFF0C;&#x7531;&#x4E8E;&#x5916;&#x5C42;&#x7684;<code>NewDriver</code> &#x53EF;&#x4EE5;&#x770B;&#x505A;&#x4E00;&#x5C42;&#x900F;&#x660E;&#x7684;&#x4EE3;&#x7406;&#xFF0C;&#x5B9E;&#x9645;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x662F;&#x900F;&#x4F20;&#x5230;<code>JMeter</code>&#x6765;&#x5904;&#x7406;&#x7684;&#xFF0C;&#x9996;&#x5148;&#x5C31;&#x662F;&#x89E3;&#x6790;&#x542F;&#x52A8;&#x65F6;&#x5019;&#x4F20;&#x5165;&#x7684;&#x5916;&#x90E8;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">CLArgsParser</span> <span class="variable">parser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CLArgsParser</span>(args, options);</span><br><span class="line">        <span class="type">String</span> <span class="variable">error</span> <span class="operator">=</span> parser.getErrorString();</span><br><span class="line">        <span class="keyword">if</span> (error == <span class="literal">null</span>){<span class="comment">// Check option combinations</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">gui</span> <span class="operator">=</span> parser.getArgumentById(NONGUI_OPT)==<span class="literal">null</span>;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">nonGuiOnly</span> <span class="operator">=</span> parser.getArgumentById(REMOTE_OPT)!=<span class="literal">null</span></span><br><span class="line">                               || parser.getArgumentById(REMOTE_OPT_PARAM)!=<span class="literal">null</span></span><br><span class="line">                               || parser.getArgumentById(REMOTE_STOP)!=<span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (gui &amp;&amp; nonGuiOnly) {</span><br><span class="line">                error = <span class="string">&quot;-r and -R and -X are only valid in non-GUI mode&quot;</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x770B;&#x5230;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x4E3B;&#x8981;&#x5DE5;&#x4F5C;&#x662F;&#x89E3;&#x6790;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x5224;&#x65AD;&#x6709;&#x6CA1;&#x6709;&#x5B58;&#x5728;&#x77DB;&#x76FE;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x4F8B;&#x5982;GUI &#x76F8;&#x5173;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x7684;&#x8FD0;&#x884C;&#x6A21;&#x5F0F;&#x662F;&#x975E;GUI &#x6A21;&#x5F0F;&#x7B49;&#x3002;</p>
<p>&#x5404;&#x79CD;&#x76F8;&#x5173;&#x89E3;&#x6790;&#x7684;&#x4EFB;&#x52A1;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x5DE5;&#x4F5C;<code>updateClossLoader</code>&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x5B83;&#x662F;<code>JMeter</code>&#x7C7B;&#x81EA;&#x8EAB;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6765;&#x770B;&#x4E00;&#x4E0B;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateClassLoader</span><span class="params">()</span> <span class="keyword">throws</span> MalformedURLException {</span><br><span class="line">        updatePath(<span class="string">&quot;search_paths&quot;</span>,<span class="string">&quot;;&quot;</span>, <span class="literal">true</span>); <span class="comment">//$NON-NLS-1$//$NON-NLS-2$</span></span><br><span class="line">        updatePath(<span class="string">&quot;user.classpath&quot;</span>,File.pathSeparator, <span class="literal">true</span>);<span class="comment">//$NON-NLS-1$</span></span><br><span class="line">        updatePath(<span class="string">&quot;plugin_dependency_paths&quot;</span>,<span class="string">&quot;;&quot;</span>, <span class="literal">false</span>);<span class="comment">//$NON-NLS-1$</span></span><br><span class="line">    }</span><br></pre></td></tr></table></figure>

<p>&#x5B83;&#x7684;&#x5B9E;&#x9645;&#x4F5C;&#x7528;&#x662F;&#x628A;<code>search_paths</code>&#x548C;<code>user.classpath</code>&#x91CC;&#x9762;&#x8BBE;&#x7F6E;&#x7684; jar &#x6587;&#x4EF6;&#x6DFB;&#x52A0;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x7684;classloader &#x4E2D;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x4EEC;&#x5728;&#x67D0;&#x4E9B;&#x573A;&#x666F;&#x4E0B;&#x66F4;&#x65B9;&#x4FBF;&#x4F7F;&#x7528;JMeter&#xFF0C;&#x4F8B;&#x5982;&#x6211;&#x4EEC;&#x81EA;&#x5B9A;&#x4E49;&#x7684;<code>Java Sampler</code>&#xFF0C;&#x5728;&#x5B98;&#x65B9;&#x7684;guide&#x91CC;&#x8BF4;&#x662F;&#x8981;&#x628A;Java Sampler &#x6253;&#x5305;&#x6210; Jar &#x653E;&#x5230;<code>lib/ext</code> &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x5F88;&#x9EBB;&#x70E6;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;<code>search_paths</code> &#x548C;<code>user.classpath</code>&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x7B80;&#x5316;&#x64CD;&#x4F5C;&#x3002;</p>
<p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x518D;&#x5F80;&#x4E0B;&#x770B;&#xFF0C;&#x8DF3;&#x8FC7;&#x4E00;&#x4E9B;&#x5904;&#x7406;&#x7279;&#x5B9A;<code>option</code>&#x7684;code &#xFF0C;&#x6700;&#x6838;&#x5FC3;&#x7684;&#x5C31;&#x662F;&#x5982;&#x4E0B;&#x4E24;&#x4E2A;&#x6838;&#x5FC3;&#x8C03;&#x7528;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x542F;&#x52A8; GUI &#x7684;&#x6A21;&#x5F0F;, &#x8FD9;&#x91CC;&#x4F20;&#x5165;&#x7684;<code>testFile</code> &#x53C2;&#x6570;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x7684; <code>jmx</code> &#x6D4B;&#x8BD5; plan &#x6587;&#x4EF6;&#x8DEF;&#x5F84;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">startGui(testFile);</span><br><span class="line">startOptionalServers();</span><br></pre></td></tr></table></figure>

<p>&#x53E6;&#x5916;&#x4E00;&#x79CD;&#x5C31;&#x662F;&#x975E; GUI &#x6A21;&#x5F0F;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">startNonGui(testFile, jtlFile, rem, reportAtEndOpt != <span class="literal">null</span>);</span><br><span class="line">startOptionalServers();</span><br></pre></td></tr></table></figure>

<p><code>startOptionalServers()</code> &#x662F;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;<code>BeanShell</code> server, &#x7528;&#x6765;&#x65B9;&#x4FBF;&#x5BF9; <code>Jmeter</code> &#x8FDB;&#x7A0B;&#x505A;&#x4E00;&#x4E9B;&#x52A8;&#x6001;&#x8C03;&#x6574;&#xFF0C;&#x4EE5;&#x540E;&#x53EF;&#x4EE5;&#x5355;&#x72EC;&#x5199;&#x4E00;&#x4E2A;&#x6765;&#x4ECB;&#x7ECD;<code>beanshell server</code> &#x76F8;&#x5173;&#x7684;&#x4E1C;&#x897F;, &#x8FD9;&#x91CC;&#x5148;&#x4E0D;&#x5173;&#x6CE8;&#x4E86;&#x3002;GUI &#x7684;&#x6A21;&#x5F0F;&#x5728;&#x542F;&#x52A8;&#x8FC7;&#x540E;&#x5C31;&#x80FD;&#x770B;&#x5230;&#x754C;&#x9762;&#x4E86;&#xFF08;&#x4E00;&#x4E2A; swing &#x7684; app&#xFF09;&#x7B49;&#x5F85;&#x7528;&#x6237;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5148;&#x770B;&#x4E00;&#x4E0B;<code>startNonGui</code> &#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;, &#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6838;&#x5FC3;&#x662F;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;<code>JMeter</code> driver (&#x6E90;&#x7801;&#x91CC;&#x81EA;&#x5DF1;&#x4E5F;&#x6709;&#x4E00;&#x4E2A;&#x7591;&#x95EE;&#xFF0C;why does it create a new instance?) &#xFF0C;&#x5728;&#x975E;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x573A;&#x666F;&#x4E0B;&#xFF0C;&#x5B9E;&#x9645;&#x6700;&#x540E;&#x662F;&#x8C03;&#x7528;&#x4E86;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">startNonGui</span><span class="params">(String testFile, String logFile, CLOption remoteStart, <span class="type">boolean</span> generateReportDashboard)</span></span><br><span class="line">           <span class="keyword">throws</span> IllegalUserActionException, ConfigurationException {</span><br><span class="line">.... </span><br><span class="line">    <span class="comment">// &#x5FFD;&#x7565;&#x4E0A;&#x9762;&#x7684;&#x4E00;&#x4E9B;&#x8C03;&#x7528;&#xFF0C;&#x548C; Distributed &#x76F8;&#x5173;&#x7684;&#x51FD;&#x6570;</span></span><br><span class="line">       driver.runNonGui(testFile, logFile, remoteStart != <span class="literal">null</span>, remoteHostsString, generateReportDashboard);</span><br><span class="line">   }</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x518D;&#x6765;&#x770B;<code>runNonGui</code> &#x5728;&#x5E72;&#x4EC0;&#x4E48;&#xFF0C;&#x5B83;&#x662F;&#x771F;&#x7684;&#x8981;&#x5F00;&#x59CB;&#x8DD1;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x4E86;&#xFF0C;&#x9996;&#x5148;&#x662F;&#x5BF9;&#x4E8E; TestPlan &#x7684; <code>HashTree</code> &#x7684;&#x89E3;&#x6790;&#xFF0C;&#x83B7;&#x53D6;&#x9700;&#x8981;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x548C;&#x518D;&#x505A;&#x4E00;&#x4E9B;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5982;&#x4F55;&#x89E3;&#x6790;<code>HashTree</code>&#x8FD9;&#x4E2A;&#x6211;&#x4EEC;&#x5728;&#x4E4B;&#x524D;&#x7684; <code>HashTree</code> &#x4E2D;&#x5DF2;&#x7ECF;&#x4ECB;&#x7ECD;&#x8FC7;&#x4E86;, &#x6700;&#x540E;&#x7684;&#x6838;&#x5FC3;&#x662F;&#x8C03;&#x7528;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x6765;&#x542F;&#x52A8; JMeter &#x6D4B;&#x8BD5;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!remoteStart) {</span><br><span class="line">                <span class="type">JMeterEngine</span> <span class="variable">engine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandardJMeterEngine</span>();</span><br><span class="line">                engine.configure(clonedTree);</span><br><span class="line">                <span class="type">long</span> now=System.currentTimeMillis();</span><br><span class="line">                println(<span class="string">&quot;Starting the test @ &quot;</span>+<span class="keyword">new</span> <span class="title class_">Date</span>(now)+<span class="string">&quot; (&quot;</span>+now+<span class="string">&quot;)&quot;</span>);</span><br><span class="line">                engine.runTest();</span><br><span class="line">                engines.add(engine);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                java.util.<span class="type">StringTokenizer</span> <span class="variable">st</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.StringTokenizer(remoteHostsString, <span class="string">&quot;,&quot;</span>);<span class="comment">//$NON-NLS-1$</span></span><br><span class="line">                List&lt;String&gt; hosts = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">                <span class="keyword">while</span> (st.hasMoreElements()) {</span><br><span class="line">                    hosts.add((String) st.nextElement());</span><br><span class="line">                }</span><br><span class="line">                </span><br><span class="line">                DistributedRunner distributedRunner=<span class="keyword">new</span> <span class="title class_">DistributedRunner</span>(<span class="built_in">this</span>.remoteProps);</span><br><span class="line">                distributedRunner.setStdout(System.out); <span class="comment">// NOSONAR</span></span><br><span class="line">                distributedRunner.setStdErr(System.err); <span class="comment">// NOSONAR</span></span><br><span class="line">                distributedRunner.init(hosts, clonedTree);</span><br><span class="line">                engines.addAll(distributedRunner.getEngines());</span><br><span class="line">                distributedRunner.start();</span><br><span class="line">            }</span><br><span class="line">            startUdpDdaemon(engines)</span><br></pre></td></tr></table></figure>



<p>&#x6211;&#x4EEC;&#x770B;&#x5230;&#x9996;&#x5148;&#x4F1A;&#x533A;&#x5206;&#x662F;&#x4E0D;&#x662F; Remote &#x6A21;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x53EA;&#x770B;&#x975E;Remote&#x7684;&#x573A;&#x666F;&#x3002;<code>engine.runTest()</code> &#x8FD9;&#x4E2A;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x5B9E;&#x9645;&#x662F;&#x542F;&#x52A8;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x5177;&#x4F53;&#x4E0B;&#x6B21;&#x8C08;<code>StandardJmeterEngine</code> &#x7684;&#x65F6;&#x5019;&#x6765;&#x770B;</p>
<p><code>startUdpDdaemon(engines)</code>  &#x662F;&#x4E00;&#x4E2A;<code>JMeter</code>&#x7BA1;&#x7406;&#x670D;&#x52A1;&#xFF0C;&#x7528;&#x6765;&#x7BA1;&#x7406; Jmeter &#x7684;&#x8FD0;&#x884C;&#x72B6;&#x51B5;&#xFF0C;&#x4F8B;&#x5982;<code>Shutdown/StopTestNow/HeapDump/ThreadDump </code> &#x7B49;&#xFF0C;&#x8FD9;&#x4E2A;&#x6837;&#x7684;&#x8BBE;&#x8BA1;&#x8BA9;&#x6574;&#x4E2A;<code>JMeter</code>&#x7684;&#x7BA1;&#x7406;&#x548C;<code>JMeter</code>&#x81EA;&#x8EAB;&#x7684;&#x8FDB;&#x7A0B;&#x5B9E;&#x73B0;&#x4E86;&#x89E3;&#x8026;&#x3002;</p>
<p>&#x597D;&#xFF0C;&#x4E0B;&#x4E00;&#x6B21;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B; <code>StandardJMeterEngine</code>&#x7684;&#x5B9E;&#x73B0;</p>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [8] - BeanShell Server</title>
    <url>/2019/03/10/beanshell-server/</url>
    <content><![CDATA[<p>&#x4E0A;&#x4E00;&#x6B21;&#x5728;&#x5206;&#x6790; JMeter &#x6838;&#x5FC3;&#x7C7B;&#x7684;&#x65F6;&#x5019; (<a href="http://markshao.github.io/2019/03/07/jmeter/">http://markshao.github.io/2019/03/07/jmeter/</a>) &#x8BB2;&#x5230;&#x4E86;&#x65E0;&#x8BBA;&#x662F;&#x5355;&#x673A;&#x8FD8;&#x662F;&#x5206;&#x5E03;&#x5F0F;&#x6A21;&#x5F0F;&#x4E0B;&#x90FD;&#x4F1A;&#x8C03;&#x7528; <code>startOptionServer</code>, &#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x5230;&#x5E95;&#x662F;&#x542F;&#x52A8;&#x4E86;&#x90A3;&#x4E2A;server</p>
<p><code>startOptionServer</code> &#x7684;&#x903B;&#x8F91;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5148;&#x7B80;&#x5355;&#x770B;&#x4E00;&#x773C;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">startOptionalServers</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">bshport</span> <span class="operator">=</span> JMeterUtils.getPropDefault(<span class="string">&quot;beanshell.server.port&quot;</span>, <span class="number">0</span>);<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">bshfile</span> <span class="operator">=</span> JMeterUtils.getPropDefault(<span class="string">&quot;beanshell.server.file&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">// $NON-NLS-1$ $NON-NLS-2$</span></span><br><span class="line">        <span class="keyword">if</span> (bshport &gt; <span class="number">0</span>) {</span><br><span class="line">            log.info(<span class="string">&quot;Starting Beanshell server ({},{})&quot;</span>, bshport, bshfile);</span><br><span class="line">            <span class="type">Runnable</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanShellServer</span>(bshport, bshfile);</span><br><span class="line">            t.run(); <span class="comment">// NOSONAR we just evaluate some code here</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        runInitScripts();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> mirrorPort=JMeterUtils.getPropDefault(<span class="string">&quot;mirror.server.port&quot;</span>, <span class="number">0</span>);<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">        <span class="keyword">if</span> (mirrorPort &gt; <span class="number">0</span>){</span><br><span class="line">            log.info(<span class="string">&quot;Starting Mirror server ({})&quot;</span>, mirrorPort);</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="type">Object</span> <span class="variable">instance</span> <span class="operator">=</span> ClassTools.construct(</span><br><span class="line">                        <span class="string">&quot;org.apache.jmeter.protocol.http.control.HttpMirrorControl&quot;</span>,<span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                        mirrorPort);</span><br><span class="line">                ClassTools.invoke(instance,<span class="string">&quot;startHttpMirror&quot;</span>);</span><br><span class="line">            } <span class="keyword">catch</span> (JMeterException e) {</span><br><span class="line">                log.warn(<span class="string">&quot;Could not start Mirror server&quot;</span>,e);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>
<p>&#x6838;&#x5FC3;&#x7684;&#x903B;&#x8F91;&#x5C31;&#x662F;&#x73B0;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x8BFB;&#x53D6;&#x76F8;&#x5173; <code>beanshell</code> &#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;<code>Runnable t = new BeanShellServer(bshport, bshfile);</code> &#x6765;&#x542F;&#x52A8;&#x4E00;&#x4E2A;BeanShell&#x670D;&#x52A1;</p>
<p>&#x4EC0;&#x4E48;&#x662F;<code>BeanShell</code>&#x5462;&#xFF0C;&#x5B83;&#x7684;&#x5B98;&#x65B9;&#x4ECB;&#x7ECD;&#x5728;&#x8FD9;&#x91CC; <a href="http://www.beanshell.org/bshservlet.html%EF%BC%8C%E6%80%BB%E7%BB%93%E4%B8%8B%E6%9D%A5%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA">http://www.beanshell.org/bshservlet.html&#xFF0C;&#x603B;&#x7ED3;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x4E00;&#x4E2A;</a> Java Runtime &#x7684;&#x4E00;&#x4E2A;hook&#x670D;&#x52A1;&#xFF0C;&#x63D0;&#x4F9B;&#x7C7B;&#x4F3C; oo &#x7684; script &#x811A;&#x672C;&#x4F5C;&#x4E3A;interface&#x548C;&#x5916;&#x90E8;&#x4EA4;&#x4E92;&#xFF0C;&#x5B9E;&#x9645;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5BF9;&#x4E8E; runtime &#x7684; jvm &#x505A;&#x4E00;&#x4E9B;&#x52A8;&#x6001;&#x7684;&#x6311;&#x6218;&#xFF0C;&#x4F8B;&#x5982;&#x83B7;&#x53D6;&#x4E00;&#x4E9B;jmeter&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x6216;&#x8005;&#x4FEE;&#x6539;&#x4E00;&#x4E9B;&#x53D8;&#x91CF;&#x6765;&#x6539;&#x53D8;&#x6700;&#x540E;&#x7684;JMeter &#x7684;&#x8FD0;&#x884C;&#x884C;&#x4E3A;&#x7B49;</p>
<p><code>BeanShellServer</code> &#x662F;&#x4E00;&#x4E2A;&#x5BF9;&#x4E8E; beanshell &#x670D;&#x52A1;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x5B83;&#x5B9E;&#x73B0;&#x4E86;<code>Runnable</code>&#x63A5;&#x53E3;&#xFF0C;&#x4F46;&#x662F;&#x4ECE;<code>startOptionServer</code>&#x7684;&#x4EE3;&#x7801;&#x91CC;&#x6765;&#x770B;&#xFF0C;&#x6CA1;&#x770B;&#x5230;&#x6709; Thread &#x7684;&#x8C03;&#x7528;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Runnable</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanShellServer</span>(bshport, bshfile);</span><br><span class="line">t.run(); <span class="comment">// NOSONAR we just evaluate some code here</span></span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x5728;<code>BeanShellServer</code>&#x4E2D;&#x7684;<code>run</code>&#x51FD;&#x6570;&#x770B;&#x5230;&#xFF0C;&#x5B83;&#x662F;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x6765;&#x8C03;&#x7528;<code>bsh</code>&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x53EF;&#x80FD;&#x5728;&#x8FD9;&#x91CC;&#x4F1A;&#x6709;&#x4E00;&#x4E2A; thread &#x7684;&#x5904;&#x7406;&#x5427;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class&lt;?&gt; interpreter = loader.loadClass(<span class="string">&quot;bsh.Interpreter&quot;</span>);<span class="comment">//$NON-NLS-1$</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">instance</span> <span class="operator">=</span> interpreter.getDeclaredConstructor().newInstance();</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>&lt;绿皮书&gt; 观后小感</title>
    <url>/2019/03/09/green-cover-book/</url>
    <content><![CDATA[<p>&#x5F88;&#x4E45;&#x6CA1;&#x6709;&#x770B;&#x6587;&#x827A;&#x7247;&#x4E86;&#xFF0C;&#x5728;&#x6211;&#x8FD9;&#x4E2A;&#x5E73;&#x65F6;&#x5F88;&#x5C11;&#x770B;&#x7535;&#x5F71;&#x4EBA;&#x7684;&#x5FC3;&#x91CC;&#xFF0C;&#x6CA1;&#x6709;&#x6253;&#x6253;&#x6740;&#x6740;&#x7684;&#x5C31;&#x53EF;&#x4EE5;&#x79F0;&#x4E4B;&#x4E3A;&#x6587;&#x827A;&#x7247;&#x4E86;&#x3002;&#x8D81;&#x7740;&#x5965;&#x65AF;&#x5361;&#x7684;&#x4F59;&#x6E29;&#x8FD8;&#x5728;&#xFF0C;&#x6293;&#x7D27;&#x65F6;&#x95F4;&#x53BB;&#x5BB6;&#x91CC;&#x9644;&#x8FD1;&#x7684;&#x7535;&#x5F71;&#x9662;&#x8FFD;&#x4E86;&#x4E00;&#x4E0B;&lt;&#x7EFF;&#x76AE;&#x4E66;&gt;&#xFF0C;&#x5F88;&#x591A;&#x670B;&#x53CB;&#x8BF4;&#x6700;&#x540E;&#x96EA;&#x5229;&#x5728;&#x9152;&#x5427;&#x91CC;&#x8C08;&#x94A2;&#x7434;&#x7684;&#x65F6;&#x5019;&#x4ED6;&#x4EEC;&#x90FD;&#x6D41;&#x6CEA;&#x4E86;&#xFF0C;&#x6211;&#x867D;&#x7136;&#x6CA1;&#x6709;&#x50CF;&#x5F53;&#x5E74;&#x770B;&lt;&#x96C6;&#x7ED3;&#x53F7;&gt;&#x90A3;&#x6837;&#x611F;&#x52A8;&#x5230;&#x54ED;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x53EF;&#x5426;&#x8BA4;&#x5B83;&#x662F;&#x4E00;&#x90E8;&#x597D;&#x7247;&#x5B50;</p>
<p>&#x6574;&#x90E8;&#x7535;&#x5F71;&#x5728;&#x8C08;&#x4E00;&#x4E2A;&#x5173;&#x4E8E;&#x201C;&#x5B64;&#x72EC;&#x201D;&#x7684;&#x8BDD;&#x9898;&#xFF0C;&#x4E3B;&#x4EBA;&#x516C;&#x96EA;&#x8389;&#x867D;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x97F3;&#x4E50;&#x5BB6;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x662F;&#x5185;&#x5FC3;&#x6781;&#x5EA6;&#x5B64;&#x72EC;&#xFF0C;&#x4F5C;&#x4E3A;&#x9ED1;&#x4EBA;&#xFF0C;&#x4ED6;&#x5728;&#x9ED1;&#x4EBA;&#x540C;&#x80DE;&#x7684;&#x773C;&#x91CC;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x7C7B;&#xFF0C;&#x5728;&#x767D;&#x4EBA;&#x7684;&#x773C;&#x91CC;&#xFF0C;&#x4ED6;&#x4E5F;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x4F1A;&#x5F39;&#x7434;&#x7684;&#x201C;&#x9ED1;&#x4EBA;&#x201D;&#x800C;&#x5DF2;&#xFF0C;&#x7535;&#x5F71;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x753B;&#x9762;&#xFF0C;&#x5728;&#x4ED6;&#x51C6;&#x5907;&#x53BB;&#x4E0A;&#x6D17;&#x624B;&#x95F4;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x521A;&#x624D;&#x8FD8;&#x5F88;&#x5BA2;&#x6C14;&#x7684;&#x767D;&#x4EBA;&#x7537;&#x4E3B;&#x4EBA;&#x7A81;&#x7136;&#x6C89;&#x4E0B;&#x4E86;&#x8138;&#xFF0C;&#x6307;&#x4ED6;&#x53BB;&#x4E00;&#x4E2A;&#x8349;&#x4E1B;&#x8FB9;&#x7684;&#x8305;&#x5751;&#x4E0A;&#x6D17;&#x624B;&#x95F4; . &#x800C;&#x4E14;&#x4ED6;&#x5E94;&#x8BE5;&#x8FD8;&#x662F;&#x4E2A;&#x540C;&#x6027;&#x604B;&#x3002;&#x8FD9;&#x4E9B;&#x5B64;&#x72EC;&#x5E26;&#x6765;&#x7684;&#x538B;&#x6291;&#x5728;&#x4ED6;&#x4EEC;&#x90A3;&#x6B21;&#x96E8;&#x4E2D;&#x7684;&#x5BF9;&#x8BDD;&#x4E2D;&#x7206;&#x53D1;&#x4E86;&#xFF0C;&#x4ED6;&#x4EB2;&#x53E3;&#x544A;&#x8BC9;&#x4E86;Tony&#x4ED6;&#x89C9;&#x5F97;&#x4ED6;&#x4E0D;&#x5C5E;&#x4E8E;&#x8FD9;&#x4E2A;&#x793E;&#x4F1A;&#x3002;</p>
<p>&#x76F8;&#x53CD;&#x53E6;&#x4E00;&#x4E2A;&#x7537;&#x4E3B;&#x4EBA;Tony &#x662F;&#x4E00;&#x4E2A;&#x5728;&#x6211;&#x4EEC;&#x4ECA;&#x5929;&#x770B;&#x6765;&#x5B8C;&#x5168;&#x5C31;&#x662F;&#x4E2A;&#x6DF7;&#x6DF7;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4E00;&#x70B9;&#x4E0D;&#x5B64;&#x5355;&#xFF0C;&#x6709;&#x5BB6;&#x5EAD;&#xFF0C;&#x6709;&#x7231;&#x60C5;&#xFF0C;&#x6709;&#x5B69;&#x5B50;&#x3002;&#x4ECE;&#x7535;&#x5F71;&#x4E00;&#x5F00;&#x59CB;&#x62CD;&#x4ED6;&#x4EEC;&#x5168;&#x5BB6;&#x5728;&#x684C;&#x5B50;&#x524D;&#x7948;&#x7977;&#x5F00;&#x59CB;&#xFF0C;&#x5C31;&#x4E00;&#x76F4;&#x5728;&#x6E32;&#x67D3;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x5176;&#x4E50;&#x878D;&#x878D;&#x7684;&#x6C14;&#x6C1B;&#xFF0C;&#x548C;&#x96EA;&#x8389;&#x535A;&#x58EB;&#x5F62;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x660E;&#x663E;&#x7684;&#x53CD;&#x5DEE;</p>
<p>&#x6574;&#x7247;&#x9664;&#x4E86;&#x8C08;&#x5B64;&#x72EC;&#x4E4B;&#x5916;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x4E3B;&#x9898;&#x5C31;&#x662F;&#x79CD;&#x65CF;&#x6B67;&#x89C6;&#xFF0C;&#x6B67;&#x89C6;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x654F;&#x611F;&#x7684;&#x8BDD;&#x9898;&#xFF0C;&#x5C31;&#x548C;&#x6211;&#x4EEC;&#x4ECA;&#x5929;&#x8BF4;&#x7684;&#x6240;&#x8C13;&#x201D;&#x6B67;&#x89C6;&#x7A77;&#x4EBA;&#x201D;&#x7C7B;&#x4F3C;&#xFF0C;&#x6574;&#x4E2A;&#x7247;&#x5B50;&#x91CC;&#x5BF9;&#x4E8E;&#x96EA;&#x68A8;&#x7684;&#x201C;&#x6B67;&#x89C6;&#x201D;&#x5206;&#x4E3A;&#x4E09;&#x79CD;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x628A;&#x4ED6;&#x5949;&#x4E3A;&#x7687;&#x5E1D;&#xFF0C;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x5E94;&#x8058;&#x7684;&#x90A3;&#x628A;&#x6905;&#x5B50;&#xFF0C;&#x5230;&#x4ED6;&#x4EC6;&#x4EBA;&#x5BF9;&#x4ED6;&#x7684;&#x6001;&#x5EA6;&#x7B49;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x662F;&#x5728;&#x5357;&#x90E8;&#x7684;&#x65F6;&#x5019;&#x90A3;&#x4E9B;&#x767D;&#x4EBA;&#x6839;&#x672C;&#x4E0D;&#x9E1F;&#x4ED6;&#x4EC0;&#x4E48;&#x97F3;&#x4E50;&#x5BB6;&#x7684;&#x8EAB;&#x4EFD;&#xFF0C;&#x5C31;&#x628A;&#x4ED6;&#x5F53;&#x9ED1;&#x5974;&#x6765;&#x770B;&#xFF0C;&#x6B67;&#x89C6;&#x4ED6;&#x3002;&#x7B2C;&#x4E09;&#x79CD;&#x5C31;&#x662F;Tony&#xFF0C;&#x4ED6;&#x65E2;&#x4E0D;&#x5DE6;&#xFF0C;&#x4E5F;&#x4E0D;&#x53F3;&#xFF0C;&#x4ED6;&#x5C31;&#x628A;&#x96EA;&#x68A8;&#x5F53;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x670B;&#x53CB;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5728;&#x8F66;&#x4E0A;&#x8BA9;&#x4ED6;&#x5403;&#x9E21;&#x7FC5;&#x90A3;&#x6BB5;&#x7279;&#x522B;&#x6709;&#x8DA3;&#x3002;&#x5176;&#x5B9E;&#x8FD9;&#x4E5F;&#x5728;&#x6620;&#x5C04;&#x73B0;&#x5728;&#x793E;&#x4F1A;&#x7684;&#x4E00;&#x4E2A;&#x73B0;&#x8C61;&#xFF0C;&#x6211;&#x4EEC;&#x7ECF;&#x5E38;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x4EC0;&#x4E48;&#x52A9;&#x6350;&#x6D3B;&#x52A8;&#xFF0C;&#x4EC0;&#x4E48;&#x4F53;&#x9A8C;&#x6D3B;&#x52A8;&#xFF0C;&#x628A;&#x7A77;&#x4EBA;&#x5B69;&#x5B50;&#x5E26;&#x53BB;&#x6709;&#x94B1;&#x4EBA;&#x5BB6;&#x91CC;&#x53BB;&#x751F;&#x6D3B;&#x4F53;&#x9A8C;&#xFF0C;&#x770B;&#x4ED6;&#x4EEC;&#x7684;&#x8868;&#x73B0;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x201C;&#x6B67;&#x89C6;&#x201D;&#xFF0C;&#x771F;&#x6B63;&#x7684;&#x4E0D;&#x6B67;&#x89C6;&#xFF0C;&#x5C31;&#x662F;&#x60F3;Tony&#x90A3;&#x6837;&#xFF0C;&#x5FC3;&#x4E2D;&#x6CA1;&#x6709;&#x90A3;&#x4E2A;&#x989C;&#x8272;&#x3002;</p>
<p>&#x968F;&#x4FBF;&#x778E;&#x626F;&#x4E24;&#x53E5;&#xFF0C;&#x4E0A;&#x4E00;&#x6B21;&#x5199;&#x89C2;&#x540E;&#x611F;&#xFF0C;&#x5E94;&#x8BE5;&#x8FD8;&#x662F;&#x518D;&#x8BFB;&#x9AD8;&#x4E2D;&#x7684;&#x65F6;&#x5019;&#x5427;&#xFF0C;&#x4E00;&#x6643;&#x5FEB;&#x5341;&#x4E94;&#x516D;&#x5E74;&#x4E86;&#x3002;&#x95FB;&#x5230;&#x9E3D;&#x5B50;&#x6C64;&#x7684;&#x5473;&#x9053;&#x4E86;&#xFF0C;&#x5148;&#x4E0D;&#x8BF4;&#x4E86;</p>
<p><img src="/2019/03/09/green-cover-book/greenbook.webp" alt="&#x7EFF;&#x76AE;&#x4E66;"></p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS Mojave 上安装 python mysql module 遇到小坑</title>
    <url>/2019/03/11/install-mysqldb/</url>
    <content><![CDATA[<p>&#x516C;&#x53F8;&#x7684;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x9700;&#x8981;&#x5B89;&#x88C5;<code>mysqlclient==1.3.12</code>&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x5F88;&#x4E45;&#x5199;<code>MySQL</code> base &#x7684;&#x5E94;&#x7528;&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x4E4B;&#x524D;2&#x5E74;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x5728;<code>ubuntu destkop</code>&#x4E0A;&#xFF0C;&#x8FD8;&#x662F;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x5C0F;&#x5751;&#xFF0C;&#x4E0D;&#x8FC7;&#x5F88;&#x5FEB;&#x5C31;&#x8D9F;&#x8FC7;&#x53BB;&#x4E86;&#xFF0C;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x5E0C;&#x671B;&#x5E2E;&#x5230;&#x6709;&#x7C7B;&#x4F3C;&#x95EE;&#x9898;&#x7684;&#x540C;&#x5B66;</p>
<h2 id="&#x6211;&#x7684;&#x73AF;&#x5883;"><a href="#&#x6211;&#x7684;&#x73AF;&#x5883;" class="headerlink" title="&#x6211;&#x7684;&#x73AF;&#x5883;"></a>&#x6211;&#x7684;&#x73AF;&#x5883;</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">operation system = macOS Mojave 10.14.3</span><br><span class="line">python version = 2.7</span><br><span class="line">pipenv version =  2018.11.26</span><br></pre></td></tr></table></figure>



<h2 id="mysql-config&#x627E;&#x4E0D;&#x5230;"><a href="#mysql-config&#x627E;&#x4E0D;&#x5230;" class="headerlink" title="mysql_config&#x627E;&#x4E0D;&#x5230;"></a>mysql_config&#x627E;&#x4E0D;&#x5230;</h2><p>&#x8FD9;&#x4E2A;&#x662F;&#x4E2A;&#x8001;&#x751F;&#x957F;&#x8C08;&#x7684;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x4EE5;&#x524D;&#x5728;Linux &#x4E0A;&#x4E5F;&#x7ECF;&#x5E38;&#x9047;&#x5230;&#xFF0C;&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x5927;&#x591A;&#x90FD;&#x662F;&#x8BA9;&#x4F60;&#x88C5;&#x4E00;&#x4E2A;<code>Mysql</code>&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x4E00;&#x4E2A;mysql client &#x7684;&#x4F9D;&#x8D56;&#x95EE;&#x9898;&#x88C5;&#x4E00;&#x4E2A;mysql&#x5C31;&#x5B9E;&#x5728;&#x662F;&#x5927;&#x70AE;&#x6253;&#x868A;&#x5B50;&#x4E86;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x53EA;&#x9700;&#x8981;&#x88C5;&#x4E00;&#x4E2A; mysql-client &#x5373;&#x53EF;&#xFF0C; &#x4E4B;&#x524D;&#x5728;ubuntu &#x4E0A;&#x53EF;&#x4EE5;&#x7528;apt-get&#x5B89;&#x88C5;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure>
<p>&#x5728; mac &#x4E0A;&#x5982;&#x679C;&#x4F60;&#x4E5F;&#x662F;&#x7528; <a href="https://brew.sh/">https://brew.sh/</a> &#x505A;&#x5305;&#x7BA1;&#x7406;&#x7684;&#x5316;&#xFF0C;&#x90A3;&#x4E48;&#x7528;&#x5B83;&#x6765;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#xFF0C;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install mysql-client</span><br></pre></td></tr></table></figure>
<p>&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x522B;&#x5FD8;&#x8BB0;&#x628A; mysql_config &#x6DFB;&#x52A0;&#x5230;PATH &#x4E2D;&#x53BB; ,&#x7136;&#x540E;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x4E00;&#x4E0B;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x662F;&#x7528;zsh&#x7684;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># &#x4FEE;&#x6539; ~/.zshrc</span></span><br><span class="line">expoort PATH=<span class="variable">$PATH</span>:/usr/local/Cellar/mysql-client/5.7.23/bin</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>



<h2 id="ld-not-found-lssl"><a href="#ld-not-found-lssl" class="headerlink" title="ld: not found lssl"></a>ld: not found lssl</h2><p>&#x7B2C;&#x4E00;&#x76F4;&#x89C9;&#x662F;&#x6211;&#x7684;<code>openssl</code>&#x5E93;&#x6CA1;&#x6709;&#x88C5;&#xFF0C;&#x76F4;&#x63A5;<code>brew install openssl</code>&#xFF0C;&#x4F46;&#x662F;&#x63D0;&#x793A;&#x6211;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x4E86;&#xFF0C;&#x6709;&#x70B9;&#x56F0;&#x6270;&#x3002; Google &#x4E86;&#x4E00;&#x5708;&#x53D1;&#x73B0;&#x539F;&#x6765;&#x662F; C Module &#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x6CA1;&#x6709;&#x5230;<code>Library</code>&#x7684;&#x6B63;&#x786E;&#x5B89;&#x88C5;&#x4F4D;&#x7F6E;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8BBE;&#x7F6E;&#x4E00;&#x4E0B;&#x6B63;&#x786E;&#x7684;&#x94FE;&#x63A5;&#x5E93;&#x7684;&#x4F4D;&#x7F6E;&#x5373;&#x53EF;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LIBRARY_PATH=<span class="variable">$LIBRARY_PATH</span>:/usr/local/opt/openssl/lib/</span><br></pre></td></tr></table></figure>

<p>&#x7136;&#x540E;&#x518D;&#x6267;&#x884C;&#x4E00;&#x4E0B;<code>pipenv install -r requirements.txt</code> , Done &#xFF01;&#xFF01;&#xFF01;</p>
]]></content>
      <categories>
        <category>技术大杂烩</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [9] - 分布式架构</title>
    <url>/2019/03/12/distributed-architecture/</url>
    <content><![CDATA[<h3 id="JMeter-&#x5206;&#x5E03;&#x5F0F;&#x6A21;&#x5F0F;"><a href="#JMeter-&#x5206;&#x5E03;&#x5F0F;&#x6A21;&#x5F0F;" class="headerlink" title="JMeter &#x5206;&#x5E03;&#x5F0F;&#x6A21;&#x5F0F;"></a>JMeter &#x5206;&#x5E03;&#x5F0F;&#x6A21;&#x5F0F;</h3><p>JMeter &#x9664;&#x4E86;&#x5355;&#x673A;&#x6A21;&#x5F0F;&#x5916;&#xFF0C;&#x8FD8;&#x652F;&#x6301;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x6A21;&#x5F0F; (<a href="https://jmeter.apache.org/usermanual/remote-test.html">https://jmeter.apache.org/usermanual/remote-test.html</a>) , &#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x5355;&#x673A;&#x9047;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x74F6;&#x9888;</p>
<ol>
<li>&#x5355;&#x673A;&#x751F;&#x6210;&#x7684;&#x5E76;&#x53D1;&#x538B;&#x529B;&#x662F;&#x6709;&#x4E0A;&#x7EBF;&#x7684;&#xFF0C;JMeter &#x662F;&#x57FA;&#x4E8E; Java Thread &#xFF0C;&#x5355;&#x673A;&#x7684;&#x5185;&#x5B58;&#x4E5F;&#x4F1A;&#x662F;&#x4E00;&#x4E2A;&#x95EE;&#x9898;</li>
<li>&#x5E26;&#x5BBD;&#x4E0A;&#x9650;&#x548C;&#x4E0D;&#x540C;&#x7F51;&#x7EDC;&#x573A;&#x666F;&#x7684;&#x6A21;&#x62DF;&#xFF0C;&#x4F8B;&#x5982;&#x963F;&#x91CC;&#x5DF4;&#x5DF4;&#x7684;&#x53CC;&#x5341;&#x4E00;&#x7684;&#x538B;&#x529B;&#x53D1;&#x751F;&#x5668;&#x662F;&#x901A;&#x8FC7;CDN&#x7684;&#x7F51;&#x7EDC;&#x6765;&#x52A0;&#x538B;&#x7684;</li>
<li>&#x3002;&#x3002;&#x3002;</li>
</ol>
<h3 id="&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;"><a href="#&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;" class="headerlink" title="&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;"></a>&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;</h3><p>JMeter &#x7684;&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;&#x662F;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x7684;<code>Master - Slave</code>&#x4E2D;&#x5FC3;&#x5316;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;&#xFF0C;&#x91C7;&#x7528;&#x7684;&#x901A;&#x4FE1;&#x65B9;&#x5F0F;&#x662F; Java RMI &#x901A;&#x4FE1;&#x6846;&#x67B6; (<a href="https://www.ibm.com/developerworks/cn/java/j-rmiframe/index.html">https://www.ibm.com/developerworks/cn/java/j-rmiframe/index.html</a>)</p>
<p><img src="/2019/03/12/distributed-architecture/jmeter_remote.png" alt="&#x67B6;&#x6784;&#x56FE;"></p>
<h3 id="&#x76F8;&#x5173;&#x7684;&#x6838;&#x5FC3;&#x7C7B;"><a href="#&#x76F8;&#x5173;&#x7684;&#x6838;&#x5FC3;&#x7C7B;" class="headerlink" title="&#x76F8;&#x5173;&#x7684;&#x6838;&#x5FC3;&#x7C7B;"></a>&#x76F8;&#x5173;&#x7684;&#x6838;&#x5FC3;&#x7C7B;</h3><ul>
<li>Master<ul>
<li>ClientJMeterEngine &#x8D1F;&#x8D23;&#x63A5;&#x6536;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x628A;&#x6D4B;&#x8BD5;&#x4EFB;&#x52A1;&#x5206;&#x53D1;&#x7ED9; Slave</li>
</ul>
</li>
<li>Slave<ul>
<li>RemoteJMeterEngineImpl &#xFF0C;&#x72EC;&#x7ACB;&#x8FD0;&#x884C; RMI Server &#xFF0C;&#x63A5;&#x6536;&#x6765;&#x81EA; Client &#x7684;&#x8BF7;&#x6C42;&#x6765;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#xFF0C; &#x5B9E;&#x9645;&#x4E0A;RemoteJMeterEngineImpl &#x662F;&#x4E00;&#x4E2A;&#x5BF9;&#x4E8E;StandardJMeterEngine&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x5185;&#x90E8;&#x7684;&#x5B9E;&#x9645;&#x903B;&#x8F91;&#x8FD8;&#x662F; StandardJMeterEngine &#x6765;&#x5904;&#x7406;&#x7684;</li>
</ul>
</li>
</ul>
<p>&#x5148;&#x628A;&#x67B6;&#x6784;&#x5927;&#x6982;&#x8BB2;&#x4E00;&#x4E0B;&#xFF0C;&#x4E0B;&#x6B21;&#x6211;&#x4EEC;&#x6765;&#x8BA4;&#x771F;&#x89E3;&#x8BFB;&#x4E00;&#x4E0B;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x51E0;&#x4E2A;&#x6838;&#x5FC3;&#x7C7B;&#x662F;&#x600E;&#x4E48;&#x5DE5;&#x4F5C;&#x7684;</p>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>JMeter 源码解读 [10] - 分布式核心类</title>
    <url>/2019/03/12/distributed-code-analysis/</url>
    <content><![CDATA[<p>&#x4E0A;&#x6B21;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5206;&#x6790;&#x4E86;&#x4E00;&#x4E0B;<code>JMeter</code>&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;&#xFF0C;&#x4ECA;&#x5929;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x5176;&#x4E2D;&#x76F8;&#x5173;&#x7684;&#x6838;&#x5FC3;&#x7C7B;&#x662F;&#x600E;&#x4E48;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x5148;&#x4ECE;Master &#x5F00;&#x59CB;&#xFF0C;Master &#x662F;&#x7528;&#x6765;&#x63A5;&#x6536;&#x7528;&#x6237;&#x63A7;&#x5236;&#x7684;<code>JMeter</code> Engine&#xFF0C; &#x5B83;&#x63A5;&#x6536; GUI &#x548C; NoneGUI &#x4E24;&#x79CD;&#x8FD0;&#x884C;&#x6A21;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B; <code>JMete.java</code> &#x91CC;&#x9762;&#x662F;&#x600E;&#x4E48;&#x5904;&#x7406;&#x5206;&#x5E03;&#x5F0F;&#x6A21;&#x5F0F;&#x7684;, &#x770B;&#x4E00;&#x4E0B;<code>start</code>  &#x51FD;&#x6570;&#x662F;&#x600E;&#x4E48;&#x5DE5;&#x4F5C;&#x7684;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (parser.getArgumentById(SERVER_OPT) != <span class="literal">null</span>) {</span><br><span class="line">                <span class="comment">// Start the server</span></span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                    RemoteJMeterEngineImpl.startServer(RmiUtils.getRmiRegistryPort()); <span class="comment">// $NON-NLS-1$</span></span><br><span class="line">                    startOptionalServers();</span><br><span class="line">                } <span class="keyword">catch</span> (Exception ex) {</span><br><span class="line">                    System.err.println(<span class="string">&quot;Server failed to start: &quot;</span>+ex);<span class="comment">//NOSONAR</span></span><br><span class="line">                    log.error(<span class="string">&quot;Giving up, as server failed with:&quot;</span>, ex);</span><br><span class="line">                    <span class="keyword">throw</span> ex;</span><br><span class="line">                }</span><br></pre></td></tr></table></figure>
<p>&#x5F53;&#x547D;&#x4EE4;&#x884C;&#x5305;&#x542B;&#x4E00;&#x4E2A;<code>-s</code>&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8868;&#x793A;&#x6211;&#x4EEC;&#x8981;&#x542F;&#x52A8;&#x4E00;&#x4E2A;<code>Slave Server</code> , &#x5B9E;&#x9645;&#x542F;&#x52A8;&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#x4EA4;&#x7ED9;<code>RemoteJMeterEngineImpl</code>&#x7684;</p>
<p>###RemoteJMeterEngineImpl<br>RemoteJMeterEngineImpl &#x8FD9;&#x4E2A;&#x7C7B;&#x5B9E;&#x73B0;&#x4E86;<code>RemoteJMeterEngine</code>&#x63A5;&#x53E3;&#xFF0C;&#x800C;<code>RemoteJMeterEngine</code>&#x63A5;&#x53E3;&#x7EE7;&#x627F;&#x81EA; <code>Remote</code> &#x63A5;&#x53E3;&#xFF0C;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x5728; <code>RMI</code> &#x901A;&#x4FE1;&#x6846;&#x67B6;&#x91CC;&#x63D0;&#x4F9B;&#x7684; <code>Remote</code> &#x63A5;&#x53E3;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x6765;&#x58F0;&#x660E;&#x7EE7;&#x627F;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x7684;interface &#x5B9A;&#x4E49;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x7528;&#x6765;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x7684;&#xFF0C;RemoteJMeterEngine &#x5B9A;&#x4E49;&#x7684;&#x63A5;&#x53E3;&#x548C;<code>JMeterEngine</code>&#x5B9A;&#x4E49;&#x7684;&#x4E00;&#x6837;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x533A;&#x522B;&#x662F;&#x6BCF;&#x4E2A;&#x65B9;&#x6CD5;&#x524D;&#x591A;&#x4E86;&#x4E00;&#x4E2A;<code>r</code>,&#x4F8B;&#x5982;&#x5728; JMeterEngine &#x91CC;&#x5B9A;&#x4E49;&#x7684;&#x53EB; <code>configure</code>&#x7684;&#x65B9;&#x6CD5;&#x5728;<code>RemoteJMeterEngine</code>&#x91CC;&#x5B9A;&#x4E49;&#x7684;&#x662F;<code>rconfigure</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RemoteJMeterEngine</span> <span class="keyword">extends</span> <span class="title class_">Remote</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">rconfigure</span><span class="params">(HashTree testTree, String host, File jmxBase, String scriptName)</span> <span class="keyword">throws</span> RemoteException;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">rrunTest</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException, JMeterEngineException;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">rstopTest</span><span class="params">(<span class="type">boolean</span> now)</span> <span class="keyword">throws</span> RemoteException;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">rreset</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">rsetProperties</span><span class="params">(HashMap&lt;String,String&gt; p)</span> <span class="keyword">throws</span> RemoteException;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">rexit</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x5728;&#x6765;&#x770B; RemoteJMeterEngineImpl &#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x9996;&#x5148;&#x5728;&#x4E0A;&#x6B21;&#x7684;&#x5206;&#x6790;&#x4E2D;&#x8C08;&#x8FC7;&#xFF0C;&#x771F;&#x6B63;&#x7684;&#x6267;&#x884C;&#x903B;&#x8F91;&#x662F;&#x901A;&#x8FC7;&#x5728;&#x5185;&#x90E8;&#x81EA;&#x5E26;&#x7684;&#x4E00;&#x4E2A; <code>JMeterEngine</code> &#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x4E00;&#x4E2A; JMeter Slave &#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x63D0;&#x4F9B;&#x5916;&#x90E8;&#x4EA4;&#x4E92;interface&#xFF0C; &#x53EA;&#x5141;&#x8BB8;&#x901A;&#x8FC7; RMI &#x534F;&#x8BAE;&#x6765;&#x8BBF;&#x95EE;&#x7684;&#x7279;&#x6B8A; JMeter&#xFF0C; &#x5B83;&#x81EA;&#x8EAB;&#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x7684; <code>JMeterEngine</code>, &#x6211;&#x4EEC;&#x7B80;&#x5355;&#x770B;&#x4E00;&#x4E2A; <code>RemoteJMeterEngine</code> &#x7684;&#x63A5;&#x53E3;&#x5B9E;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;<code>rexit</code>&#x7684;&#x5B9E;&#x73B0;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rexit</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException {</span><br><span class="line">        log.info(<span class="string">&quot;Exiting&quot;</span>);</span><br><span class="line">        <span class="comment">// Bug 59400 - allow rexit() to return</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">et</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; {</span><br><span class="line">            log.info(<span class="string">&quot;Stopping the backing engine&quot;</span>);</span><br><span class="line">            backingEngine.exit();</span><br><span class="line">        });</span><br><span class="line">        et.setDaemon(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// Tidy up any objects we created</span></span><br><span class="line">        <span class="type">Registry</span> <span class="variable">reg</span> <span class="operator">=</span> LocateRegistry.getRegistry(</span><br><span class="line">                RmiUtils.getRmiHost().getHostName(),</span><br><span class="line">                <span class="built_in">this</span>.rmiRegistryPort,</span><br><span class="line">                RmiUtils.createClientSocketFactory());        </span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            reg.unbind(JMETER_ENGINE_RMI_NAME);</span><br><span class="line">        } <span class="keyword">catch</span> (NotBoundException e) {</span><br><span class="line">            log.warn(<span class="string">&quot;{} is not bound&quot;</span>, JMETER_ENGINE_RMI_NAME, e);</span><br><span class="line">        }</span><br><span class="line">        log.info(<span class="string">&quot;Unbound from registry&quot;</span>);</span><br><span class="line">        <span class="comment">// Help with garbage control</span></span><br><span class="line">        JMeterUtils.helpGC();</span><br><span class="line">        et.start();</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>
<p>&#x5B83;&#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x5206;&#x51E0;&#x6B65;</p>
<ol>
<li>&#x542F;&#x52A8;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x8C03;&#x7528; StandardJMeterEngine &#x81EA;&#x8EAB;&#x7684;&#x65B9;&#x6CD5;<code>backingEngine.exit();</code>&#x6765;&#x5173;&#x95ED; JMeter , &#x7136;&#x540E;&#x628A;&#x81EA;&#x5DF1;&#x4ECE; RMI Service &#x4E2D;&#x6CE8;&#x9500;&#x6389; <code>reg.unbind(JMETER_ENGINE_RMI_NAME);</code></li>
</ol>
<p>###DistributedRunner<br>&#x521A;&#x521A;&#x8C08;&#x4E86; Slave &#x7684;&#x8FD0;&#x884C;&#x903B;&#x8F91;&#xFF0C;&#x518D;&#x6765;&#x770B;&#x770B; Master JMeter &#x600E;&#x4E48;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;Master &#x5728;&#x6574;&#x4E2A; RMI &#x901A;&#x4FE1;&#x6846;&#x67B6;&#x4E2D;&#x5B9E;&#x9645;&#x662F;&#x4E00;&#x4E2A; Client&#xFF0C; &#x6211;&#x4EEC;&#x5148;&#x8FD8;&#x662F;&#x4ECE;&#x7528;&#x6237;&#x5165;&#x53E3;&#x4EE3;&#x7801;&#x6765;&#x770B;&#xFF0C;&#x770B;&#x4E00;&#x4E0B; JMeter &#x7684; <code>runNonGui</code> &#x51FD;&#x6570;&#xFF0C;&#x5728;&#x6700;&#x4E0B;&#x9762;&#x6709;&#x8FD9;&#x4E48;&#x51E0;&#x884C;&#x4EE3;&#x7801;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java.util.<span class="type">StringTokenizer</span> <span class="variable">st</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.StringTokenizer(remoteHostsString, <span class="string">&quot;,&quot;</span>);<span class="comment">//$NON-NLS-1$</span></span><br><span class="line">               List&lt;String&gt; hosts = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">               <span class="keyword">while</span> (st.hasMoreElements()) {</span><br><span class="line">                   hosts.add((String) st.nextElement());</span><br><span class="line">               }</span><br><span class="line">               </span><br><span class="line">               DistributedRunner distributedRunner=<span class="keyword">new</span> <span class="title class_">DistributedRunner</span>(<span class="built_in">this</span>.remoteProps);</span><br><span class="line">               distributedRunner.setStdout(System.out); <span class="comment">// NOSONAR</span></span><br><span class="line">               distributedRunner.setStdErr(System.err); <span class="comment">// NOSONAR</span></span><br><span class="line">               distributedRunner.init(hosts, clonedTree);</span><br><span class="line">               engines.addAll(distributedRunner.getEngines());</span><br><span class="line">               distributedRunner.start();</span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x91CC;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A; DistributeRunner &#xFF0C;&#x770B;&#x8D77;&#x6765;&#x662F;&#x4E00;&#x4E2A; &#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x7684; stub &#xFF0C;&#x5148;&#x770B;&#x4E00;&#x4E0B; <code>distributedRunner.init</code> &#x5728;&#x5E72;&#x4EC0;&#x4E48;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (idx &lt; addrs.size()) {</span><br><span class="line">                <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> addrs.get(idx);</span><br><span class="line">                println(<span class="string">&quot;Configuring remote engine: &quot;</span> + address);</span><br><span class="line">                <span class="type">JMeterEngine</span> <span class="variable">engine</span> <span class="operator">=</span> getClientEngine(address.trim(), tree);</span><br><span class="line">                <span class="keyword">if</span> (engine != <span class="literal">null</span>) {</span><br><span class="line">                    engines.put(address, engine);</span><br><span class="line">                    addrs.remove(address);</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    println(<span class="string">&quot;Failed to configure &quot;</span> + address);</span><br><span class="line">                    idx++;</span><br><span class="line">                }</span><br><span class="line">            }</span><br></pre></td></tr></table></figure>
<p>&#x5B83;&#x63A5;&#x6536;&#x8F93;&#x5165;&#x7684;&#x591A;&#x7EC4;Slave &#x7684;IP &#x548C; Port &#xFF0C;&#x7136;&#x540E;&#x4F1A;&#x521B;&#x5EFA;&#x5BF9;&#x5E94;&#x7684;&#xFF08;1:1&#xFF09;&#x7684; ClientJMeterEngine&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5728; <code>engines</code> &#x8FD9;&#x4E2A;&#x5BB9;&#x5668;&#x91CC;&#xFF0C;&#x7B49;&#x5B9E;&#x9645;<code>runTest</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x901A;&#x8FC7;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x5176;&#x81EA;&#x8EAB;&#x7684; <code>start(List&lt;String&gt; addresses) </code>&#x65B9;&#x6CD5;&#xFF0C;&#x904D;&#x5386;&#x6BCF;&#x4E2A;<code>ClientJMeterEngine</code> &#x5E76;&#x901A;&#x8FC7;RMI Call&#x6765;&#x8C03;&#x7528;Slave &#x6765;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(List&lt;String&gt; addresses)</span> {</span><br><span class="line">        println(<span class="string">&quot;Starting remote engines&quot;</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">now</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        println(<span class="string">&quot;Starting the test @ &quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(now) + <span class="string">&quot; (&quot;</span> + now + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String address : addresses) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="keyword">if</span> (engines.containsKey(address)) {</span><br><span class="line">                    engines.get(address).runTest();</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    log.warn(HOST_NOT_FOUND_MESSAGE, address);</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">catch</span> (IllegalStateException | JMeterEngineException e) { <span class="comment">// NOSONAR already reported to user</span></span><br><span class="line">                JMeterUtils.reportErrorToUser(e.getMessage(), JMeterUtils.getResString(<span class="string">&quot;remote_error_starting&quot;</span>)); <span class="comment">// $NON-NLS-1$  </span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        println(<span class="string">&quot;Remote engines have been started&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>###ClientJMeterEngine<br>&#x6700;&#x540E;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;<code>ClientJMeterEngine</code>&#x600E;&#x4E48;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;<code>JMeterEngine</code>&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4F46;&#x662F;&#x5185;&#x90E8;&#x662F;&#x4E00;&#x4E2A;RMI Client&#x3002;&#x9996;&#x5148;&#x662F;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;<code>RMI Client</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Registry</span> <span class="variable">registry</span> <span class="operator">=</span> LocateRegistry.getRegistry(</span><br><span class="line">               host, </span><br><span class="line">               port,</span><br><span class="line">               RmiUtils.createClientSocketFactory());</span><br><span class="line">        <span class="type">Remote</span> <span class="variable">remobj</span> <span class="operator">=</span> registry.lookup(name);</span><br><span class="line">        <span class="keyword">if</span> (remobj <span class="keyword">instanceof</span> RemoteJMeterEngine){</span><br><span class="line">            <span class="keyword">final</span> <span class="type">RemoteJMeterEngine</span> <span class="variable">rje</span> <span class="operator">=</span> (RemoteJMeterEngine) remobj;</span><br><span class="line">            <span class="keyword">if</span> (remobj <span class="keyword">instanceof</span> RemoteObject){</span><br><span class="line">                <span class="type">RemoteObject</span> <span class="variable">robj</span> <span class="operator">=</span> (RemoteObject) remobj;</span><br><span class="line">                System.out.println(<span class="string">&quot;Using remote object: &quot;</span>+robj.getRef().remoteToString()); <span class="comment">// NOSONAR</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> rje;</span><br><span class="line">        }</span><br></pre></td></tr></table></figure>
<p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x518D;&#x770B;&#x4E00;&#x4E0B;&#x5B83;&#x600E;&#x4E48;&#x5B9E;&#x73B0;<code>JMeterEngine</code>&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x4E00;&#x76EE;&#x4E86;&#x7136;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E2A;<code>stopTest()</code>&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x901A;&#x8FC7; RMI Client &#x6765;&#x8C03;&#x7528;&#x8FDC;&#x7A0B;&#x7684;&#x65B9;&#x6CD5;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stopTest</span><span class="params">(<span class="type">boolean</span> now)</span> {</span><br><span class="line">        log.info(<span class="string">&quot;About to {} remote test on {}&quot;</span>, now ? <span class="string">&quot;stop&quot;</span> : <span class="string">&quot;shutdown&quot;</span>, hostAndPort);</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            remote.rstopTest(now);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception ex) {</span><br><span class="line">            log.error(<span class="string">&quot;&quot;</span>, ex); <span class="comment">// $NON-NLS-1$</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>

<p>&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x5185;&#x5BB9;&#x5DEE;&#x4E0D;&#x591A;&#x5C31;&#x4ECB;&#x7ECD;&#x5230;&#x8FD9;&#x91CC;</p>
]]></content>
      <categories>
        <category>JMeter 源码解读</category>
      </categories>
  </entry>
  <entry>
    <title>golang channel 使用不当导致的 deadlock</title>
    <url>/2019/03/17/golang-channel-deadlock/</url>
    <content><![CDATA[<p>&#x6700;&#x8FD1;&#x5F00;&#x542F;&#x4E86;19&#x5E74;&#x7B2C;&#x4E8C;&#x4E2A;&#x91CD;&#x8981;&#x4EFB;&#x52A1;&#xFF0C;<code>Go Lang</code>&#x7684;&#x5B66;&#x4E60;&#xFF0C;&#x5982;&#x679C;&#x4E4B;&#x524D;&#x53EA;&#x662F;&#x56E0;&#x4E3A;&#x4E2A;&#x4EBA;&#x7231;&#x597D;&#x7684;&#x8BDD;&#xFF0C;&#x73B0;&#x5728;&#x662F;&#x56E0;&#x4E3A;<code>chaos monkey</code>&#x5F88;&#x591A;&#x90FD;&#x662F;&#x7528;<code>Go Lang</code>&#x5199;&#x7684;&#xFF0C;&#x4E0D;&#x5F97;&#x4E0D;&#x8981;&#x6293;&#x7D27;&#x5B8C;&#x6210;&#x8FD9;&#x5757;&#x77E5;&#x8BC6;&#x7684;&#x77ED;&#x677F;&#x4E86;</p>
<p>&#x4ECA;&#x5929;&#x5C1D;&#x8BD5;&#x7528;<code>goroutine</code> + <code>channel</code>&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4E0B;&#x8F7D;&#x8C46;&#x74E3;&#x56FE;&#x4E66;&#x56FE;&#x7247;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x597D;&#x50CF;&#x6211;&#x7279;&#x522B;&#x559C;&#x6B22;&#x62FF;&#x8C46;&#x74E3;&#x6765;&#x505A;&#x5B9E;&#x9A8C;&#xFF0C;&#x54C8;&#x54C8;&#xFF0C;&#x5E0C;&#x671B;&#x8C46;&#x74E3;&#x7684;&#x540C;&#x5B66;&#x770B;&#x5230;&#x4E86;&#x4E0D;&#x8981;&#x751F;&#x6C14;</p>
<p>##&#x5B9E;&#x73B0;&#x903B;&#x8F91;</p>
<p>&#x4EE3;&#x7801;&#x903B;&#x8F91;&#x5176;&#x5B9E;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x8FD9;&#x4E2A;&#x8981;&#x611F;&#x8C22;&#x8C46;&#x74E3;&#x7684;&#x975E;&#x5E38; Restful &#x7684; url , &#x8BA9;&#x6211;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x901A;&#x8FC7; parse HTML &#x6765;&#x83B7;&#x53D6;&#x56FE;&#x7247;&#x94FE;&#x63A5;&#xFF0C;&#x76F4;&#x63A5;&#x904D;&#x5386; id &#x5373;&#x53EF; ,&#x56E0; &#x4E3A; url &#x90FD;&#x975E;&#x5E38;&#x7B80;&#x5355; [<a href="https://img1.doubanio.com/view/subject/l/public/s10000000.jpg]">https://img1.doubanio.com/view/subject/l/public/s10000000.jpg]</a> , &#x8FD9;&#x91CC;&#x518D;&#x6B21;&#x611F;&#x8C22;&#x8C46;&#x74E3;&#xFF0C;&#x54C8;&#x3002;</p>
<h3 id="&#x4E3B;&#x51FD;&#x6570;"><a href="#&#x4E3B;&#x51FD;&#x6570;" class="headerlink" title="&#x4E3B;&#x51FD;&#x6570;"></a>&#x4E3B;&#x51FD;&#x6570;</h3><p>main &#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x5982;&#x4E0B;</p>
<ol>
<li>&#x521B;&#x5EFA; N &#x4E2A; go routine</li>
<li>&#x901A;&#x8FC7; &#x4E00;&#x4E2A; task channel &#xFF0C;&#x6765;&#x521B;&#x5EFA;&#x4E0D;&#x540C;&#x7684;&#x4E0B;&#x8F7D;&#x4EFB;&#x52A1;&#xFF0C;&#x5B9E;&#x9645;&#x5C31;&#x662F;&#x81EA;&#x589E;&#x7684;&#x65B9;&#x5F0F;&#x751F;&#x6210;&#x65B0;&#x7684;&#x4E0B;&#x8F7D; url</li>
<li>&#x901A;&#x8FC7;&#x4E00;&#x4E2A; result &#x7684;channel &#xFF0C;&#x83B7;&#x53D6; go routine &#x7684;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x7ED3;&#x679C;</li>
<li>&#x7B49;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> {</span><br><span class="line">	<span class="comment">//fmt.Println(&quot;start crawl the douban site&quot;)</span></span><br><span class="line">	init_directory()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// init the main process variables</span></span><br><span class="line">	quit := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, goRoutineSize)</span><br><span class="line">	task := <span class="built_in">make</span>(<span class="keyword">chan</span> ImageTask, goRoutineSize)</span><br><span class="line">	result := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, taskNumber)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// init the goroutine</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; goRoutineSize; i++ {</span><br><span class="line">		spider(task, result, quit)</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="comment">// init the task</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; taskNumber; i++ {</span><br><span class="line">		taskId := taskOffsize + i</span><br><span class="line">		url := fmt.Sprintf(<span class="string">&quot;https://img1.doubanio.com/view/subject/l/public/s%d.jpg&quot;</span>, taskId)</span><br><span class="line">		task &lt;- ImageTask{url: url, tid: taskId}</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="comment">// wait all the goroutine done</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; taskNumber; i++ {</span><br><span class="line">		&lt;-result</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; goRoutineSize; i++ {</span><br><span class="line">		quit &lt;- <span class="number">1</span></span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="built_in">close</span>(quit)</span><br><span class="line">	<span class="built_in">close</span>(result)</span><br><span class="line">	<span class="built_in">close</span>(task)</span><br><span class="line">	fmt.Println(<span class="string">&quot;finish the task&quot;</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<p>&#x770B;&#x4F3C;&#x7B80;&#x5355;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5728;<code>channel</code>&#x4E0A;&#x1F44E;&#x4E86;&#x5F88;&#x591A;&#x6B21;&#x5751;</p>
<h2 id="&#x5751;"><a href="#&#x5751;" class="headerlink" title="&#x5751;"></a>&#x5751;</h2><h3 id="all-goroutines-are-asleep-deadlock"><a href="#all-goroutines-are-asleep-deadlock" class="headerlink" title="all goroutines are asleep - deadlock!"></a>all goroutines are asleep - deadlock!</h3><p>&#x4E00;&#x5F00;&#x59CB;&#x6CA1;&#x6709;&#x7528;&#x5E26;buffer &#x7684;channel &#xFF0C;&#x5C31;&#x53D1;&#x751F;&#x4E86;<code>all goroutines are asleep - deadlock!</code>, &#x611F;&#x89C9;&#x5F88;&#x5947;&#x602A;&#xFF0C;google &#x4E86;&#x534A;&#x8FB9;&#x5929;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x662F;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;<code>channel</code>&#x7528;&#x6CD5;&#x9519;&#x8BEF;&#xFF0C;&#x5C1D;&#x8BD5;&#x505A;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x9A8C;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x662F;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x95EE;&#x9898;&#x7684;&#x4EE3;&#x7801;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> {</span><br><span class="line">	fmt.Println(<span class="string">&quot;start main2&quot;</span>)</span><br><span class="line">	ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line">	ch &lt;- <span class="number">1</span></span><br><span class="line">	fmt.Println(&lt;-ch)</span><br><span class="line">}</span><br></pre></td></tr></table></figure>



<p>&#x8FD0;&#x884C;&#x7684;&#x7ED3;&#x679C;&#x8FD8;&#x662F;&#x8001;&#x6837;&#x5B50;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">fatal <span class="type">error</span>: all goroutines are asleep - deadlock!</span><br><span class="line"></span><br><span class="line">goroutine <span class="number">1</span> [<span class="keyword">chan</span> send]:</span><br><span class="line">main.main()</span><br><span class="line">	/Users/ylshao/code/lab/douban_spider/src/github.com/markshao/main2.<span class="keyword">go</span>:<span class="number">9</span> +<span class="number">0xbc</span></span><br></pre></td></tr></table></figure>

<p>&#x6700;&#x540E;&#x53D1;&#x73B0;[&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;][<a href="https://my.oschina.net/u/157514/blog/149192]%E8%A7%A3%E9%87%8A%E7%9A%84%E6%AF%94%E8%BE%83%E6%B8%85,%E8%BF%99%E9%87%8C%E7%9A%84%E9%97%AE%E9%A2%98%E5%B0%B1%E6%98%AF%E5%A4%84%E5%9C%A8%E6%B2%A1%E6%9C%89buffer">https://my.oschina.net/u/157514/blog/149192]&#x89E3;&#x91CA;&#x7684;&#x6BD4;&#x8F83;&#x6E05;,&#x8FD9;&#x91CC;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5904;&#x5728;&#x6CA1;&#x6709;buffer</a> &#x7684;channel &#x4E0A;&#xFF0C;&#x4E0A;&#x9762;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x91CC;&#xFF0C;&#x6CA1;&#x6709;buffer &#x7684;channel &#x5F53;&#x4F60;&#x5199;&#x5165;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;block&#xFF0C;&#x76F4;&#x5230;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x62FF;&#x8D70;&#x8FD9;&#x4E2A;item&#xFF0C;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x7528;goroutine&#xFF0C;&#x7B49;&#x4E8E;&#x8BF4;master &#x7684;goroutine &#x5C31;&#x88AB;&#x6574;&#x4E2A;&#x9501;&#x4F4F;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x4E3A;&#x4EC0;&#x4E48;go runtime &#x4F1A;&#x62A5; deadlock&#x7684;&#x95EE;&#x9898;&#xFF0C;</p>
<h3 id="&#x4FEE;&#x6539;&#x6210;&#x4E24;&#x4E2A;goroutine-&#x7684;&#x6A21;&#x5F0F;&#x5C31;&#x6CA1;&#x95EE;&#x9898;&#x4E86;"><a href="#&#x4FEE;&#x6539;&#x6210;&#x4E24;&#x4E2A;goroutine-&#x7684;&#x6A21;&#x5F0F;&#x5C31;&#x6CA1;&#x95EE;&#x9898;&#x4E86;" class="headerlink" title="&#x4FEE;&#x6539;&#x6210;&#x4E24;&#x4E2A;goroutine &#x7684;&#x6A21;&#x5F0F;&#x5C31;&#x6CA1;&#x95EE;&#x9898;&#x4E86;"></a>&#x4FEE;&#x6539;&#x6210;&#x4E24;&#x4E2A;goroutine &#x7684;&#x6A21;&#x5F0F;&#x5C31;&#x6CA1;&#x95EE;&#x9898;&#x4E86;</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> {</span><br><span class="line">	fmt.Println(<span class="string">&quot;start main2&quot;</span>)</span><br><span class="line">	ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> {</span><br><span class="line">		ch &lt;- <span class="number">1</span></span><br><span class="line">	}()</span><br><span class="line"></span><br><span class="line">	fmt.Println(&lt;-ch)</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start main2</span><br><span class="line">1</span><br></pre></td></tr></table></figure>



<h3 id="&#x7A0B;&#x5E8F;&#x53C8;hang&#x4F4F;&#x4E86;"><a href="#&#x7A0B;&#x5E8F;&#x53C8;hang&#x4F4F;&#x4E86;" class="headerlink" title="&#x7A0B;&#x5E8F;&#x53C8;hang&#x4F4F;&#x4E86;"></a>&#x7A0B;&#x5E8F;&#x53C8;hang&#x4F4F;&#x4E86;</h3><p>&#x4E0A;&#x9762;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x89E3;&#x4E86;&#x4EE5;&#x540E;&#xFF0C;&#x6211;&#x628A;channel&#x6539;&#x6210;&#x4E86;&#x8FD9;&#x6837;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// goRoutineSize = 10</span></span><br><span class="line"><span class="comment">// taskNumber = 50</span></span><br><span class="line">quit := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, goRoutineSize) </span><br><span class="line">task := <span class="built_in">make</span>(<span class="keyword">chan</span> ImageTask, goRoutineSize)</span><br><span class="line">result := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, goRoutineSize)</span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x91CC;<code>goRoutineSize</code>&#x8868;&#x793A;&#x521B;&#x5EFA;&#x7684;&#x534F;&#x7A0B;&#x6570;&#x91CF;&#xFF0C;&#x53E6;&#x5916;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;<code>taskNumber</code>&#x8868;&#x793A;&#x4EFB;&#x52A1;&#x6570;&#x91CF;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x8FD0;&#x884C;&#x53C8;hang&#x4F4F;&#x4E86;&#xFF0C;&#x6211;&#x6000;&#x7591;&#x8FD8;&#x662F;hang &#x5728;&#x4E86;channel &#x4E0A;&#x9762;&#xFF0C;&#x5148;&#x770B;&#x4E00;&#x4E0B; worker &#x7684;<code>go routine</code>&#x7684;&#x903B;&#x8F91;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">spider</span><span class="params">(task <span class="keyword">chan</span> ImageTask, result, quit <span class="keyword">chan</span> <span class="type">int</span>)</span></span> {</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> {</span><br><span class="line">		<span class="keyword">for</span> {</span><br><span class="line">			<span class="keyword">select</span> {</span><br><span class="line">			<span class="keyword">case</span> t := &lt;-task:</span><br><span class="line">				downloadImage(t)</span><br><span class="line">				result &lt;- <span class="number">1</span></span><br><span class="line">				fmt.Printf(<span class="string">&quot;finish downloa the task %v \n&quot;</span>, t)</span><br><span class="line">			<span class="keyword">case</span> &lt;-quit:</span><br><span class="line">				fmt.Println(<span class="string">&quot;finish the go routine&quot;</span>)</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			<span class="keyword">default</span>:</span><br><span class="line">				time.Sleep(<span class="number">50</span> * time.Microsecond)</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}()</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<p>&#x6000;&#x7591;&#x662F;<code>result &lt;- 1 </code>&#x8FD9;&#x91CC;block&#x4E86;&#xFF0C;&#x5C1D;&#x8BD5;&#x5206;&#x89E3;&#x4E00;&#x4E0B;&#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;</p>
<ol>
<li>&#x5148;&#x521B;&#x5EFA;10 &#x4E2A; <code>go routine</code>, task channel &#x7684; buffer &#x5C31;&#x662F; 10</li>
<li>&#x7136;&#x540E;master goroutine &#x671D; task &#x91CC;&#x9762;&#x5199;&#x5165; 50 &#x4E2A;task&#xFF0C;&#x5B9E;&#x9645;&#x662F;&#x8981;&#x7B49; worker &#x5206;&#x6279;&#x62FF;&#x8D70;&#x4EFB;&#x52A1;&#x624D;&#x80FD;&#x518D;&#x5199;&#x5165;&#x7684;</li>
<li><strong>worker &#x505A;&#x5B8C;&#x4EFB;&#x52A1;&#x540E;&#xFF0C;&#x4F1A;&#x5199;&#x5165; result &#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x91CC; result &#x7684;buffer &#x662F; 10&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x65E6;&#x5199;&#x6EE1;&#xFF0C;worker &#x5C31;&#x4F1A;block &#x5728; <code>result &lt;- 1</code> &#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x4ED6;&#x4EEC;&#x5C31;&#x4E0D;&#x4F1A;&#x53BB;&#x83B7;&#x53D6;<code>task</code> , &#x7136;&#x540E;&#x5916;&#x90E8;&#x5C31;&#x4F1A;block &#x5728; <code>task &lt;- &#x2026;</code>&#x4E0A;&#xFF0C;&#x6574;&#x4F53;&#x5C31;hang&#x4F4F;&#x4E86;</strong></li>
</ol>
<p>&#x4FEE;&#x6539;&#x7684;&#x65B9;&#x5F0F;&#x5C31;&#x5F88;&#x7B80;&#x5355;&#x4E86;,result &#x7684; buffer size &#x6539;&#x6210; taskNumber &#x5C31;&#x597D;&#x4E86;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">quit := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, goRoutineSize)</span><br><span class="line">	task := <span class="built_in">make</span>(<span class="keyword">chan</span> ImageTask, goRoutineSize)</span><br><span class="line">	result := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, taskNumber)</span><br></pre></td></tr></table></figure>



<p>&#x6240;&#x4EE5;&#x8BF4;&#x867D;&#x7136;&#x90FD;&#x8BF4;go &#x7684;&#x5E76;&#x53D1;&#x597D;&#x5199;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x628A;channel &#x7406;&#x89E3;&#x597D;&#xFF0C;&#x7528;&#x597D;&#xFF0C;&#x771F;&#x662F;&#x4EFB;&#x91CD;&#x9053;&#x8FDC; </p>
<p>[<a href="https://my.oschina.net/u/157514/blog/149192%EF%BC%89]">https://my.oschina.net/u/157514/blog/149192&#xFF09;]</a>: </p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>goroutine</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次用 Golang 出面试题小记</title>
    <url>/2019/03/21/golang-interview-problem-1/</url>
    <content><![CDATA[<p>&#x6700;&#x8FD1;&#x4E00;&#x76F4;&#x5728;&#x5B66;&#x4E60; <code>Golang</code> ,&#x6B63;&#x597D;&#x4ECA;&#x5929;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x4E03;&#x725B;&#x7684;&#x5019;&#x9009;&#x4EBA;&#xFF0C;&#x5C31;&#x987A;&#x5E26;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x9898;&#x76EE;&#x8BA9;&#x4ED6;&#x7528; <code>Golang</code> &#x5199;&#xFF0C;&#x5728;&#x4ED6;&#x5199;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6211;&#x62C5;&#x5FC3;&#x81EA;&#x5DF1;&#x6CA1;&#x6CD5;&#x7ED9;&#x4ED6; review code &#xFF08;&#x6211;&#x4E5F;&#x662F;&#x4E2A;&#x65B0;&#x624B;&#xFF09;&#xFF0C;&#x5C31;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x7535;&#x8111;&#x4E0A;&#x5C1D;&#x8BD5;&#x4E86;&#x4E00;&#x628A;&#xFF0C;rush &#x7684;&#x6BD4;&#x8F83;&#x5FEB;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x9047;&#x5230;&#x4E86; <code>docklock</code>&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;</p>
<h3 id="&#x8003;&#x9898;"><a href="#&#x8003;&#x9898;" class="headerlink" title="&#x8003;&#x9898;"></a>&#x8003;&#x9898;</h3><p>&#x7528;&#x4E24;&#x4E2A;<code>goroutine</code>&#x5206;&#x522B;&#x6253;&#x5370;&#x5947;&#x6570;&#x548C;&#x5076;&#x6570;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8F93;&#x51FA;1~10</p>
<h3 id="&#x5B9E;&#x73B0;&#x601D;&#x8DEF;"><a href="#&#x5B9E;&#x73B0;&#x601D;&#x8DEF;" class="headerlink" title="&#x5B9E;&#x73B0;&#x601D;&#x8DEF;"></a>&#x5B9E;&#x73B0;&#x601D;&#x8DEF;</h3><p>&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x8003;&#x6838;&#x4E00;&#x4E0B;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#xFF0C;&#x5728;<code>java</code>&#x57FA;&#x672C;&#x5C31;&#x662F;&#x9760;<code>object.wait</code> &#x548C; <code>object.notifyAll</code>&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x4E0D;&#x591F;&#x7528;<code>Golang</code>&#x7684;channel &#x611F;&#x53D7;&#x4E0A;&#x4F1A;&#x4E0D;&#x592A;&#x4E00;&#x6837;</p>
<p>&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x7684;&#x5173;&#x952E;&#x70B9;&#x6709;3&#x4E2A;</p>
<ol>
<li>&#x786E;&#x4FDD;&#x5947;&#x6570;&#x7684;<code>goroutine</code>&#x662F;&#x4E00;&#x5B9A;&#x5728;&#x5076;&#x6570;&#x4E4B;&#x524D;&#x8FD0;&#x884C;&#x7684;</li>
<li>&#x5947;&#x6570;&#x548C;&#x5076;&#x6570;&#x7684;&#x4EA4;&#x66FF;&#x8F93;&#x51FA;</li>
<li>&#x7A0B;&#x5E8F;&#x6B63;&#x5E38;&#x9000;&#x51FA;</li>
</ol>
<p>&#x60F3;&#x6CD5;&#x4E0A;&#x5C31;&#x662F;&#x5F04;4&#x4E2A;<code>channel</code></p>
<ol>
<li><code>startChan</code> &#x8D1F;&#x8D23;&#x4FDD;&#x8BC1;&#x5947;&#x6570;&#x4E00;&#x5B9A;&#x5148;&#x5F00;&#x59CB;</li>
<li><code>notifyEven</code>&#x548C; <code>notifyOdd</code> &#x7528;&#x6765;&#x505A;&#x7EBF;&#x7A0B;&#x5207;&#x6362;</li>
<li><code>done</code> &#x7528;&#x6765;&#x505A;&#x4EFB;&#x52A1;&#x9000;&#x51FA;</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">startChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line">notifyEven := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">1</span>)</span><br><span class="line">notifyOdd := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">1</span>)</span><br><span class="line">done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p>buffer &#x7684;&#x8BBE;&#x8BA1;&#x4E3B;&#x8981;&#x662F;<code>done</code>, &#x56E0;&#x4E3A;&#x6709;2&#x4E2A;<code>goroutine</code>, &#x9632;&#x6B62;&#x5728;&#x5199;&#x5165;&#x7684;&#x65F6;&#x5019;block&#xFF0C;&#x7ED9;&#x4E86;2&#x7684;buffer</p>
<hr>
<h3 id="Goroutine-&#x4EE3;&#x7801;"><a href="#Goroutine-&#x4EE3;&#x7801;" class="headerlink" title="Goroutine &#x4EE3;&#x7801;"></a>Goroutine &#x4EE3;&#x7801;</h3><p>####&#x5947;&#x6570;&#x4EE3;&#x7801;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> {</span><br><span class="line">		<span class="comment">// pending on startChan</span></span><br><span class="line">		&lt;-startChan</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">10</span>; i += <span class="number">2</span> {</span><br><span class="line">			fmt.Println(i)</span><br><span class="line">			notifyEven &lt;- <span class="number">1</span></span><br><span class="line">			&lt;-notifyOdd</span><br><span class="line">		}</span><br><span class="line">		</span><br><span class="line">		done &lt;- <span class="number">1</span></span><br><span class="line">	}()</span><br></pre></td></tr></table></figure>

<p>####&#x5076;&#x6570;&#x4EE3;&#x7801;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> {</span><br><span class="line">		<span class="comment">// pending on startChan</span></span><br><span class="line">		&lt;-notifyEven</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">2</span>; i &lt;= <span class="number">10</span>; i += <span class="number">2</span> {</span><br><span class="line">			fmt.Println(i)</span><br><span class="line">			notifyOdd &lt;- <span class="number">1</span></span><br><span class="line">			&lt;-notifyEven</span><br><span class="line">		}</span><br><span class="line">		done &lt;- <span class="number">1</span></span><br><span class="line">	}()</span><br></pre></td></tr></table></figure>

<p>####&#x4E3B;&#x51FD;&#x6570;&#x4EE3;&#x7801;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">startChan &lt;- <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++ {</span><br><span class="line">  &lt;-done</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<h4 id="&#x89E3;&#x91CA;&#x4E00;&#x4E0B;"><a href="#&#x89E3;&#x91CA;&#x4E00;&#x4E0B;" class="headerlink" title="&#x89E3;&#x91CA;&#x4E00;&#x4E0B;"></a>&#x89E3;&#x91CA;&#x4E00;&#x4E0B;</h4><ol>
<li>&#x5947;&#x6570;&#x7EBF;&#x7A0B;pending &#x5728;<code>&lt;-startChan</code>&#x4E0A;&#xFF0C;&#x7B49;&#x4E3B;&#x7EBF;&#x7A0B;<code>startChan &lt;- 1</code>&#x6765;&#x5524;&#x9192;</li>
<li>&#x5947;&#x6570;&#x5076;&#x6570;&#x4E4B;&#x95F4;&#x4E92;&#x73B0;&#x5524;&#x9192;&#x548C;&#x6C89;&#x7761;&#xFF0C;&#x505A;&#x5B8C;&#x5168;&#x90E8;&#x5DE5;&#x4F5C;&#x540E;&#xFF0C;&#x8C03;&#x7528;<code>done &lt;- 1</code></li>
<li>&#x4E3B;&#x7EBF;&#x7A0B; block &#x5728; <code>&lt;-done</code>&#x4E0A;&#xFF0C;&#x7B49;&#x6240;&#x6709;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x505A;&#x5B8C;&#x4E86;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x7EC4;&#x518D;&#x63A8;&#x51FA;</li>
</ol>
<p>&#x4E00;&#x5207;&#x770B;&#x4F3C;&#x5F88;&#x5FEB;&#x5C31;&#x5199;&#x5B8C;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x8FD0;&#x884C;&#xFF0C;&#x8FD8;&#x662F;&#x9047;&#x5230;&#x4E86;<code>deadlock</code>&#x95EE;&#x9898;</p>
<hr>
<h3 id="&#x95EE;&#x9898;&#x6392;&#x67E5;&#x548C;&#x6539;&#x8FDB;"><a href="#&#x95EE;&#x9898;&#x6392;&#x67E5;&#x548C;&#x6539;&#x8FDB;" class="headerlink" title="&#x95EE;&#x9898;&#x6392;&#x67E5;&#x548C;&#x6539;&#x8FDB;"></a>&#x95EE;&#x9898;&#x6392;&#x67E5;&#x548C;&#x6539;&#x8FDB;</h3><h4 id="deadlock-bug-fix"><a href="#deadlock-bug-fix" class="headerlink" title="deadlock bug fix"></a>deadlock bug fix</h4><p>&#x600E;&#x4E48;&#x4F1A;<code>deadlock</code>&#x5462;&#xFF0C;&#x60F3;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x54E6;&#xFF0C;&#x539F;&#x6765;&#x5947;&#x6570;&#x518D;&#x6253;&#x5370;&#x4E86;9&#x4EE5;&#x540E;&#x5C31;&#x63A8;&#x51FA;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5076;&#x6570;&#x8FD8;block&#x5728;<code>&lt;-notifyEven</code>&#x4E0A;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x6B7B;&#x9501;&#x4E86;&#x997F;&#xFF0C;Fix &#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x9000;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x901A;&#x8FC7;<code>notifyEven &lt;- 1</code>&#x628A;&#x5076;&#x6570;&#x5524;&#x9192;&#x5C31;&#x597D;&#x4E86;</p>
<h4 id="sync-WaitGroup"><a href="#sync-WaitGroup" class="headerlink" title="sync.WaitGroup"></a>sync.WaitGroup</h4><p><code>done</code> &#x8FD9;&#x4E2A;&#x4E8B;&#x60C5;&#x770B;&#x8D77;&#x6765;&#x5C31;&#x662F;&#x4EE5;&#x524D; java &#x91CC;&#x9762;&#x7684;<code>join</code>&#x5728;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x8FD9;&#x79CD;common&#x7684;&#x4E8B;&#x60C5;&#x8FD8;&#x8981;&#x81EA;&#x5DF1;&#x5199;&#xFF0C;&#x592A;low&#x4E86;&#xFF0C;&#x67E5;&#x4E86;&#x4E00;&#x4E0B;&#x539F;&#x6765;golang&#x662F;&#x6709;&#x4E00;&#x4E2A;<code>sync</code>&#x5E93;&#x505A;&#x7C7B;&#x4F3C;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x7528;<code>waitGroup</code>&#x66FF;&#x6362;<code>done</code>&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x6700;&#x540E;&#x8D34;&#x4E00;&#x4E0B;&#x73B0;&#x5728;&#x7684;&#x4EE3;&#x7801;</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"> startChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line">notifyEven := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">1</span>)</span><br><span class="line">notifyOdd := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"><span class="comment">//done := make(chan int, 2)</span></span><br><span class="line">wg.Add(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> {</span><br><span class="line">	<span class="comment">// pending on startChan</span></span><br><span class="line">	&lt;-startChan</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">10</span>; i += <span class="number">2</span> {</span><br><span class="line">		fmt.Println(i)</span><br><span class="line">		notifyEven &lt;- <span class="number">1</span></span><br><span class="line">		&lt;-notifyOdd</span><br><span class="line">	}</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	notifyEven &lt;- <span class="number">1</span></span><br><span class="line">	<span class="comment">//done &lt;- 1</span></span><br><span class="line">	wg.Done()</span><br><span class="line">}()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> {</span><br><span class="line">	<span class="comment">// pending on startChan</span></span><br><span class="line">	&lt;-notifyEven</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">2</span>; i &lt;= <span class="number">10</span>; i += <span class="number">2</span> {</span><br><span class="line">		fmt.Println(i)</span><br><span class="line">		notifyOdd &lt;- <span class="number">1</span></span><br><span class="line">		&lt;-notifyEven</span><br><span class="line">	}</span><br><span class="line">	<span class="comment">//done &lt;- 1</span></span><br><span class="line">	wg.Done()</span><br><span class="line">}()</span><br><span class="line"></span><br><span class="line">startChan &lt;- <span class="number">1</span></span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line">fmt.Println(<span class="string">&quot;done test&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>&#x6B64;&#x523B;&#x6211;&#x60F3;&#x8BF4;&#x4E00;&#x53E5;&#xFF0C;go&#x5199;&#x5E76;&#x53D1;&#x771F;&#x6709;&#x8DA3;</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
  </entry>
  <entry>
    <title>愚人节澳门游记</title>
    <url>/2019/04/07/yurenjie-macau-youji/</url>
    <content><![CDATA[<p>&#x501F;&#x7740;&#x5AB3;&#x5987;&#x513F;&#x7ED9;&#x8001;&#x4E08;&#x4EBA;&#x5E86;&#x795D;&#x751F;&#x65E5;&#x7684;&#x673A;&#x4F1A;&#xFF0C;&#x6211;&#x4E5F;&#x6709;&#x5E78;&#x8DDF;&#x7740;&#x53BB;&#x4E86;&#x4E00;&#x6B21;&#x6FB3;&#x95E8;&#xFF0C;&#x4E5F;&#x7B97;&#x5B8C;&#x6210;&#x4E86;&#x6E2F;&#x6FB3;&#x53F0;&#x89C2;&#x5149;&#x8BA1;&#x5212;&#x7684;&#x6700;&#x540E;&#x4E00;&#x5757;&#x62FC;&#x56FE;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#x8981;&#x611F;&#x8C22;&#x5AB3;&#x5987;&#x513F;&#x7684;&#x8F9B;&#x52B3;&#xFF0C;&#x5728;&#x7E41;&#x5FD9;&#x7684;&#x5DE5;&#x4F5C;&#x4E4B;&#x4F59;&#x8FD8;&#x8981;&#x8D1F;&#x8D23;&#x6574;&#x4E2A;&#x65C5;&#x884C;&#x653B;&#x7565;&#x7684;&#x5B89;&#x6392;&#x3002;&#x8FD9;&#x6B21;&#x7684;&#x65C5;&#x884C;&#x4E3B;&#x8981;&#x662F;&#x8212;&#x9002;&#x6E38;&#xFF0C;&#x6BD5;&#x7ADF;&#x662F;&#x5E26;&#x7740;&#x4E24;&#x4F4D;&#x8001;&#x4EBA;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x6CA1;&#x6709;&#x5B89;&#x6392;&#x4EC0;&#x4E48;&#x4E00;&#x5927;&#x65E9;&#x7684;&#x89C2;&#x5149;&#xFF0C;&#x57FA;&#x672C;&#x5C31;&#x662F;&#x5728;&#x9152;&#x5E97;&#x5403;&#x5403;&#x559D;&#x559D;&#xFF0C;&#x5F53;&#x7136;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#x53BB;&#x201D;&#x8D4C;&#x201D;&#x4E00;&#x628A;</p>
<h3 id="&#x7B2C;&#x4E00;&#x5929;"><a href="#&#x7B2C;&#x4E00;&#x5929;" class="headerlink" title="&#x7B2C;&#x4E00;&#x5929;"></a>&#x7B2C;&#x4E00;&#x5929;</h3><p>&#x4E00;&#x5927;&#x65E9;&#x7684;&#x98DE;&#x673A;&#x4ECE;&#x6D66;&#x4E1C;&#x673A;&#x573A;&#x98DE;&#x6FB3;&#x95E8;&#xFF0C;&#x5DEE;&#x4E0D;&#x591A;&#x4E2D;&#x5348;12&#x70B9;&#x7684;&#x65F6;&#x5019;&#x843D;&#x5730;&#x3002;&#x6FB3;&#x95E8;&#x673A;&#x573A;&#x7ED9;&#x4EBA;&#x7684;&#x611F;&#x89C9;&#x5F88;&#x7834;&#x65E7;&#xFF0C;&#x4E5F;&#x5F88;&#x5C0F;&#xFF0C;&#x867D;&#x7136;&#x4E00;&#x76F4;&#x8BF4;&#x6E2F;&#x6FB3;&#xFF0C;&#x6E2F;&#x6FB3;&#xFF0C;&#x4F46;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x8E0F;&#x4E0A;&#x6FB3;&#x95E8;&#x7684;&#x571F;&#x5730;&#xFF0C;&#x6211;&#x7684;&#x611F;&#x89C9;&#x662F;&#x5C0F;&#x5E76;&#x4E14;&#x5F88;&#x7834;&#x65E7;&#x3002;&#x673A;&#x573A;&#x51FA;&#x6765;&#x5C31;&#x6709;&#x5C31;&#x5F88;&#x7684;&#x201D;&#x53D1;&#x8D22;&#x8F66;&#x201D;&#xFF0C;&#x6240;&#x8C13;&#x7684;&#x53D1;&#x8D22;&#x8F66;&#x5C31;&#x662F;&#x8D4C;&#x573A;&#x5B89;&#x6392;&#x63A5;&#x9001;&#x6E38;&#x5BA2;&#x53BB;&#x8D4C;&#x573A;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x4E5F;&#x5F88;&#x5FEB;&#x627E;&#x5230;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x53D1;&#x8D22;&#x8F66;&#xFF0C;&#x5C31;&#x987A;&#x5229;&#x51FA;&#x53D1;&#x4E86;</p>
<p>&#x6FB3;&#x95E8;&#x7531;2&#x4E2A;&#x5C0F;&#x5C9B;&#x7EC4;&#x6210;&#xFF0C;&#x4E00;&#x4E2A;&#x53EB;&#x672C;&#x5C9B;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x53EB;&#x6C39;&#x4ED4;&#xFF0C;&#x673A;&#x573A;&#x5C31;&#x5728;&#x6C39;&#x4ED4;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x8D4C;&#x573A;&#x9152;&#x5E97;&#x4E5F;&#x5728;&#x6C39;&#x4ED4;&#xFF0C;&#x5F00;&#x8FC7;&#x53BB;&#x975E;&#x5E38;&#x8FD1;&#x3002;&#x6C39;&#x4ED4;&#x597D;&#x50CF;&#x662F;&#x540E;&#x6765;&#x586B;&#x6D77;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x6700;&#x521D;&#x5C31;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x672C;&#x5C9B;&#xFF0C;&#x672C;&#x5730;&#x7684;&#x5C45;&#x6C11;&#x4E5F;&#x5927;&#x90FD;&#x4F4F;&#x5728;&#x672C;&#x5C9B;&#x4E0A;&#x3002;</p>
<p>&#x79BB;&#x5F00;&#x673A;&#x573A;&#x6CA1;&#x591A;&#x4E45;&#x5C31;&#x5230;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x9152;&#x5E97; - &#x94F6;&#x6CB3;&#x3002;&#x548C;&#x673A;&#x573A;&#x7684;&#x7834;&#x8D25;&#x7684;&#x76F8;&#x6BD4;&#xFF0C;&#x9152;&#x5E97;&#x8D4C;&#x573A;&#x7ED9;&#x4EBA;&#x7684;&#x611F;&#x89C9;&#x5C31;&#x662F;&#x5BCC;&#x4E3D;&#x5802;&#x7687;, &#x6211;&#x7528;&#x77E5;&#x4E4E;&#x67E5;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x94F6;&#x6CB3;&#x7684;&#x8001;&#x677F;&#x662F;&#x5415;&#x5FD7;&#x548C;&#xFF0C;&#x597D;&#x50CF;&#x662F;&#x6FB3;&#x95E8;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x8D4C;&#x738B;&#xFF0C;&#x8EAB;&#x4EF7;&#x6709;140&#x591A;&#x4EBF;&#x7F8E;&#x91D1; &#xFF0C;&#x5389;&#x5BB3;&#x5389;&#x5BB3;</p>
<p><img src="/2019/04/07/yurenjie-macau-youji/yinhe.jpeg" alt="&#x94F6;&#x6CB3;"></p>
<p>&#x6574;&#x4E2A;&#x94F6;&#x6CB3;&#x662F;&#x4E00;&#x4E2A;&#x8D85;&#x5927;&#x7684;shopping mall&#xFF0C; &#x4E00;&#x697C;&#x5168;&#x662F;&#x8D4C;&#x573A;&#x548C;&#x5404;&#x79CD;&#x5546;&#x5E97; &#x3002; &#x6574;&#x4E2A;&#x94F6;&#x6CB3;&#x6709;&#x591A;&#x5BB6;&#x9152;&#x5E97;&#xFF0C;&#x542C;&#x8BF4;&#x4F60;&#x5982;&#x679C;&#x8D4C;&#x7684;&#x5927;&#x7684;&#x8BDD;&#xFF0C;&#x662F;&#x4F1A;&#x8D60;&#x9001;&#x623F;&#x95F4;&#x7684;&#xFF0C;&#x6211;&#x60F3;&#x4F30;&#x8BA1;&#x8981;&#x51E0;&#x767E;&#x4E07;&#x7684;&#x8D4C;&#x8D44;&#x624D;&#x53EF;&#x4EE5;&#x5427;&#x3002;</p>
<p>&#x697C;&#x4E0B;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5BA4;&#x5916;&#x7684;&#x6E38;&#x6CF3;&#x6C60;&#xFF0C;&#x548C;&#x4E00;&#x4E2A;&#x4EBA;&#x9020;&#x6D77;&#x6D6A;&#x7684;&#x6C99;&#x6EE9;&#xFF0C;&#x672C;&#x6765;&#x60F3;&#x4E0B;&#x53BB;&#x6E38;&#x6CF3;&#x7684;&#xFF0C;&#x540E;&#x6765;&#x56E0;&#x4E3A;&#x5929;&#x6C14;&#x4E0D;&#x592A;&#x597D;&#xFF0C;&#x5C31;&#x6CA1;&#x4E0B;&#x53BB;&#x3002;&#x7B2C;&#x4E00;&#x5929;&#x56E0;&#x4E3A;&#x5750;&#x98DE;&#x673A;&#x6709;&#x70B9;&#x7D2F;&#xFF0C;&#x5C31;&#x5728;&#x9644;&#x8FD1;&#x7684;&#x4E00;&#x4E2A;&#x8461;&#x8404;&#x7259;&#x9910;&#x5385;&#x5403;&#x4E86;&#x4E00;&#x4E2A;&#x5348;&#x9910;&#xFF0C;&#x665A;&#x4E0A;&#x966A;&#x8001;&#x5A46;&#x53BB;&#x89C1;&#x4E86;&#x4E00;&#x4E2A;&#x5979;&#x5728;&#x6FB3;&#x95E8;&#x7684;&#x5927;&#x5B66;&#x540C;&#x5B66;&#xFF0C;&#x4E5F;&#x987A;&#x4FBF;&#x53BB;&#x4E86;&#x4E00;&#x6B21;&#x672C;&#x5C9B;&#xFF0C;&#x5403;&#x4E86;&#x4E00;&#x4E0B;&#x5F53;&#x5730;&#x7684;&#x751C;&#x54C1;&#x5C0F;&#x5403;&#xFF0C;&#x56DE;&#x9152;&#x5E97;&#x5C31;&#x65E9;&#x65E9;&#x7761;&#x4E86;</p>
<h3 id="&#x7B2C;&#x4E8C;&#x5929;"><a href="#&#x7B2C;&#x4E8C;&#x5929;" class="headerlink" title="&#x7B2C;&#x4E8C;&#x5929;"></a>&#x7B2C;&#x4E8C;&#x5929;</h3><p>&#x4E00;&#x5927;&#x65E9;&#x53BB;&#x9152;&#x5E97;&#x697C;&#x4E0B;&#x7684;&#x6E38;&#x6CF3;&#x6C60;&#x6E38;&#x4E86;&#x4E00;&#x6B21;&#xFF0C;&#x5B9E;&#x5728;&#x662F;&#x592A;&#x51B7;&#x4E86;&#xFF0C;&#x6CA1;&#x575A;&#x6301;&#x591A;&#x4E45;&#x5C31;&#x4E0A;&#x6765;&#x4E86;&#xFF0C;&#x5F53;&#x4E2D;&#x8FD8;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x5927;&#x9646;&#x6765;&#x7684;&#x6E38;&#x5BA2;&#xFF0C;&#x4E0B;&#x53BB;&#x7AD9;&#x4E86;2&#x5206;&#x949F;&#x5C31;&#x56E0;&#x4E3A;&#x592A;&#x51B7;&#x9003;&#x8D70;&#x4E86;&#xFF0C;&#x672C;&#x60F3;&#x518D;&#x53BB;&#x4E00;&#x4E0B;&#x4EBA;&#x9020;&#x6D77;&#x6D6A;&#xFF0C;&#x73B0;&#x5728;&#x770B;&#x53EA;&#x80FD;&#x7B49;&#x4E0B;&#x6B21;&#x518D;&#x53BB;&#x4E86;</p>
<p>&#x4E0B;&#x5348;&#x53BB;&#x4E86;&#x4E00;&#x8D9F;&#x5927;&#x4E09;&#x5DF4;&#x724C;&#x574A;, &#x4EBA;&#x592A;&#x591A;&#x4E86;&#xFF0C;&#x5178;&#x578B;&#x7684;&#x4E2D;&#x56FD;&#x65C5;&#x6E38;&#x7279;&#x8272;&#x666F;&#x70B9;&#x3002;&#x770B;&#x5230;&#x4E00;&#x4E2A;&#x97E9;&#x56FD;&#x5BFC;&#x6E38;&#x5E26;&#x7740;&#x4E00;&#x5E2E;&#x97E9;&#x56FD;&#x6E38;&#x5BA2;&#x5728;&#x62FC;&#x547D;&#x4ECB;&#x7ECD;&#xFF0C;&#x6211;&#x4E5F;&#x771F;&#x5FC3;&#x4F69;&#x670D;&#x4ED6;&#x7684;&#x53E3;&#x624D;&#xFF0C;&#x8DB3;&#x8DB3;&#x8BB2;&#x4E86;30&#x591A;&#x5206;&#x949F;&#xFF0C;&#x867D;&#x7136;&#x6211;&#x5565;&#x90FD;&#x6CA1;&#x542C;&#x61C2;&#x3002;&#x7167;&#x7247;&#x62CD;&#x7684;&#x89D2;&#x5EA6;&#x4E0D;&#x592A;&#x597D;&#xFF0C;&#x5C31;&#x968F;&#x4FBF;&#x653E;&#x4E00;&#x5F20;&#x7F51;&#x4E0A;&#x7684;</p>
<p><img src="/2019/04/07/yurenjie-macau-youji/sanba.jpeg" alt="SANBA"></p>
<p>&#x665A;&#x4E0A;&#x8001;&#x5A46;&#x5E26;&#x6211;&#x4EEC;&#x53BB;&#x5403;&#x4E86;&#x4E00;&#x4E2A;&#x6FB3;&#x95E8;&#x5F53;&#x5730;&#x6700;&#x6709;&#x540D;&#x7684;&#x6D77;&#x9C9C;&#x5927;&#x6392;&#x6863;&#xFF0C;&#x90A3;&#x91CC;6&#x70B9;&#x5F00;&#x95E8;&#xFF0C;&#x6211;&#x4EEC;&#x65E9;&#x65E9;&#x5C31;&#x8FC7;&#x53BB;&#x6392;&#x961F;&#x4E86; &#x3002;&#x5E97;&#x7ED9;&#x4EBA;&#x7684;&#x611F;&#x89C9;&#x5C31;&#x662F;TVB &#x7535;&#x89C6;&#x5267;&#x91CC;&#x9762;&#x7684;&#x90A3;&#x79CD;&#x53F6;&#x8363;&#x6DFB;&#x4ED6;&#x4EEC;&#x4E09;&#x5144;&#x5F1F;&#x7ECF;&#x5E38;&#x53BB;&#x5403;&#x996D;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x975E;&#x5E38;&#x7834;&#x548C;&#x810F;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x822C;&#x8FD9;&#x6837;&#x7684;&#x5730;&#x65B9;&#x5BB9;&#x6613;&#x6709;&#x597D;&#x5403;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x70B9;&#x4E86;&#x4E00;&#x4E2A;&#x6D77;&#x9C9C;&#x7172;&#xFF0C;&#x4E00;&#x4E2A;&#x6912;&#x76D0;&#x867E;&#xFF0C;&#x4E00;&#x4E2A;&#x6912;&#x76D0;&#x9E2D;&#x820C;&#xFF0C;&#x597D;&#x4E0D;&#x597D;&#x5403;&#xFF0C;&#x770B;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x56FE;&#x5C31;&#x77E5;&#x9053;&#x4E86;</p>
<p><img src="/2019/04/07/yurenjie-macau-youji/meishi.jpeg" alt="meishi"></p>
<h4 id="&#x8D4C;&#x573A;"><a href="#&#x8D4C;&#x573A;" class="headerlink" title="&#x8D4C;&#x573A;"></a>&#x8D4C;&#x573A;</h4><p>&#x9152;&#x8DB3;&#x996D;&#x9971;&#x56DE;&#x5230;&#x9152;&#x5E97;&#xFF0C;&#x7A0D;&#x5FAE;&#x4F11;&#x606F;&#x4E00;&#x4E0B;&#x5C31;&#x51C6;&#x5907;&#x53BB;&#x672C;&#x6B21;&#x65C5;&#x884C;&#x7684;&#x91CD;&#x8981;&#x76EE;&#x7684;<code>casino</code> &#x73A9;&#x4E00;&#x628A;&#x4E86;&#x3002;&#x79C9;&#x7740;&#x5C0F;&#x8D4C;&#x6021;&#x60C5;&#xFF0C;&#x5927;&#x8D4C;&#x4F24;&#x8EAB;&#x7684;&#x539F;&#x5219;&#xFF0C;&#x6211;&#x548C;&#x8001;&#x5A46;&#x5546;&#x91CF;&#xFF0C;&#x51B3;&#x5B9A;&#x51FA;&#x8D44;1000 &#x6E2F;&#x5E01;&#x53BB;&#x8D62;&#x56DE;&#x4E00;&#x4E2A;&#x4E16;&#x754C;&#x3002;&#x8FDB;&#x5927;&#x95E8;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x88AB;&#x4FDD;&#x5B89;&#x558A;&#x4F4F;&#x4E86;&#xFF0C;&#x6211;&#x4E5F;&#x6CA1;&#x542C;&#x61C2;&#x5565;&#xFF0C;&#x4EE5;&#x4E3A;&#x662F;&#x8981;&#x641C;&#x8EAB;&#xFF0C;&#x5C31;&#x628A;&#x53CC;&#x624B;&#x4E3E;&#x4E86;&#x8D77;&#x6765;&#xFF0C;&#x5176;&#x5B9E;&#x4EBA;&#x5BB6;&#x662F;&#x8981;&#x770B;&#x4E00;&#x4E0B;&#x6211;&#x4EEC;&#x7684;&#x901A;&#x884C;&#x8BC1;&#xFF0C;&#x786E;&#x8BA4;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x6210;&#x5E74;&#xFF0C;&#x771F;&#x662F;&#x871C;&#x6C41;&#x5C34;&#x5C2C;&#x3002;</p>
<p>&#x8FDB;&#x4E86;&#x8D4C;&#x573A;&#xFF0C;&#x9996;&#x5148;&#x660E;&#x767D;&#x4E86;&#x4E00;&#x4E2A;&#x9053;&#x7406;&#xFF0C;&#x539F;&#x6765;&#x8D4C;&#x573A;&#x91CC;&#x662F;&#x6CA1;&#x6709;&#x5154;&#x5973;&#x90CE;&#x7684;&#xFF0C;&#x6E2F;&#x7247;&#x90FD;&#x662F;&#x9A97;&#x4EBA;&#x7684;&#xFF0C;&#x8377;&#x5B98;&#x90FD;&#x662F;&#x4E00;&#x4E9B;&#x963F;&#x59E8;&#x548C;&#x7237;&#x53D4;&#x3002;&#x5F53;&#x7136;&#x57FA;&#x672C;&#x4E0A;&#x6BCF;&#x5F20;&#x684C;&#x5B50;&#x90FD;&#x662F;&#x4EBA;&#x6EE1;&#x4E3A;&#x60A3;&#xFF0C;&#x53EA;&#x80FD;&#x611F;&#x53F9;&#x4E2D;&#x56FD;&#x6709;&#x94B1;&#x4EBA;&#x8FD8;&#x771F;&#x662F;&#x591A;&#x3002;&#x4E0D;&#x540C;&#x7684;&#x8D4C;&#x684C;&#x73A9;&#x7684;&#x4E1C;&#x897F;&#x90FD;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6211;&#x770B;&#x4E86;&#x534A;&#x5929;&#x4E5F;&#x6CA1;&#x770B;&#x61C2;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x53D1;&#x73B0;&#x6211;&#x90A3;&#x4E2A;1000&#x5757;&#x6E2F;&#x5E01;&#x5176;&#x5B9E;&#x5728;&#x5F88;&#x591A;&#x8D4C;&#x53F0;&#x8FDE;&#x4E2A;&#x8D77;&#x6B65;&#x4EF7;&#x90FD;&#x4E0D;&#x591F;&#xFF0C;&#x54C8;&#x54C8;&#xFF0C;&#x53EA;&#x80FD;&#x5148;&#x89C2;&#x671B;&#x89C2;&#x671B;&#xFF0C;&#x770B;&#x770B;&#x6709;&#x6CA1;&#x6709;&lt; 1000 &#x7684;&#x3002;</p>
<p>&#x6700;&#x540E;&#x6211;&#x4EEC;&#x9A7B;&#x8DB3;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x8D4C;&#x5927;&#x5C0F;&#x7684;&#x8D4C;&#x53F0;&#xFF0C;&#x90A3;&#x91CC;&#x6700;&#x5C0F;&#x7684;&#x8D4C;&#x6CE8;&#x662F;300&#xFF0C;&#x597D;&#x50CF;&#x653E;&#x773C;&#x671B;&#x53BB;&#xFF0C;&#x6CA1;&#x6709;&#x6BD4;&#x8FD9;&#x4E2A;&#x66F4;&#x5C0F;&#x7684;&#x8D4C;&#x684C;&#x4E86;(&#x9664;&#x4E86;&#x8001;&#x864E;&#x673A;) &#xFF0C;&#x90A3;&#x5C31;&#x4E0A;&#x53BB;&#x8BD5;&#x4E00;&#x628A;&#xFF0C;&#x5F53;&#x4E2D;&#x8FC7;&#x7A0B;&#x7701;&#x7565;&#xFF0C;&#x4E00;&#x901A;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x8D5A;&#x4E86;<code>1800</code>, &#x770B;&#x6765;&#x7B2C;&#x4E00;&#x6B21;&#x53BB;&#x8D4C;&#x573A;&#x7684;&#x8FD0;&#x6C14;&#x8FD8;&#x4E0D;&#x8D56;&#xFF0C;&#x89C1;&#x597D;&#x5C31;&#x6536;&#x7684;&#x6211;&#x4EEC;&#x7ACB;&#x523B;&#x5C31;&#x9009;&#x62E9;&#x53BB;&#x8D26;&#x623F;&#x8FD8;&#x94B1;&#x8D70;&#x4EBA;&#x3002;</p>
<p>&#x5982;&#x679C;&#x4F60;&#x4EE5;&#x4E3A;&#x6211;&#x4EEC;&#x5C31;&#x771F;&#x7684;&#x8D5A;&#x4E86;1800&#xFF0C;&#x90A3;&#x5C31;&#x9519;&#x4E86;&#xFF0C;&#x540E;&#x6765;&#x6211;&#x53C8;&#x62FF;&#x4E86;1000&#x5757;&#x4E0B;&#x697C;&#x60F3;&#x518D;&#x8BD5;&#x8BD5;&#x4E00;&#x628A;&#x8FD0;&#x6C14;&#xFF0C;&#x6CA1;&#x60F3;&#x5230;5&#x5206;&#x949F;&#x5C31;&#x628A;1000&#x5757;&#x8F93;&#x6389;&#x4E86;</p>
<h3 id="&#x7B2C;&#x4E09;&#x5929;"><a href="#&#x7B2C;&#x4E09;&#x5929;" class="headerlink" title="&#x7B2C;&#x4E09;&#x5929;"></a>&#x7B2C;&#x4E09;&#x5929;</h3><p>&#x7761;&#x5230;&#x4E2D;&#x5348;&#x81EA;&#x7136;&#x9192;&#xFF0C;&#x867D;&#x7136;&#x6628;&#x5929;&#x8F93;&#x4E86;1000&#x5757;&#xFF0C;&#x4F46;&#x662F;&#x597D;&#x5728;&#x8FD8;&#x662F;&#x6700;&#x540E;&#x8D5A;&#x4E86;800&#xFF0C;&#x5FC3;&#x60C5;&#x8FD8;&#x662F;&#x633A;&#x597D;&#x7684;&#xFF0C;&#x4E2D;&#x5348;&#x5403;&#x4E86;&#x996D;&#x5C31;checkout&#x4E86;&#xFF0C;&#x628A;&#x884C;&#x674E;&#x5BC4;&#x5B58;&#x5728;&#x4E86;&#x9152;&#x5E97;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53BB;&#x4E86;&#x4E00;&#x6B21;&#x5A01;&#x5C3C;&#x65AF;&#x4EBA;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x66F4;&#x77E5;&#x540D;&#x7684;&#x8D4C;&#x573A;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x6E38;&#x5BA2;&#x592A;&#x591A;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8FD9;&#x6B21;&#x6CA1;&#x6709;&#x9009;&#x62E9;&#x8FD9;&#x91CC;. &#x5A01;&#x5C3C;&#x65AF;&#x4EBA;&#x6700;&#x5927;&#x7684;&#x4E00;&#x4E2A;&#x4EAE;&#x70B9;&#x662F;&#x5728;shopping mall &#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x9020;&#x7684;&#x5929;&#x7A7A;&#x7A79;&#x9876;&#xFF0C;&#x7136;&#x540E;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x5730;&#x4E0B;&#x6CB3;&#xFF0C;&#x4E24;&#x8FB9;&#x90FD;&#x662F;&#x5404;&#x79CD;&#x5546;&#x5E97;&#xFF0C;&#x7ED9;&#x4EBA;&#x7684;&#x611F;&#x89C9;&#x5B9B;&#x5982;&#x8EAB;&#x5728;&#x5A01;&#x5C3C;&#x65AF;&#xFF0C;&#x975E;&#x5E38;&#x6F02;&#x4EAE;</p>
<p><img src="/2019/04/07/yurenjie-macau-youji/weinisiren.jpeg" alt="weinisiren"></p>
<p>&#x4ECE;&#x5A01;&#x5C3C;&#x65AF;&#x4EBA;&#x56DE;&#x6765;&#xFF0C;&#x4E5F;&#x5DEE;&#x4E0D;&#x591A;&#x4E0B;&#x5348;3&#x70B9;&#x4E86;&#xFF0C;&#x56DE;&#x53BB;&#x62FF;&#x4E86;&#x4E00;&#x4E2A;&#x884C;&#x674E;&#x5C31;&#x5306;&#x5306;&#x8D76;&#x5F80;&#x673A;&#x573A;&#x4E86;&#x3002;</p>
<p>&#x6FB3;&#x95E8;&#x7684;&#x8D4C;&#x573A;&#x7684;&#x786E;&#x7ED9;&#x4EBA;&#x5F88;&#x9707;&#x64BC;&#x7684;&#x611F;&#x89C9;&#xFF0C;&#x7EB8;&#x9189;&#x91D1;&#x8FF7;&#x7684;&#x751F;&#x6D3B;&#x4F1A;&#x8BA9;&#x4EBA;&#x4E00;&#x5EA6;&#x5FD8;&#x8BB0;&#x81EA;&#x5DF1;&#x662F;&#x8C01;&#xFF0C;&#x597D;&#x5728;&#x7406;&#x667A;&#x5F88;&#x5FEB;&#x8BA9;&#x6211;&#x6E05;&#x9192;&#xFF0C;&#x660E;&#x5929;&#x56DE;&#x53BB;&#x7EE7;&#x7EED;&#x7801;&#x4EE3;&#x7801;&#x4E86;&#x3002;</p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>Pytest 源码解读 [0] - Kickoff 篇</title>
    <url>/2019/08/10/pytest-source-analysis/</url>
    <content><![CDATA[<h3 id="Pytest-&#x6E90;&#x7801;&#x89E3;&#x8BFB;"><a href="#Pytest-&#x6E90;&#x7801;&#x89E3;&#x8BFB;" class="headerlink" title="Pytest &#x6E90;&#x7801;&#x89E3;&#x8BFB;"></a>Pytest &#x6E90;&#x7801;&#x89E3;&#x8BFB;</h3><p>&#x4E4B;&#x524D;&#x5B9A;&#x7684;&#x76EE;&#x6807;&#xFF0C;2019 &#x5E74;&#x8981;&#x5B8C;&#x6210; <code>pytest</code> &#x7684;&#x6E90;&#x7801;&#x89E3;&#x8BFB;&#xFF0C;&#x5B9E;&#x5728;&#x662F;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x592A;&#x5FD9;&#x803D;&#x6401;&#x4E0B;&#x6765;&#xFF0C;&#x773C;&#x770B;&#x5DF2;&#x7ECF;&#x5230;&#x4E86;8&#x6708;&#x4EFD;&#xFF0C;&#x518D;&#x4E0D;&#x5F00;&#x59CB;&#x7684;&#x8BDD;&#x4F30;&#x8BA1;&#x5C31;&#x8981;&#x9EC4;&#x4E86; (&#x4E4B;&#x524D;&#x4FE1;&#x8A93;&#x65E6;&#x65E6;&#x7ACB;&#x7684;Flag&#x4E0D;&#x80FD;&#x8F7B;&#x6613;&#x6253;&#x7834;)&#x3002;&#x5176;&#x5B9E;&#x65F6;&#x95F4;&#x6324;&#x6324;&#x4E5F;&#x603B;&#x662F;&#x6709;&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x518D;&#x627E;&#x501F;&#x53E3;&#x4E86;&#x3002;&#x800C;&#x4E14;&#x4F30;&#x8BA1;&#x672A;&#x6765;&#x4E5F;&#x4E0D;&#x4F1A;&#x518D;&#x53BB;&#x770B; pytest &#x7684;source code &#x4E86;&#xFF0C;&#x5C31;&#x5F53;&#x7ED9;&#x81EA;&#x5DF1;&#x7684; Pytest &#x8FD9;&#x6BB5;&#x7ECF;&#x5386;&#x505A;&#x4E2A;&#x603B;&#x7ED3;&#x5427;&#x3002;</p>
<p>Python &#x5728;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x7684;&#x9009;&#x62E9;&#x4E0A;&#x4E3B;&#x8981;&#x662F;3&#x4E2A;</p>
<ul>
<li>unittest</li>
<li>nose</li>
<li>pytest</li>
</ul>
<p><code>unittest</code> &#x662F; python &#x81EA;&#x5E26;&#x7684;&#x4E00;&#x4E2A;&#x8F6E;&#x5B50;&#xFF0C;&#x4E00;&#x822C;&#x5E38;&#x7528;&#x7684;&#x9700;&#x6C42;&#x90FD;&#x80FD;&#x6EE1;</p>
<p><code>nose</code> (<a href="https://nose.readthedocs.io/en/latest/">https://nose.readthedocs.io/en/latest/</a>) &#x662F;&#x4E00;&#x4E2A;&#x7B2C;&#x4E09;&#x65B9;&#x7684;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#xFF0C;&#x4E4B;&#x524D;&#x5728;<code>emc</code> &#x548C; <code>greenplum</code> &#x56E2;&#x961F;&#x4E00;&#x8D77;&#x641E;&#x4E86;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x57FA;&#x4E8E; nose &#x7684;&#xFF0C;&#x611F;&#x89C9;&#x529F;&#x80FD;&#x8981;&#x6BD4; unittest &#x8981;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#xFF0C;&#x4E0D;&#x591F;&#x6211;&#x6CA1;&#x6709;&#x7528;&#x7684;&#x592A;&#x6DF1;&#x5165;&#xFF0C;&#x4E5F;&#x6CA1;&#x8D44;&#x683C;&#x70B9;&#x8BC4;</p>
<p><code>pytest</code> &#x662F;&#x6211;&#x52A0;&#x5165;&#x5230; Splunk &#x7684;&#x65F6;&#x5019;&#x5F00;&#x59CB;&#x63A5;&#x89E6;&#x7684;&#xFF0C;Splunk &#x5F53;&#x65F6;&#x5185;&#x90E8;&#x6709;&#x4E00;&#x4E2A;&#x53EB; <code>Helmut</code> &#x7684;&#x6846;&#x67B6;&#xFF0C;&#x5C31;&#x662F;&#x57FA;&#x4E8E; <code>pytest</code> &#x6765;&#x6253;&#x9020;&#x7684; &#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x77E5;&#x9053;Pytest&#xFF0C;&#x521A;&#x5F00;&#x59CB;&#x6700;&#x4E0D;&#x4E60;&#x60EF;&#x7684;&#x4F7F;&#x7528; <code>Fixture</code>, &#x540E;&#x6765;&#x624D;&#x6162;&#x6162;&#x54C1;&#x5473;&#x5230;&#x4E86; <code>Fixture</code> &#x8FD9;&#x79CD; Lazy Loading &#x7684;&#x8BBE;&#x8BA1;&#x4EF7;&#x503C;&#x3002;&#x540E;&#x6765;&#x57FA;&#x672C;&#x4E0A;&#x6211;&#x5C31;&#x4E00;&#x76F4;&#x5728;&#x7528; Pytest &#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x5728;&#x4F9D;&#x56FE;&#x7684;&#x65F6;&#x5019;&#x56E2;&#x961F;&#x5199;&#x4E86;&#x4E00;&#x4E2A; <code>Fixture Factory</code> &#x7684; module &#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x7B80;&#x5316;&#x4E86; Fixture &#x7684;&#x4F7F;&#x7528;&#x548C;&#x7BA1;&#x7406;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x5F53;&#x7136;&#x8FD9;&#x6B21;&#x4E3B;&#x8981;&#x662F;&#x805A;&#x7126;&#x5728; Pytest &#x7684;&#x6E90;&#x7801;&#x5206;&#x6790;&#x4E0A;&#xFF0C;&#x81F3;&#x4E8E; Pytest &#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x5927;&#x5BB6;&#x81EA;&#x5DF1;&#x770B; Pytest &#x7684;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x5427;&#x3002;</p>
<h3 id="&#x4E00;&#x4E9B;&#x5468;&#x8FB9;&#x4FE1;&#x606F;"><a href="#&#x4E00;&#x4E9B;&#x5468;&#x8FB9;&#x4FE1;&#x606F;" class="headerlink" title="&#x4E00;&#x4E9B;&#x5468;&#x8FB9;&#x4FE1;&#x606F;"></a>&#x4E00;&#x4E9B;&#x5468;&#x8FB9;&#x4FE1;&#x606F;</h3><h5 id="Holger-Krekel"><a href="#Holger-Krekel" class="headerlink" title="Holger Krekel"></a>Holger Krekel</h5><ul>
<li>Pytest &#x7684;&#x4F5C;&#x8005;&#xFF0C;&#x5176;&#x5B9E; Pytest &#x6700;&#x5F00;&#x59CB;&#x7684;&#x540D;&#x5B57;&#x53EB; <code>Py.test</code></li>
<li>&#x4ED6;&#x662F;&#x4E2A;&#x5FB7;&#x56FD;&#x4EBA;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x662F; <code>PyPy</code> &#x548C; <code>tox</code> &#x7684;&#x4F5C;&#x8005;</li>
</ul>
<h5 id="Pluggy"><a href="#Pluggy" class="headerlink" title="Pluggy"></a>Pluggy</h5><ul>
<li>(<a href="https://github.com/pytest-dev/pluggy">https://github.com/pytest-dev/pluggy</a>)</li>
<li>Pytest &#x7684;&#x6838;&#x5FC3;&#x5B9E;&#x9645;&#x7684;&#x57FA;&#x4E8E; <code>Pluggy</code> &#x8FD9;&#x4E2A; plugin framework &#x7684;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A; pytest &#x672C;&#x8EAB;&#x5C31;&#x662F;&#x7531;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x63D2;&#x4EF6;&#x7EC4;&#x6210;&#x7684;</li>
<li>&#x672C;&#x6765; pluggy &#x7684;&#x4EE3;&#x7801;&#x662F;&#x5728; pytest &#x7684; repo &#x91CC;&#xFF0C;&#x540E;&#x6765;&#x8FC1;&#x79FB;&#x4E86;&#x51FA;&#x6765;&#xFF0C;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x9879;&#x76EE;&#x3002;Pluggy &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;plugin framework &#x6765;&#x770B;&#x4E5F;&#x662F;&#x5F88;&#x4F18;&#x96C5;&#x7684;&#x5B58;&#x5728;</li>
</ul>
<h3 id="&#x6E90;&#x7801;&#x5206;&#x6790;&#x8BA1;&#x5212;"><a href="#&#x6E90;&#x7801;&#x5206;&#x6790;&#x8BA1;&#x5212;" class="headerlink" title="&#x6E90;&#x7801;&#x5206;&#x6790;&#x8BA1;&#x5212;"></a>&#x6E90;&#x7801;&#x5206;&#x6790;&#x8BA1;&#x5212;</h3><p>&#x4E3B;&#x8981;&#x662F;&#x5206;&#x4E24;&#x6B65;&#x8D70;</p>
<ol>
<li>Pluggy &#x7684;&#x5206;&#x6790;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F; Pytest &#x7684;&#x6838;&#x5FC3;&#x5F15;&#x64CE;</li>
<li>Pytest &#x5206;&#x6790;</li>
</ol>
]]></content>
      <categories>
        <category>pytest 源码解读</category>
      </categories>
      <tags>
        <tag>pytest</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytest 源码解读 [1] - [pluggy] 插件框架介绍</title>
    <url>/2019/10/01/pluggy-guideline/</url>
    <content><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4ECA;&#x5929;&#x662F;&#x7956;&#x56FD;&#x6BCD;&#x4EB2;&#x7684;70&#x534E;&#x8BDE;&#xFF0C;&#x65E9;&#x4E0A;&#x5728;&#x5BB6;&#x91CC;&#x548C;&#x5AB3;&#x5987;&#x4E00;&#x8D77;&#x770B;&#x4E86;&#x4EE4;&#x4EBA;&#x6FC0;&#x52A8;&#x7684;&#x9605;&#x5175;&#xFF0C;&#x771F;&#x5FC3;&#x4E3A;&#x81EA;&#x5DF1;&#x505A;&#x4F4D;&#x4E00;&#x4E2A;&#x4E2D;&#x56FD;&#x4EBA;&#x800C;&#x81EA;&#x8C6A;&#x3002;&#x56FD;&#x5E86;&#x7684;&#x4E0A;&#x6D77;&#x5929;&#x6C14;&#x6709;&#x70B9;&#x64CD;&#x86CB;&#xFF0C;&#x53D7;&#x5230;&#x53F0;&#x98CE;&#x7684;&#x5F71;&#x54CD;&#x5916;&#x9762;&#x662F;&#x5927;&#x98CE;&#x5927;&#x96E8;&#xFF0C;&#x4E0D;&#x8FC7;&#x56E0;&#x4E3A;&#x5AB3;&#x5987;&#x6000;&#x5B55;&#x7684;&#x539F;&#x56E0;&#x672C;&#x6765;&#x4E5F;&#x6CA1;&#x8BA1;&#x5212;&#x51FA;&#x53BB;&#x73A9;&#xFF0C;&#x8D81;&#x7740;&#x96BE;&#x5F97;&#x7684;&#x5047;&#x671F;&#xFF0C;&#x5728;&#x5BB6;&#x559D;&#x559D;&#x8336;&#xFF0C;&#x5403;&#x5403;&#x4E1C;&#x897F;&#xFF0C;&#x5199;&#x5199;&#x535A;&#x5BA2;&#xFF0C;&#x628A;&#x7684;&#x4E4B;&#x524D;&#x62D6;&#x6B20;&#x7684; <code>Pytest &#x6E90;&#x7801;&#x89E3;&#x8BFB;</code> &#x7ED9;&#x5B8C;&#x6210;&#x3002;</p>
<p>&#x8A00;&#x5F52;&#x6B63;&#x4F20;&#xFF0C;&#x4E0A;&#x6B21;&#x8BF4;&#x4E86; <code>Pytest</code> &#x7684;&#x6838;&#x5FC3;&#x662F;&#x57FA;&#x4E8E;<code>Pluggy</code>&#x8FD9;&#x4E2A; Python Plugin &#x6846;&#x67B6;&#xFF0C;&#x8FD9;&#x6B21;&#x5148;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;  <code>Pluggy</code> &#x7684;&#x6838;&#x5FC3;&#x529F;&#x80FD;</p>
<h1 id="&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;Demo"><a href="#&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;Demo" class="headerlink" title="&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;Demo"></a>&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;Demo</h1><p><code>Pluggy</code> &#x5DF2;&#x7ECF;&#x4ECE;&#x4E4B;&#x524D;&#x7684; <code>Pytest</code>&#x6E90;&#x7801;&#x4E2D;&#x72EC;&#x7ACB;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684; <a href="https://github.com/pytest-dev/pluggy">Repo</a> , &#x5BF9;&#x4E8E; <code>Pytest</code>&#x81EA;&#x8EAB;&#x4E5F;&#x662F;&#x628A;&#x5B83;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5916;&#x90E8;&#x7684;&#x4F9D;&#x8D56;&#x6765;&#x4F7F;&#x7528;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x5C31;&#x7528;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684; Python &#x9879;&#x76EE;&#x6765; Demo&#xFF0C;&#x5148;&#x770B;&#x4EE3;&#x7801;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pluggy <span class="keyword">import</span> HookspecMarker, HookimplMarker, PluginManager</span><br><span class="line"></span><br><span class="line">spec = HookspecMarker(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line">impl = HookimplMarker(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HookSpec</span>:</span><br><span class="line"><span class="meta">    @spec(<span class="params">historic=<span class="literal">True</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HookImpl1</span>:</span><br><span class="line"><span class="meta">    @impl</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">pm = PluginManager(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line">pm.add_hookspecs(HookSpec)</span><br><span class="line">pm.register(HookImpl1())</span><br><span class="line">pm.hook.calculate(a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p><strong>Output</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[3]</span><br></pre></td></tr></table></figure>

<p>&#x89E3;&#x91CA;</p>
<ul>
<li><code>Pluggy</code>&#x7684;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#x4E09;&#x4E2A;&#x7C7B; <code>HookspecMarker</code>, <code>HookimplMarker</code>,<code>PluginManager</code>&#xFF0C;&#x6838;&#x5FC3;&#x7684;&#x63D2;&#x4EF6;&#x903B;&#x8F91;&#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x7EC4; hook &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7136;&#x540E; plugin &#x662F;hook &#x65B9;&#x6CD5;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;</li>
<li>&#x6574;&#x4E2A; Project &#x9700;&#x8981;&#x7528;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x552F;&#x4E00;&#x7684; Project Name &#xFF0C;&#x8FD9;&#x91CC;&#x662F; <code>pluggy_demo_1</code></li>
<li><code>HookSpec</code>&#x662F;&#x4E00;&#x4E2A;&#x7533;&#x660E; hook method &#x7684; class &#xFF0C;&#x6BCF;&#x4E00;&#x4E2A; hook method &#x9700;&#x8981;&#x7528;<code>spec</code>&#x7684;&#x88C5;&#x9970;&#x5668;&#x6765;&#x88C5;&#x9970;</li>
<li><code>HookImpl1</code> &#x662F;&#x4E00;&#x4E2A; plugin &#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x9700;&#x8981;&#x5B8C;&#x6574;&#x5B9E;&#x73B0;&#x5BF9;&#x5E94;&#x7684;hook&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x8FC7;<code>impl</code>&#x88C5;&#x9970;&#x5668;&#x6765;&#x88C5;&#x9970;</li>
<li>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x7684;&#x8C03;&#x7528;&#x903B;&#x8F91;&#x5C31;&#x662F;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;<code>PluginManager</code>&#x5BF9;&#x8C61;&#xFF0C;&#x6CE8;&#x518C; Spec &#x548C;&#x5BF9;&#x5E94;&#x7684; plugin &#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7; <code>PluginManager</code>&#x81EA;&#x5E26;&#x7684; hook &#x53D8;&#x91CF;&#x6765;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684;hook&#x65B9;&#x6CD5;&#xFF0C;&#x4F20;&#x5165;&#x76F8;&#x5173;&#x7684;&#x53C2;&#x6570;&#x5373;&#x53EF;&#x3002;<strong>&#x5207;&#x8BB0;&#x5728;&#x8C03;&#x7528; hook &#x7684;&#x65F6;&#x5019;&#x53C2;&#x6570;&#x5FC5;&#x987B;&#x662F;&#x901A;&#x8FC7;&#x5173;&#x952E;&#x5B57;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x4F20;&#x9012;</strong></li>
</ul>
<h1 id="hook-&#x548C;-plugin-&#x7684;&#x5173;&#x7CFB;"><a href="#hook-&#x548C;-plugin-&#x7684;&#x5173;&#x7CFB;" class="headerlink" title="hook &#x548C; plugin &#x7684;&#x5173;&#x7CFB;"></a>hook &#x548C; plugin &#x7684;&#x5173;&#x7CFB;</h1><p>hook &#x548C; plugin &#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x662F; <code>1:N</code>&#xFF0C;&#x5982;&#x679C;&#x8BF4;&#x6CE8;&#x518C;&#x4E86;&#x591A;&#x4E2A;&#x5B9E;&#x73B0;&#x4E86;&#x540C;&#x4E00;&#x4E2A; hook &#x7684; plugin &#xFF0C;&#x4F1A;&#x8FD4;&#x56DE;&#x591A;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pluggy <span class="keyword">import</span> HookspecMarker, HookimplMarker, PluginManager</span><br><span class="line"></span><br><span class="line">spec = HookspecMarker(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line">impl = HookimplMarker(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HookSpec</span>:</span><br><span class="line"><span class="meta">    @spec</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HookImpl1</span>:</span><br><span class="line"><span class="meta">    @impl</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HookImpl2</span>:</span><br><span class="line"><span class="meta">    @impl</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a * b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pm = PluginManager(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line">pm.add_hookspecs(HookSpec)</span><br><span class="line">pm.register(HookImpl1())</span><br><span class="line">pm.register(HookImpl2())</span><br><span class="line"><span class="built_in">print</span>(pm.hook.calculate(a=<span class="number">1</span>, b=<span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<p><strong>Output</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2,3]</span><br></pre></td></tr></table></figure>

<p>&#x89E3;&#x91CA;</p>
<ul>
<li><p>&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6CE8;&#x518C;&#x4E86;&#x4E24;&#x4E2A; plugin , <code>HookImpl1</code>&#x548C; <code>HookImpl2</code>&#xFF0C;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x4E86;&#x52A0;&#x6CD5;&#x548C;&#x4E58;&#x6CD5;&#x7684;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x903B;&#x8F91;</p>
</li>
<li><p>&#x4E00;&#x6B21; hook &#x7684;&#x8C03;&#x7528;&#x8FD4;&#x56DE;&#x4E86;2&#x4E2A;plugin &#x6267;&#x884C;&#x7684;&#x7ED3;&#x679C;&#xFF0C;<strong>&#x6CE8;&#x610F;&#x4E00;&#x4E0B;</strong>&#x8FD9;&#x91CC;&#x662F;&#x5148;&#x6267;&#x884C;&#x540E;&#x6CE8;&#x518C;&#x7684; <code>HookImpl2</code>&#xFF0C;&#x518D;&#x6267;&#x884C;&#x5148;&#x6CE8;&#x518C;&#x7684;<code>HookImpl1</code>, &#x4E0B;&#x6B21;&#x5177;&#x4F53;&#x5206;&#x6790; <code>pluggy</code> &#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x89E3;&#x91CA;</p>
</li>
</ul>
<h1 id="plugin-&#x8C03;&#x7528;&#x987A;&#x5E8F;"><a href="#plugin-&#x8C03;&#x7528;&#x987A;&#x5E8F;" class="headerlink" title="plugin &#x8C03;&#x7528;&#x987A;&#x5E8F;"></a>plugin &#x8C03;&#x7528;&#x987A;&#x5E8F;</h1><h2 id="HookimplMarker-&#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;"><a href="#HookimplMarker-&#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;" class="headerlink" title="HookimplMarker &#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;"></a>HookimplMarker &#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;</h2><p><code>HookimplMarker</code> &#x88C5;&#x9970;&#x5668;&#x652F;&#x6301;&#x4E00;&#x4E9B;&#x7279;&#x5B9A;&#x7684;&#x53C2;&#x6570;</p>
<ul>
<li>tryfirst - &#x987E;&#x540D;&#x601D;&#x4E49;&#x5C31;&#x662F;&#x8FD9;&#x4E2A; plugin &#x5728; <code>1:N</code> &#x7684;&#x6267;&#x884C;&#x94FE;&#x8DEF;&#x4E2D;&#x5148;&#x6267;&#x884C;</li>
<li>trylast - &#x987E;&#x540D;&#x601D;&#x4E49;&#x540E;&#x6267;&#x884C;</li>
<li>hookwrapper - &#x57FA;&#x4E8E; <code>yield</code> &#x5B9E;&#x73B0;&#x7684;&#x4E00;&#x4E2A;wrapper&#xFF0C;&#x5148;&#x6267;&#x884C; wrapper plugin &#x7684;&#x4E00;&#x90E8;&#x5206;&#x903B;&#x8F91;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x5176;&#x4ED6; plugin&#xFF0C;&#x6700;&#x540E;&#x6267;&#x884C;&#x5269;&#x4F59;&#x7684; wrapper plugin &#x903B;&#x8F91;</li>
</ul>
<h3 id="tryfirst"><a href="#tryfirst" class="headerlink" title="tryfirst"></a>tryfirst</h3><p>&#x6211;&#x4EEC;&#x4FEE;&#x6539;&#x4E00;&#x4E0B;&#x521A;&#x624D;&#x90A3;&#x4E2A;demo&#xFF0C;&#x628A;<code>HookImpl1</code>&#x52A0;&#x4E0A;<code>tryfirst</code>&#x53C2;&#x6570;, &#x6267;&#x884C;&#x7684;&#x987A;&#x5E8F;&#x5C31;&#x53D8;&#x4E86;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HookImpl1</span>:</span><br><span class="line"><span class="meta">    @impl(<span class="params">tryfirst=<span class="literal">True</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a + b    </span><br></pre></td></tr></table></figure>

<p><strong>Output</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[3,2]</span><br></pre></td></tr></table></figure>

<p>HookspecMarker &#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;</p>
<h3 id="hookwrapper"><a href="#hookwrapper" class="headerlink" title="hookwrapper"></a>hookwrapper</h3><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7279;&#x6B8A; plugin <code>ImplWrapper</code>&#xFF0C;&#x5148;&#x770B;&#x4EE3;&#x7801;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pluggy <span class="keyword">import</span> HookspecMarker, HookimplMarker, PluginManager</span><br><span class="line"></span><br><span class="line">spec = HookspecMarker(<span class="string">&quot;plugin_demo_2&quot;</span>)</span><br><span class="line">impl = HookimplMarker(<span class="string">&quot;plugin_demo_2&quot;</span>)</span><br><span class="line">pm = PluginManager(<span class="string">&quot;plugin_demo_2&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Spec</span>:</span><br><span class="line"><span class="meta">    @spec</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Impl1</span>:</span><br><span class="line"><span class="meta">    @impl</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Impl2</span>:</span><br><span class="line"><span class="meta">    @impl(<span class="params">tryfirst=<span class="literal">True</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a + b + <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImplWrapper</span>:</span><br><span class="line"><span class="meta">    @impl(<span class="params">hookwrapper=<span class="literal">True</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;before logic&quot;</span>)</span><br><span class="line">        outcome = <span class="keyword">yield</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Get Result %s&quot;</span> % outcome.result)</span><br><span class="line">        <span class="keyword">return</span> a * b * <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pm.add_hookspecs(Spec)</span><br><span class="line">pm.register(Impl1())</span><br><span class="line">pm.register(Impl2())</span><br><span class="line">pm.register(ImplWrapper())</span><br><span class="line"><span class="built_in">print</span>(pm.hook.calculate(a=<span class="number">1</span>, b=<span class="number">2</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Output</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">before logic</span><br><span class="line">Get Result [5, 3]</span><br><span class="line">[5, 3]</span><br></pre></td></tr></table></figure>



<p>&#x89E3;&#x91CA;</p>
<ul>
<li><code>ImplWrapper</code> &#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C; <code>coroutine</code>&#x7684; &#x751F;&#x6210;&#x5668;&#xFF0C;&#x5B83;&#x6709;&#x4E24;&#x6BB5;&#x903B;&#x8F91;&#xFF0C;&#x7528;<code>outcome = yield</code>&#x6765;&#x5206;&#x5272;</li>
<li>outcome &#x901A;&#x8FC7; <code>yield</code>&#x6765;&#x83B7;&#x53D6;&#xFF0C;&#x5B83;&#x662F;<code>_Result</code>&#x5BF9;&#x8C61;&#xFF0C;&#x5305;&#x542B;&#x4E86;&#x975E;wrapper &#x7684; plugin &#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x662F; <code>Impl1</code> &#x548C; <code>Impl2</code>&#xFF0C;&#x4ECE;&#x5B9E;&#x9645;&#x7684;output&#x6765;&#x770B;&#xFF0C;<code>Get Result [5,3]</code>&#x5C31;&#x662F;&#x83B7;&#x53D6;&#x4E86;&#x8FD4;&#x56DE;&#x503C;</li>
<li>wrapper plugin &#x7684;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x4F1A;&#x88AB; ignore &#x7684;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x539F;&#x56E0;&#x4E0B;&#x6B21;&#x5206;&#x6790;&#x6E90;&#x7801;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7ED9;&#x89E3;&#x91CA;</li>
</ul>
<h2 id="HookspecMarker-&#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;"><a href="#HookspecMarker-&#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;" class="headerlink" title="HookspecMarker &#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;"></a>HookspecMarker &#x88C5;&#x9970;&#x5668;&#x53C2;&#x6570;</h2><p><code>HookspckMarker</code>&#x88C5;&#x9970;&#x5668;&#x4E5F;&#x652F;&#x6301;&#x4E00;&#x4E9B;&#x53C2;&#x6570;&#xFF0C;&#x4E3B;&#x8981;&#x662F;</p>
<ul>
<li>firstresult - &#x83B7;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;plugin &#x6267;&#x884C;&#x7ED3;&#x679C;&#x540E;&#x5C31;&#x4E2D;&#x65AD;&#x540E;&#x7EED;&#x6267;&#x884C;</li>
<li>historic - &#x8868;&#x793A;&#x8FD9;&#x4E2A; hook &#x662F;&#x9700;&#x8981;&#x4FDD;&#x5B58;call history &#x7684;&#xFF0C;&#x5F53;&#x6709;&#x65B0;&#x7684; plugin &#x6CE8;&#x518C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x56DE;&#x653E;&#x5386;&#x53F2;</li>
</ul>
<h3 id="firstresult"><a href="#firstresult" class="headerlink" title="firstresult"></a>firstresult</h3><p>&#x8C03;&#x6574;&#x4E00;&#x4E0B; <code>HookSpec</code>&#xFF0C;&#x6DFB;&#x52A0; <code>firstresult</code>&#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;&#x6267;&#x884C;&#x7ED3;&#x679C;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Spec:</span><br><span class="line">    @spec(firstresult)</span><br><span class="line">    def calculate(self, a, b):</span><br><span class="line">        pass</span><br><span class="line">        </span><br><span class="line">class HookImpl1:</span><br><span class="line">    @impl(tryfirst=True)</span><br><span class="line">    def calculate(self, a, b):</span><br><span class="line">        return a + b  </span><br></pre></td></tr></table></figure>

<p> <strong>Output</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[2]</span><br></pre></td></tr></table></figure>



<h1 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h1><p>&#x5173;&#x4E8E; <code>plugin</code>&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;&#x5C31;&#x5148;&#x4ECB;&#x7ECD;&#x5230;&#x8FD9;&#x91CC;&#x4E86;&#xFF0C;&#x5927;&#x5BB6;&#x6709;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x770B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x4ECB;&#x7ECD;&#x7684;&#x5F88;&#x7EC6;&#x81F4; <a href="https://buildmedia.readthedocs.org/media/pdf/pluggy/latest/pluggy.pdf">https://buildmedia.readthedocs.org/media/pdf/pluggy/latest/pluggy.pdf</a> </p>
]]></content>
      <categories>
        <category>pytest 源码解读</category>
      </categories>
      <tags>
        <tag>pytest</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytest 源码解读 [2] - [pluggy] 核心设计理念和代码结构</title>
    <url>/2019/10/02/pytest-core-design-and-code-structure/</url>
    <content><![CDATA[<h1 id="&#x4EE3;&#x7801;&#x7ED3;&#x6784;"><a href="#&#x4EE3;&#x7801;&#x7ED3;&#x6784;" class="headerlink" title="&#x4EE3;&#x7801;&#x7ED3;&#x6784;"></a>&#x4EE3;&#x7801;&#x7ED3;&#x6784;</h1><p><code>pluggy</code> &#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x975E;&#x5E38;&#x7B80;&#x4ECB;&#xFF0C;&#x628A; <a href="https://github.com/pytest-dev/pluggy">repo</a> &#x514B;&#x9686;&#x5230;&#x672C;&#x5730;&#x76EE;&#x5F55;&#x540E;&#xFF0C;&#x5B83;&#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x5728; <code>src</code>&#x76EE;&#x5F55;&#x4E0B;&#x7684;4&#x4E2A;&#x6587;&#x4EF6;</p>
<ul>
<li><code>_tracing.py</code> - &#x8C03;&#x8BD5;&#x4F5C;&#x7528;&#xFF0C;&#x628A; hookspec &#x548C; plugin &#x8C03;&#x7528;&#x94FE;&#x8DEF;&#x7684;&#x5206;&#x6790;&#x6253;&#x5370;&#x51FA;&#x6765;&#xFF0C;&#x4E00;&#x822C;&#x4E0D;&#x5F00;&#x542F;</li>
<li><code>callers.py </code> - &#x4E3B;&#x8981;&#x662F; <code>_multicall</code> &#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x6765;&#x5B9E;&#x73B0;&#x5BF9;&#x4E8E; plugin &#x7684;&#x8C03;&#x7528;&#x903B;&#x8F91;</li>
<li><code>hooks.py</code> -  &#x6838;&#x5FC3;&#x662F; <code>HookspeckMarker</code> &#x548C; <code>HookimplMarker</code>, &#x7528;&#x6765;&#x88C5;&#x9970; hook &#x548C; plugin &#x7684;&#x65B9;&#x6CD5;</li>
<li><code>manager.py</code> - <code>PluginManager</code>  &#x662F;&#x6574;&#x4E2A; pluggy &#x7684;&#x6838;&#x5FC3;&#x7C7B;&#xFF0C;&#x8D1F;&#x8D23; hook &#x548C; plugin &#x7684;&#x7BA1;&#x7406;&#x548C;&#x6838;&#x5FC3;&#x8C03;&#x7528;&#x903B;&#x8F91;</li>
</ul>
<h1 id="&#x6838;&#x5FC3;&#x8BBE;&#x8BA1;&#x7406;&#x5FF5;"><a href="#&#x6838;&#x5FC3;&#x8BBE;&#x8BA1;&#x7406;&#x5FF5;" class="headerlink" title="&#x6838;&#x5FC3;&#x8BBE;&#x8BA1;&#x7406;&#x5FF5;"></a>&#x6838;&#x5FC3;&#x8BBE;&#x8BA1;&#x7406;&#x5FF5;</h1><p>&#x6574;&#x4E2A; <code>pluggy</code> &#x7684;&#x6838;&#x5FC3;&#x903B;&#x8F91;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x51E0;&#x884C;&#x4EE3;&#x7801;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pm = PluginManager(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line">pm.add_hookspecs(HookSpec)</span><br><span class="line">pm.register(HookImpl1())</span><br><span class="line">pm.register(HookImpl2())</span><br><span class="line"><span class="built_in">print</span>(pm.hook.calculate(a=<span class="number">1</span>, b=<span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<ul>
<li>&#x521B;&#x5EFA;&#x4E00;&#x4E2A; <code>PluginManager</code> &#x5BF9;&#x8C61;</li>
<li>&#x8C03;&#x7528; <code>add_hookspecs</code>&#xFF0C;&#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x65B0;&#x7684; hook object</li>
<li>&#x8C03;&#x7528; <code>register</code> &#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x65B0;&#x7684; plugin object</li>
<li>&#x901A;&#x8FC7; <code>pm.hook.calculate</code> &#x6765;&#x5B9E;&#x73B0;&#x5BF9; plugin &#x7684;&#x8C03;&#x7528;</li>
</ul>
<p>&#x8FD9;&#x91CC;&#x5C31;&#x6709;&#x51E0;&#x4E2A;&#x6838;&#x5FC3;&#x8BBE;&#x8BA1;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x901A;&#x8FC7;&#x89E3;&#x7B54;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x5BF9;&#x4E8E;&#x6574;&#x4E2A; <code>pluggy</code>&#x7684;&#x6838;&#x5FC3;&#x8BBE;&#x8BA1;&#x539F;&#x7406;&#x6709;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x4E86;&#x89E3;</p>
<ol>
<li><p><code>pluggy</code> &#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053; Spec &#x91CC;&#x9762;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x662F;&#x5B9A;&#x4E49;&#x7684; hook &#xFF1F;</p>
</li>
<li><p><code>pluggy</code> &#x662F;&#x600E;&#x4E48;&#x628A; Plugin &#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x548C; hook &#x505A;&#x5173;&#x8054;&#x7684;</p>
</li>
<li><p>&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;<code>pm.hook</code> &#x662F;&#x4E2A;&#x4EC0;&#x4E48;, &#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x6700;&#x7EC8;&#x7684; plugin &#x8C03;&#x7528;&#x7684;</p>
</li>
</ol>
<h2 id="pluggy-&#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053;-Spec-&#x91CC;&#x9762;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x662F;&#x5B9A;&#x4E49;&#x7684;-hook-&#xFF1F;"><a href="#pluggy-&#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053;-Spec-&#x91CC;&#x9762;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x662F;&#x5B9A;&#x4E49;&#x7684;-hook-&#xFF1F;" class="headerlink" title="pluggy &#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053; Spec &#x91CC;&#x9762;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x662F;&#x5B9A;&#x4E49;&#x7684; hook &#xFF1F;"></a><code>pluggy</code> &#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053; Spec &#x91CC;&#x9762;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x662F;&#x5B9A;&#x4E49;&#x7684; hook &#xFF1F;</h2><p>&#x8FD9;&#x4E2A;&#x5C31;&#x8981;&#x5168;&#x9760; <code>HookspecMarker</code> &#x548C; <code>HookimplMarker</code> &#x8FD9;&#x4E24;&#x4E2A;&#x88C5;&#x9970;&#x5668;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x4E24;&#x8005;&#x7684;&#x5B9E;&#x73B0;&#x903B;&#x8F91;&#x7C7B;&#x4F3C;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x53EA;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;<code>HookspecMarker</code>, &#x6211;&#x4EEC;&#x5148;&#x770B;&#x4E0A;&#x7BC7;&#x535A;&#x6587;&#x7684;demo&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x5B9A;&#x4E49;&#x4E86;2&#x4E2A;&#x88C5;&#x9970;&#x5668;&#xFF0C;&#x5E76;&#x7528;&#x4ED6;&#x4EEC;&#x6765;&#x6CE8;&#x91CA;&#x4E86; hook&#x7684;&#x65B9;&#x6CD5;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">spec = HookspecMarker(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line">impl = HookimplMarker(<span class="string">&quot;pluggy_demo_1&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HookSpec</span>:</span><br><span class="line"><span class="meta">    @spec(<span class="params">firstresult=<span class="literal">True</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x91CC;<code>HookspecMarker</code>&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;class&#x5B9E;&#x73B0;&#x7684;&#x88C5;&#x9970;&#x5668;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;&#x4EE3;&#x7801;&#x91CC;&#x5B83;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x903B;&#x8F91; , <code>__call__</code>&#x65B9;&#x6CD5;&#xFF0C;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params"></span></span><br><span class="line"><span class="params">    self, function=<span class="literal">None</span>, firstresult=<span class="literal">False</span>, historic=<span class="literal">False</span>, warn_on_impl=<span class="literal">None</span></span></span><br><span class="line"><span class="params"></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; if passed a function, directly sets attributes on the function</span></span><br><span class="line"><span class="string">    which will make it discoverable to add_hookspecs().  If passed no</span></span><br><span class="line"><span class="string">    function, returns a decorator which can be applied to a function</span></span><br><span class="line"><span class="string">    later using the attributes supplied.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    If firstresult is True the 1:N hook call (N being the number of registered</span></span><br><span class="line"><span class="string">    hook implementation functions) will stop at I&lt;=N when the I&apos;th function</span></span><br><span class="line"><span class="string">    returns a non-None result.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    If historic is True calls to a hook will be memorized and replayed</span></span><br><span class="line"><span class="string">    on later registered plugins.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setattr_hookspec_opts</span>(<span class="params">func</span>):</span><br><span class="line">        <span class="keyword">if</span> historic <span class="keyword">and</span> firstresult:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;cannot have a historic firstresult hook&quot;</span>)</span><br><span class="line">        <span class="built_in">setattr</span>(</span><br><span class="line">            func,</span><br><span class="line">            self.project_name + <span class="string">&quot;_spec&quot;</span>,</span><br><span class="line">            <span class="built_in">dict</span>(</span><br><span class="line">                firstresult=firstresult,</span><br><span class="line">                historic=historic,</span><br><span class="line">                warn_on_impl=warn_on_impl,</span><br><span class="line">            ),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> func</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> function <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> setattr_hookspec_opts(function)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> setattr_hookspec_opts</span><br></pre></td></tr></table></figure>

<p>&#x539F;&#x6765;&#x4E3B;&#x8981;&#x7684;&#x529F;&#x80FD;&#x5C31;&#x662F;&#x7ED9;&#x88AB;&#x88C5;&#x9970;&#x7684;&#x51FD;&#x6570;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x7279;&#x522B;&#x7684;&#x5C5E;&#x6027;, &#x5C5E;&#x6027;&#x7684;&#x540D;&#x5B57;&#x662F; <code>Project_name + _spec</code>, &#x5C5E;&#x6027;&#x7684;value &#x5C31;&#x662F;&#x88C5;&#x9970;&#x5668;&#x7684;&#x53C2;&#x6570;&#x53D6;&#x503C;&#xFF0C;</p>
<p>&#x8FD9;&#x6837;&#x5728;<code>PluginManger</code>&#x7684; <code>add_hookspecs</code>&#x51FD;&#x6570;&#x7684;&#x903B;&#x8F91;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x901A;&#x8FC7;&#x904D;&#x5386;&#x5BF9;&#x8C61;&#x7684;&#x6240;&#x4EE5;&#x5C5E;&#x6027;&#xFF0C;&#x627E;&#x5230;&#x542B;&#x6709;&#x8FD9;&#x8FD9;&#x4E2A;&#x7279;&#x6B8A;&#x7684;attribute &#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x597D;&#x4E86;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="built_in">dir</span>(module_or_class):</span><br><span class="line">    spec_opts = self.parse_hookspec_opts(module_or_class, name)</span><br><span class="line">    <span class="keyword">if</span> spec_opts <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br></pre></td></tr></table></figure>

<p>&#x5F53;&#x7136;&#x8FD9;&#x91CC;&#x5C31;&#x6709;&#x4E00;&#x4E2A;&#x524D;&#x63D0;&#xFF0C;&#x5168;&#x5C40;&#x7684;project_name &#x5FC5;&#x987B;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x4E14;&#x552F;&#x4E00;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;key&#x662F;&#x62FC;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E00;&#x81F4;&#x5C31;&#x627E;&#x4E0D;&#x5230; &#x5BF9;&#x5E94;&#x7684; hook &#x548C; impl &#x5B9A;&#x4E49;&#x4E86;</p>
<h2 id="pluggy-&#x662F;&#x600E;&#x4E48;&#x628A;-Plugin-&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x548C;-hook-&#x505A;&#x5173;&#x8054;&#x7684;"><a href="#pluggy-&#x662F;&#x600E;&#x4E48;&#x628A;-Plugin-&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x548C;-hook-&#x505A;&#x5173;&#x8054;&#x7684;" class="headerlink" title="pluggy &#x662F;&#x600E;&#x4E48;&#x628A; Plugin &#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x548C; hook &#x505A;&#x5173;&#x8054;&#x7684; ?"></a><code>pluggy</code> &#x662F;&#x600E;&#x4E48;&#x628A; Plugin &#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x548C; hook &#x505A;&#x5173;&#x8054;&#x7684; ?</h2><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x5148;&#x770B;&#x4E00;&#x4E0B; <code>pm.hook</code>, &#x8FD9;&#x4E2A; hook &#x662F;&#x4E2A;&#x4EC0;&#x4E48;&#x4E1C;&#x897F;&#xFF0C;&#x6211;&#x4EEC;&#x5728; <code>PluginManager</code> &#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x770B;&#x5230;&#x4E86;<code>hook</code>&#x7684;&#x5B9A;&#x4E49;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.hook = _HookRelay()</span><br></pre></td></tr></table></figure>

<p>&#x770B;&#x4E86;&#x4E00;&#x4E0B;<code>_HookReplay</code> &#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x5C31;&#x662F;&#x4E00;&#x4E2A;<code>&#x6869;</code> &#xFF0C;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x731C;&#x6D4B;&#x4E00;&#x4E0B;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x771F;&#x5B9E;&#x8C03;&#x7528;<code>pm.hook.calculate(a=1,b=2)</code> &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B9E;&#x9645;&#x7684;&#x8C03;&#x7528;&#x53EF;&#x80FD;&#x662F;&#x8FD9;&#x6837;&#x7684;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">getattr</span>(pm.hook, <span class="string">&quot;calculate&quot;</span>)(a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p>&#x4E3A;&#x4E86;&#x5370;&#x8BC1;&#x6211;&#x7684;&#x731C;&#x6D4B;&#xFF0C;&#x6211;&#x5728; <code>PluginManager</code> &#x7684; <code>register</code>&#x65B9;&#x6CD5;&#x8FD9;&#x627E;&#x5230;&#x4E86;&#x8FD9;&#x6BB5;&#x903B;&#x8F91;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="built_in">dir</span>(plugin):</span><br><span class="line">    hookimpl_opts = self.parse_hookimpl_opts(plugin, name)</span><br><span class="line">    <span class="keyword">if</span> hookimpl_opts <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        normalize_hookimpl_opts(hookimpl_opts)</span><br><span class="line">        method = <span class="built_in">getattr</span>(plugin, name)</span><br><span class="line">        hookimpl = HookImpl(plugin, plugin_name, method, hookimpl_opts)</span><br><span class="line">        hook = <span class="built_in">getattr</span>(self.hook, name, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> hook <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            hook = _HookCaller(name, self._hookexec)</span><br><span class="line">            <span class="built_in">setattr</span>(self.hook, name, hook)</span><br><span class="line">        <span class="keyword">elif</span> hook.has_spec():</span><br><span class="line">            self._verify_hook(hook, hookimpl)</span><br><span class="line">            hook._maybe_apply_history(hookimpl)</span><br><span class="line">        hook._add_hookimpl(hookimpl)</span><br><span class="line">        hookcallers.append(hook)</span><br></pre></td></tr></table></figure>

<ul>
<li>&#x904D;&#x5386; plugin &#x5BF9;&#x8C61;&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#xFF08;method&#xFF09;, &#x901A;&#x8FC7;<code> self.parse_hookimpl_opts</code>&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x627E;&#x5230;&#x542B;&#x6709;&#x7279;&#x6B8A; attribute &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x88AB; <code>impl</code>&#x3000;&#x88C5;&#x9970;&#x5668;&#x88C5;&#x9970;&#x8FC7;&#x7684;&#x65B9;&#x6CD5;</li>
<li>&#x7136;&#x540E;&#x518D;&#x628A;&#x4E00;&#x4E2A;<code>_HookCaller</code>&#x7684;&#x5BF9;&#x8C61;&#x6DFB;&#x52A0;&#x5230;<code>hook</code>&#x5BF9;&#x8C61;&#x4E2D;, <code>setattr(self.hook, name, hook)</code>, &#x6240;&#x4EE5;&#x770B;&#x8D77;&#x6765;&#x771F;&#x5B9E;&#x7684;&#x8C03;&#x7528;&#x662F; <code>_HookCaller(a=1, b=2)</code>,&#x3000;&#x5177;&#x4F53;&#x6211;&#x4EEC;&#x4E0B;&#x6B21;&#x518D;&#x5206;&#x6790;</li>
<li>&#x5982;&#x4F55;&#x5B9E;&#x73B0;<code>1:N</code>&#x7684;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x5462;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x4E00;&#x4E2A;hook &#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x591A;&#x4E2A; <code>hookimpl</code>, &#x770B;&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x5C31;&#x6E05;&#x695A;&#x4E86;&#xFF0C;&#x5B83;&#x662F;&#x5728;&#x627E;&#x5230;&#x4E86; <code>hook</code> &#x7ED1;&#x5B9A;&#x540E;&#x8C03;&#x7528;&#x7684; <code>hook._add_hookimpl(hookimpl)</code></li>
</ul>
<h2 id="&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;pm-hook-&#x662F;&#x4E2A;&#x4EC0;&#x4E48;-&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x6700;&#x7EC8;&#x7684;-plugin-&#x8C03;&#x7528;&#x7684;"><a href="#&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;pm-hook-&#x662F;&#x4E2A;&#x4EC0;&#x4E48;-&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x6700;&#x7EC8;&#x7684;-plugin-&#x8C03;&#x7528;&#x7684;" class="headerlink" title="&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;pm.hook &#x662F;&#x4E2A;&#x4EC0;&#x4E48;, &#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x6700;&#x7EC8;&#x7684; plugin &#x8C03;&#x7528;&#x7684;"></a>&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;<code>pm.hook</code> &#x662F;&#x4E2A;&#x4EC0;&#x4E48;, &#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x6700;&#x7EC8;&#x7684; plugin &#x8C03;&#x7528;&#x7684;</h2><p>&#x524D;&#x9762;&#x8BF4;&#x4E86;&#x5B9E;&#x9645;&#x4E0A; <code>pm.hook.calculate</code>&#x83B7;&#x53D6;&#x7684;&#x662F;&#x4E00;&#x4E2A; <code>_HookCaller</code>&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x771F;&#x5B9E;&#x7684;&#x662F;&#x8C03;&#x7528;&#x4E86;&#x5B83;&#x7684;<code>__call__</code>&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x7B80;&#x5355;&#x770B;&#x4E00;&#x4E0B;&#x5B83;&#x7684;&#x903B;&#x8F91;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">    <span class="keyword">if</span> args:</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;hook calling supports only keyword arguments&quot;</span>)</span><br><span class="line">    <span class="keyword">assert</span> <span class="keyword">not</span> self.is_historic()</span><br><span class="line">    <span class="keyword">if</span> self.spec <span class="keyword">and</span> self.spec.argnames:</span><br><span class="line">        notincall = (</span><br><span class="line">            <span class="built_in">set</span>(self.spec.argnames) - <span class="built_in">set</span>([<span class="string">&quot;__multicall__&quot;</span>]) - <span class="built_in">set</span>(kwargs.keys())</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> notincall:</span><br><span class="line">            warnings.warn(</span><br><span class="line">                <span class="string">&quot;Argument(s) {} which are declared in the hookspec &quot;</span></span><br><span class="line">                <span class="string">&quot;can not be found in this hook call&quot;</span>.<span class="built_in">format</span>(<span class="built_in">tuple</span>(notincall)),</span><br><span class="line">                stacklevel=<span class="number">2</span>,</span><br><span class="line">            )</span><br><span class="line">    <span class="keyword">return</span> self._hookexec(self, self.get_hookimpls(), kwargs)</span><br></pre></td></tr></table></figure>

<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x6700;&#x540E;&#x4E00;&#x884C;, <code>self._hookexec</code> &#xFF0C;&#x628A;&#x5177;&#x4F53;&#x7684;<code>kwargs</code>&#x4F20;&#x5165;&#xFF0C;&#x6765;&#x8C03;&#x7528;&#x5B9E;&#x9645;&#x7684; plugin &#x5B9E;&#x73B0;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x8FD9;&#x4E2A; <code>self._hookexec</code>&#x65B9;&#x6CD5;&#xFF0C;&#x662F;&#x5728;&#x6784;&#x9020;<code>_HookCaller</code>&#x7684;&#x65F6;&#x5019;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x5165;&#x7684;&#xFF0C;&#x5B83;&#x7684;&#x5B9A;&#x4E49;&#x770B;&#x8D77;&#x6765;&#x4E5F;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x5C01;&#x88C5;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_hookexec</span>(<span class="params">self, hook, methods, kwargs</span>):</span><br><span class="line">    <span class="comment"># called from all hookcaller instances.</span></span><br><span class="line">    <span class="comment"># enable_tracing will set its own wrapping function at self._inner_hookexec</span></span><br><span class="line">    <span class="keyword">return</span> self._inner_hookexec(hook, methods, kwargs)</span><br></pre></td></tr></table></figure>

<p>&#x771F;&#x6B63;&#x7684;&#x903B;&#x8F91;&#x662F; <code>PluginManger</code>&#x6784;&#x9020;&#x65F6;&#x5019;&#x5C01;&#x88C5;&#x7684; <code>_multicall</code>&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x5177;&#x4F53;&#x6211;&#x4EEC;&#x4E0B;&#x6B21;&#x518D;&#x5206;&#x6790;&#x5B83;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self._inner_hookexec = <span class="keyword">lambda</span> hook, methods, kwargs: hook.multicall(</span><br><span class="line">            methods,</span><br><span class="line">            kwargs,</span><br><span class="line">            firstresult=hook.spec.opts.get(<span class="string">&quot;firstresult&quot;</span>) <span class="keyword">if</span> hook.spec <span class="keyword">else</span> <span class="literal">False</span>,</span><br><span class="line">        )</span><br></pre></td></tr></table></figure>



<h1 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h1><p>&#x5230;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x628A;<code>pluggy</code>&#x4E3B;&#x8981;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x8DEF;&#x90FD;&#x4ECB;&#x7ECD;&#x5B8C;&#x4E86;&#xFF0C;&#x540E;&#x9762;&#x4F1A;&#x5BF9;&#x4E8E;&#x51E0;&#x4E2A;&#x6838;&#x5FC3;&#x7C7B;&#x7684;&#x5B9E;&#x73B0;&#x505A;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x6B22;&#x8FCE;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x548C;&#x6211;&#x7559;&#x8A00;</p>
]]></content>
      <categories>
        <category>pytest 源码解读</category>
      </categories>
      <tags>
        <tag>pytest</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytest 源码解读 [4] - pluggy &quot;_HookCall&quot; 调用链分析</title>
    <url>/2019/10/05/hook-caller-logic/</url>
    <content><![CDATA[<p>&#x6211;&#x4EEC;&#x77E5;&#x9053;<code>pm.hook.xxx(**kwargs)</code>&#x3000;&#xFF0C;&#x6700;&#x540E;&#x5B9E;&#x9645;&#x662F;&#x8C03;&#x7528;&#x4E86;&#x7ED1;&#x5B9A;&#x7684; <code>_HookCaller</code>&#x5BF9;&#x8C61;&#x7684;<code>__call__</code>&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x4ECA;&#x5929;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x903B;&#x8F91;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#xFF0C;&#x5E9F;&#x8BDD;&#x5C11;&#x8BF4;&#xFF0C;&#x5148;&#x4E0A;&#x4EE3;&#x7801;, &#x6211;&#x4EEC;&#x5148;&#x770B;&#x4E0B;<code>_HookCaller</code>&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, hook_execute, specmodule_or_class=<span class="literal">None</span>, spec_opts=<span class="literal">None</span></span>):</span><br><span class="line">    self.name = name</span><br><span class="line">    self._wrappers = []</span><br><span class="line">    self._nonwrappers = []</span><br><span class="line">    self._hookexec = hook_execute</span><br><span class="line">    self.argnames = <span class="literal">None</span></span><br><span class="line">    self.kwargnames = <span class="literal">None</span></span><br><span class="line">    self.multicall = _multicall</span><br><span class="line">    self.spec = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> specmodule_or_class <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">assert</span> spec_opts <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">        self.set_specification(specmodule_or_class, spec_opts)</span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x91CC;&#x6709;&#x4E24;&#x4E2A;<code>List</code>&#x662F;&#x7528;&#x6765;&#x5B58;&#x653E; hook &#x5BF9;&#x5E94;&#x7684; plugin &#x7684;&#xFF0C;&#x5206;&#x4E3A; wrapper &#x548C; nonwrapper &#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8C03;&#x7528;<code>_HookCaller</code>&#x7684;&#x65B9;&#x6CD5;<code>_add_hookimpl</code>&#x6765;&#x6CE8;&#x518C;plugin&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x6839;&#x636E;<code>HookimplMarker</code>&#x88C5;&#x9970;&#x5668;&#x7684;<code>hookwrapper</code>&#x5C5E;&#x6027;&#x6765;&#x533A;&#x5206;&#x4E0D;&#x540C;&#x7684; plugin list , &#x7B80;&#x5355;&#x770B;&#x51E0;&#x884C;<code>_add_hookimpl</code>&#x7684;&#x5B9E;&#x73B0;&#x5C31;&#x77E5;&#x9053;&#x4E86;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_add_hookimpl</span>(<span class="params">self, hookimpl</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Add an implementation to the callback chain.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> hookimpl.hookwrapper:</span><br><span class="line">        methods = self._wrappers</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        methods = self._nonwrappers</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hookimpl.trylast:</span><br><span class="line">        methods.insert(<span class="number">0</span>, hookimpl)</span><br><span class="line">    <span class="keyword">elif</span> hookimpl.tryfirst:</span><br><span class="line">        methods.append(hookimpl)</span><br></pre></td></tr></table></figure>

<p>&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x7EE7;&#x7EED;&#x56DE;&#x6765;&#x770B;<code>_HookCaller</code>&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#x770B;&#x8D77;&#x6765;&#x5F88;&#x7C7B;&#x4F3C;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;<code>self._hookexec</code>&#xFF0C;&#x4E00;&#x4E2A;&#x662F;<code>self.multicall</code>, <code>_multicall</code>&#x662F;<code>_HookCaller</code>&#x81EA;&#x5DF1;&#x7684; method , <code>_hookexec</code> &#x662F;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4F20;&#x5165;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E0B;<code>PluginManager</code>&#x5728;&#x7ED1;&#x5B9A;<code>_HookCaller</code>&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#x7684;&#x4EE3;&#x7801;,<code>hook = _HookCaller(name, self._hookexec)</code>,&#x4F20;&#x5165;&#x7684;&#x662F;&#x4E00;&#x4E2A;<code>_hookexec</code>, &#x518D;&#x7EE7;&#x7EED;&#x7F51;&#x4E0A;&#x722C;&#x4EE3;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x6240;&#x8C13;&#x7684; self._hookexec &#xFF0C;&#x5B9E;&#x9645;&#x5C31;&#x662F;<code>multicall</code>&#x51FD;&#x6570;&#x7684;&#x5C01;&#x88C5;&#xFF0C;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self._inner_hookexec = <span class="keyword">lambda</span> hook, methods, kwargs: hook.multicall(</span><br><span class="line">           methods,</span><br><span class="line">           kwargs,</span><br><span class="line">           firstresult=hook.spec.opts.get(<span class="string">&quot;firstresult&quot;</span>) <span class="keyword">if</span> hook.spec <span class="keyword">else</span> <span class="literal">False</span>,</span><br><span class="line">       )</span><br></pre></td></tr></table></figure>

<p>&#x770B;&#x5230;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x4E86;&#xFF0C;&#x539F;&#x6765;&#x8FD9;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#x6700;&#x540E;&#x5E95;&#x5C42;&#x90FD;&#x662F;&#x540C;&#x4E00;&#x4E2A;<code>_multicall</code>&#x51FD;&#x6570;&#x5BF9;&#x8C61; &#x3002; &#x524D;&#x9762;&#x94FA;&#x57AB;&#x4E86;&#x90A3;&#x4E48;&#x591A;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x6838;&#x5FC3;&#x8C03;&#x7528;&#x51FD;&#x6570;<code>__call__</code>&#x5230;&#x5E95;&#x518D;&#x5E72;&#x561B;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">    <span class="keyword">if</span> args:</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&quot;hook calling supports only keyword arguments&quot;</span>)</span><br><span class="line">    <span class="keyword">assert</span> <span class="keyword">not</span> self.is_historic()</span><br><span class="line">    <span class="keyword">if</span> self.spec <span class="keyword">and</span> self.spec.argnames:</span><br><span class="line">        notincall = (</span><br><span class="line">            <span class="built_in">set</span>(self.spec.argnames) - <span class="built_in">set</span>([<span class="string">&quot;__multicall__&quot;</span>]) - <span class="built_in">set</span>(kwargs.keys())</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> notincall:</span><br><span class="line">            warnings.warn(</span><br><span class="line">                <span class="string">&quot;Argument(s) {} which are declared in the hookspec &quot;</span></span><br><span class="line">                <span class="string">&quot;can not be found in this hook call&quot;</span>.<span class="built_in">format</span>(<span class="built_in">tuple</span>(notincall)),</span><br><span class="line">                stacklevel=<span class="number">2</span>,</span><br><span class="line">            )</span><br><span class="line">    <span class="keyword">return</span> self._hookexec(self, self.get_hookimpls(), kwargs)</span><br></pre></td></tr></table></figure>

<ul>
<li>&#x5148;&#x5224;&#x65AD;&#x4E0B;&#x8C03;&#x7528;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x4E0D;&#x652F;&#x6301;&#x975E;kwargs&#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;</li>
<li>&#x5224;&#x65AD;&#x4E00;&#x4E0B;&#x662F;&#x5426;&#x662F; historical call &#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x56DE;&#x5934;&#x8981;&#x7814;&#x7A76;&#x4E00;&#x4E0B;&#x4E3A;&#x5565;&#x4E0D;&#x5141;&#x8BB8;historical call </li>
<li>&#x5224;&#x65AD;&#x4E0B;&#x8C03;&#x7528;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x662F;&#x5426;&#x7B26;&#x5408; spec &#x5B9A;&#x4E49;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x7B26;&#x5408;&#x4F1A;&#x7ED9; warning &#xFF0C;<em><strong>&#x8FD9;&#x91CC;&#x6709;&#x70B9;&#x56F0;&#x60D1;, &#x65E2;&#x7136;&#x4E0D;&#x7B26;&#x5408;spec &#x89C4;&#x5B9A;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x62A5;&#x9519;&#x505C;&#x6B62;&#xFF0C;&#x53EA;&#x662F;&#x7ED9;&#x4E00;&#x4E2A; warning &#xFF0C;&#x6709;&#x4E86;&#x89E3;&#x7684;&#x540C;&#x5B66;&#x6B22;&#x8FCE;&#x7ED9;&#x6211;&#x7559;&#x8A00;</strong></em></li>
<li>&#x6700;&#x540E;&#x662F;&#x8C03;&#x7528;<code>self._hookexec</code>&#xFF0C;&#x628A;&#x6240;&#x6709;&#x7684;&#x6CE8;&#x518C;&#x7684;plugin &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x5165;&#xFF0C;&#x6839;&#x636E;&#x4E0A;&#x9762;&#x7684;&#x4ECB;&#x7ECD;&#xFF0C;&#x5C31;&#x662F;&#x8C03;&#x7528;&#x4E86;<code>_multicall</code>&#x7684;&#x51FD;&#x6570;&#xFF0C;<code>_multicall</code>&#x7684;&#x51FD;&#x6570;&#x633A;&#x957F;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5206;&#x522B;&#x770B;&#x4E00;&#x4E0B;</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_multicall</span>(<span class="params">hook_impls, caller_kwargs, firstresult=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Execute a call into multiple python functions/methods and return the</span></span><br><span class="line"><span class="string">    result(s).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ``caller_kwargs`` comes from _HookCaller.__call__().</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    __tracebackhide__ = <span class="literal">True</span></span><br><span class="line">    results = []</span><br><span class="line">    excinfo = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:  <span class="comment"># run impl and wrapper setup functions in a loop</span></span><br><span class="line">        teardowns = []</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> hook_impl <span class="keyword">in</span> <span class="built_in">reversed</span>(hook_impls):</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    args = [caller_kwargs[argname] <span class="keyword">for</span> argname <span class="keyword">in</span> hook_impl.argnames]</span><br><span class="line">                <span class="keyword">except</span> KeyError:</span><br><span class="line">                    <span class="keyword">for</span> argname <span class="keyword">in</span> hook_impl.argnames:</span><br><span class="line">                        <span class="keyword">if</span> argname <span class="keyword">not</span> <span class="keyword">in</span> caller_kwargs:</span><br><span class="line">                            <span class="keyword">raise</span> HookCallError(</span><br><span class="line">                                <span class="string">&quot;hook call must provide argument %r&quot;</span> % (argname,)</span><br><span class="line">                            )</span><br></pre></td></tr></table></figure>

<ul>
<li>&#x539F;&#x6765;&#x8FD9;&#x91CC;&#x8FD8;&#x662F;&#x4F1A;&#x518D;&#x68C0;&#x67E5;&#x8C03;&#x7528;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;spec&#x5B9A;&#x4E49;&#x7684;&#x53C2;&#x6570;&#x6CA1;&#x6709;&#x5728;kwargs&#x4E2D;&#xFF0C;&#x8FD9;&#x6B21;&#x662F;&#x62A5;&#x9519;&#x4E86;</li>
</ul>
<p>&#x7136;&#x540E;&#x5C31;&#x662F;&#x6839;&#x636E;&#x662F;&#x5426;&#x662F;hookwrapper&#x6765;&#x533A;&#x5206;&#x8C03;&#x7528;&#x903B;&#x8F91;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x770B;&#x4E0B;&#x4E5F;&#x5E94;&#x8BE5;&#x6B63;&#x786E;&#x7684;&#x8C03;&#x7528;&#x903B;&#x8F91;</p>
<ul>
<li>hookwrapper<ul>
<li>&#x5148;&#x8C03;&#x7528; <code>hookwrapper</code>&#x7684;plugin,&#x5148;&#x6267;&#x884C;<code>yield</code>&#x4E4B;&#x524D;&#x7684;&#x4EE3;&#x7801;</li>
<li>&#x7136;&#x540E;&#x6267;&#x884C;&#x5176;&#x4ED6; plugin</li>
<li>&#x6700;&#x540E;&#x628A;&#x5176;&#x4ED6;&#x7684;plugin&#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x56DE;&#x5230;<code>hookwrapper</code>&#x7684;plugin&#x7684; yield point ,&#x7EE7;&#x7EED;&#x6267;&#x884C;</li>
</ul>
</li>
<li>nonwrapper<ul>
<li>&#x76F4;&#x63A5;&#x8C03;&#x7528; plugin &#xFF0C;&#x5E76;&#x628A;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x5230; result list&#x4E2D;</li>
<li>&#x5982;&#x679C;&#x6709; firstresult&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</li>
</ul>
</li>
</ul>
<p>&#x6211;&#x4EEC;&#x770B;&#x770B;&#x4EE3;&#x7801;&#x7684;&#x5B9E;&#x73B0;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> hook_impl.hookwrapper:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        gen = hook_impl.function(*args)</span><br><span class="line">        <span class="built_in">next</span>(gen)  <span class="comment"># first yield</span></span><br><span class="line">        teardowns.append(gen)</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        _raise_wrapfail(gen, <span class="string">&quot;did not yield&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    res = hook_impl.function(*args)</span><br><span class="line">    <span class="keyword">if</span> res <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        results.append(res)</span><br><span class="line">        <span class="keyword">if</span> firstresult:  <span class="comment"># halt further impl calls</span></span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<ul>
<li>&#x540C;&#x4E0A;&#x9762;&#x7684;&#x903B;&#x8F91;&#xFF0C;<code>next(gen)</code>, &#x5148;&#x6267;&#x884C;<code>yield</code>&#x524D;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x628A;gen&#x5B58;&#x653E;&#x5728;teardown &#x91CC;&#xFF0C;&#x7528;&#x4F5C;&#x540E;&#x7EED;&#x7684;callback</li>
<li>nonwrapper,&#x3000;&#x5C31;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#xFF0C;&#x628A;&#x7ED3;&#x679C;&#x5B58;&#x5728;result&#x91CC;</li>
</ul>
<p>&#x6700;&#x540E;finllay&#x90A3;&#x4E00;&#x6BB5;&#x903B;&#x8F91;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">if</span> firstresult:  <span class="comment"># first result hooks return a single value</span></span><br><span class="line">        outcome = _Result(results[<span class="number">0</span>] <span class="keyword">if</span> results <span class="keyword">else</span> <span class="literal">None</span>, excinfo)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        outcome = _Result(results, excinfo)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># run all wrapper post-yield blocks</span></span><br><span class="line">    <span class="keyword">for</span> gen <span class="keyword">in</span> <span class="built_in">reversed</span>(teardowns):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            gen.send(outcome)</span><br><span class="line">            _raise_wrapfail(gen, <span class="string">&quot;has second yield&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> StopIteration:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> outcome.get_result()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>&#x6240;&#x6709;&#x7684;&#x7ED3;&#x679C;&#x90FD;&#x8981;&#x7528; <code>_Result</code>&#x6765;&#x5C01;&#x88C5;&#x8FD4;&#x56DE;</li>
<li>&#x5982;&#x679C;&#x662F; hookwrapper&#x7684;&#xFF0C;&#x8FD8;&#x8981;&#x904D;&#x5386;&#x4E4B;&#x524D;&#x5B58;&#x7684;<code>generator</code>, &#x628A;nonwrapper&#x7684;&#x7ED3;&#x679C;&#x56DE;&#x8C03;&#x56DE;&#x53BB; <code>gen.send(output)</code>,&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x5B9E;&#x73B0;&#x9519;&#x8BEF;&#xFF0C;&#x4F8B;&#x5982;&#x5728;plugin&#x91CC;&#x5199;&#x4E86;&#x4E24;&#x4E2A;yield, &#x76F4;&#x63A5;&#x5728;&#x5916;&#x90E8;&#x8C03;&#x7528;&#x903B;&#x8F91;&#x91CC;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x7EC8;&#x6B62;&#x903B;&#x8F91;<code>_raise_wrapfail(gen, &quot;has second yield&quot;)</code></li>
<li>&#x6700;&#x540E;&#x662F;&#x628A;outcome &#x8FD4;&#x56DE;&#x7ED9;&#x5230;&#x5916;&#x90E8;&#x8C03;&#x7528;&#x65B9;</li>
</ul>
]]></content>
      <categories>
        <category>pytest 源码解读</category>
      </categories>
      <tags>
        <tag>pytest</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytest 源码解读 [3] - [pluggy] plugin 注册逻辑分析</title>
    <url>/2019/10/03/register-pluggy/</url>
    <content><![CDATA[<p>&#x4ECA;&#x5929;&#x6211;&#x4EEC;&#x518D;&#x4ED4;&#x7EC6;&#x5206;&#x6790;&#x4E00;&#x4E0B; <code>plugin</code> &#x7684;&#x6CE8;&#x518C;&#x903B;&#x8F91;&#xFF0C;&#x8FD9;&#x91CC;&#x9762;&#x5305;&#x542B;&#x4E86;<code>pluggy</code> &#x6846;&#x67B6;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x6838;&#x5FC3;&#x8BBE;&#x8BA1;&#x5143;&#x7D20;&#x3002;&#x4EE3;&#x7801;&#x5728; <code>manager.py</code>&#x4E2D;&#x7684;<code>PluginManager</code>&#x7684;<code>register</code>&#x65B9;&#x6CD5;</p>
<p>&#x9996;&#x5148;&#x662F;&#x5148;&#x5224;&#x65AD;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;plugin&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6CE8;&#x518C;&#x8FC7;&#x4E86;&#xFF0C;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plugin_name = name <span class="keyword">or</span> self.get_canonical_name(plugin)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> plugin_name <span class="keyword">in</span> self._name2plugin <span class="keyword">or</span> plugin <span class="keyword">in</span> self._plugin2hookcallers:</span><br><span class="line">            <span class="keyword">if</span> self._name2plugin.get(plugin_name, -<span class="number">1</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span>  <span class="comment"># blocked plugin, return None to indicate no registration</span></span><br><span class="line">            <span class="keyword">raise</span> ValueError(</span><br><span class="line">                <span class="string">&quot;Plugin already registered: %s=%s\n%s&quot;</span></span><br><span class="line">                % (plugin_name, plugin, self._name2plugin)</span><br><span class="line">            )</span><br></pre></td></tr></table></figure>

<p>&#x7528;&#x4E8E;&#x505A; contains &#x5224;&#x65AD;&#x7684;&#x4E3B;&#x8981;&#x662F; <code>PluginManager</code>&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x4E24;&#x4E2A;dict&#xFF0C; <code>self._name2plugin</code>&#x548C;<code>self._plugin2hookcaller</code>&#xFF0C;&#x524D;&#x8005;&#x662F;&#x7528; plugin_name &#x505A;key&#xFF0C;&#x540E;&#x8005;&#x662F;&#x7528; plugin object &#x505A;key&#xFF0C;&#x4E0D;&#x8FC7;&#x90FD;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6CE8;&#x518C;&#x8FC7;&#x91CD;&#x590D;&#x7684;plugin</p>
<p>&#x5224;&#x5B9A;&#x5B8C;&#x6BD5;&#x540E;&#xFF0C;&#x786E;&#x8BA4;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;plugin&#x4E86;&#xFF0C;&#x90A3;&#x5C31;&#x5F00;&#x59CB;&#x8FDB;&#x5165;&#x6DFB;&#x52A0;&#x65B0;&#x7684;plugin&#x903B;&#x8F91;, &#x5148;&#x770B;&#x4E00;&#x4E0B;<code>self._plugin2hookcallers</code>&#x3000;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;, &#x4E00;&#x4E2A;plugin &#x5BF9;&#x8C61;&#x5BF9;&#x5E94;&#x591A;&#x4E2A; <code>_HookCaller</code>&#x5BF9;&#x8C61;</p>
<p><code>self._plugin2hookcallers[plhaougin] = hookcallers = []</code></p>
<p>&#x518D;&#x770B;&#x4E0B;<code>pluggy</code>&#x662F;&#x5982;&#x4F55;&#x5206;&#x6790; plugin &#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x5B8C;&#x6210; <code>_HookCaller</code>&#x7684;&#x6620;&#x5C04;&#x7684;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="built_in">dir</span>(plugin):</span><br><span class="line">    hookimpl_opts = self.parse_hookimpl_opts(plugin, name)</span><br><span class="line">    <span class="keyword">if</span> hookimpl_opts <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        normalize_hookimpl_opts(hookimpl_opts)</span><br><span class="line">        method = <span class="built_in">getattr</span>(plugin, name)</span><br><span class="line">        hookimpl = HookImpl(plugin, plugin_name, method, hookimpl_opts)</span><br><span class="line">        hook = <span class="built_in">getattr</span>(self.hook, name, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> hook <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            hook = _HookCaller(name, self._hookexec)</span><br><span class="line">            <span class="built_in">setattr</span>(self.hook, name, hook)</span><br><span class="line">        <span class="keyword">elif</span> hook.has_spec():</span><br><span class="line">            self._verify_hook(hook, hookimpl)</span><br><span class="line">            hook._maybe_apply_history(hookimpl)</span><br><span class="line">        hook._add_hookimpl(hookimpl)</span><br><span class="line">        hookcallers.append(hook)</span><br><span class="line"><span class="keyword">return</span> plugin_name</span><br></pre></td></tr></table></figure>

<p>&#x7C7B;&#x4F3C;<code>add_spechooks</code>&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x5148;&#x901A;&#x8FC7;<code>dir</code>&#x51FD;&#x6570;&#x904D;&#x5386; plugin &#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#xFF0C;&#x4E3B;&#x8981;&#x662F; method&#xFF0C;&#x901A;&#x8FC7;<code>self.parse_hookimpl_opts</code>&#x65B9;&#x6CD5;&#x6765;&#x627E;&#x5230;&#x88AB;&#x7279;&#x5B9A;&#x88C5;&#x9970;&#x5668;&#x4FEE;&#x9970;&#x8FC7;&#x7684;method&#xFF0C;&#x627E;&#x5230;&#x4EE5;&#x540E;&#x66F4;&#x65B0;&#x4E00;&#x4E0B;hookimpl &#x7684; options&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;<code>getattr</code> &#x83B7;&#x53D6;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x7528;<code>HookImpl</code>&#x8FDB;&#x884C;&#x5C01;&#x88C5;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;<code>HookImpl</code>&#x7684;&#x5B9E;&#x73B0;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HookImpl</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, plugin, plugin_name, function, hook_impl_opts</span>):</span><br><span class="line">        self.function = function</span><br><span class="line">        self.argnames, self.kwargnames = varnames(self.function)</span><br><span class="line">        self.plugin = plugin</span><br><span class="line">        self.opts = hook_impl_opts</span><br><span class="line">        self.plugin_name = plugin_name</span><br><span class="line">        self.__dict__.update(hook_impl_opts)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;HookImpl plugin_name=%r, plugin=%r&gt;&quot;</span> % (self.plugin_name, self.plugin)</span><br></pre></td></tr></table></figure>

<p>&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x903B;&#x8F91;&#xFF0C;&#x7EAF;&#x7CB9;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x5206;&#x6790;&#xFF0C;&#x540E;&#x9762;&#x5C31;&#x662F;&#x68C0;&#x67E5;&#x4E00;&#x4E0B; <code>pm.hook.xxxx</code> &#x7684;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x6709;&#x6CA1;&#x6709;&#x7ED1;&#x5B9A;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A;<code>_HookCaller</code>&#x5BF9;&#x8C61;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> hook <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    hook = _HookCaller(name, self._hookexec)</span><br><span class="line">                    <span class="built_in">setattr</span>(self.hook, name, hook)</span><br></pre></td></tr></table></figure>

<p><code>_HookCaller</code>&#x662F;&#x6574;&#x4E2A;<code>pluggy</code>&#x7684;&#x6838;&#x5FC3;&#x5C01;&#x88C5;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B;&#x5B83;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">_HookCaller</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, hook_execute, specmodule_or_class=<span class="literal">None</span>, spec_opts=<span class="literal">None</span></span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self._wrappers = []</span><br><span class="line">        self._nonwrappers = []</span><br><span class="line">        self._hookexec = hook_execute</span><br><span class="line">        self.argnames = <span class="literal">None</span></span><br><span class="line">        self.kwargnames = <span class="literal">None</span></span><br><span class="line">        self.multicall = _multicall</span><br><span class="line">        self.spec = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> specmodule_or_class <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">assert</span> spec_opts <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">            self.set_specification(specmodule_or_class, spec_opts)</span><br></pre></td></tr></table></figure>

<p><code>_HookCaller</code> &#x8FD9;&#x91CC;&#x7684; self._hookexec &#x8868;&#x793A;&#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5BF9;&#x8C61;&#xFF0C;&#x8D1F;&#x8D23;&#x5B9E;&#x9645;&#x7684;plugin &#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E0B;&#x6B21;&#x4F1A;&#x5206;&#x6790;&#xFF0C;&#x4E3B;&#x8981;&#x770B;&#x5230;&#x5B83;&#x8FD9;&#x91CC;&#x628A; plugin &#x5206;&#x6210;&#x4E86;&#x4E24;&#x7C7B;, <code>wrappers</code> &#x548C; <code>nonwrappers</code> , &#x8FD9;&#x4E2A;&#x533A;&#x5206;&#x662F;&#x4F9D;&#x636E;<code>HookimplMarker</code>&#x7684;&#x90A3;&#x4E2A;<code>hookwrapper</code>&#x5C5E;&#x6027;</p>
<p>&#x521A;&#x624D;&#x8BF4;&#x4E86;&#x4E5F;&#x5B58;&#x5728; <code>hook</code> &#x6CA1;&#x6709;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x518D;&#x68C0;&#x67E5;&#x4E00;&#x4E0B; plugin &#x548C; hook &#x662F;&#x5426; valid match&#xFF0C;&#x5E76;&#x4E14;&#x770B;&#x662F;&#x5426;&#x8981;&#x51FA;&#x53D1; historical &#x7684;&#x8C03;&#x7528;&#xFF0C;&#x57FA;&#x4E8E; <code>HookspeckMarker</code>&#x4E2D;&#x5B9A;&#x4E49;&#x7684;<code>historical</code>&#x5C5E;&#x6027;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">elif</span> hook.has_spec():</span><br><span class="line">                   self._verify_hook(hook, hookimpl)</span><br><span class="line">                   hook._maybe_apply_history(hookimpl)</span><br></pre></td></tr></table></figure>

<p>&#x6700;&#x540E;&#x6211;&#x4EEC;&#x628A;&#x8FD9;&#x4E2A; &#x521A;&#x624D;&#x5C01;&#x88C5;&#x597D;&#x7684;<code>HookImpl</code>&#x5BF9;&#x8C61;&#x6DFB;&#x52A0;&#x5230; <code>_HookCaller</code>&#x4E2D;&#x53BB;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B; <code>HookCaller</code>&#x7684;<code>_add_hookimpl</code>&#x7684;&#x5B9E;&#x73B0;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_add_hookimpl</span>(<span class="params">self, hookimpl</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Add an implementation to the callback chain.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> hookimpl.hookwrapper:</span><br><span class="line">        methods = self._wrappers</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        methods = self._nonwrappers</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hookimpl.trylast:</span><br><span class="line">        methods.insert(<span class="number">0</span>, hookimpl)</span><br><span class="line">    <span class="keyword">elif</span> hookimpl.tryfirst:</span><br><span class="line">        methods.append(hookimpl)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># find last non-tryfirst method</span></span><br><span class="line">        i = <span class="built_in">len</span>(methods) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> <span class="keyword">and</span> methods[i].tryfirst:</span><br><span class="line">            i -= <span class="number">1</span></span><br><span class="line">        methods.insert(i + <span class="number">1</span>, hookimpl)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;__multicall__&quot;</span> <span class="keyword">in</span> hookimpl.argnames:</span><br><span class="line">        warnings.warn(</span><br><span class="line">            <span class="string">&quot;Support for __multicall__ is now deprecated and will be&quot;</span></span><br><span class="line">            <span class="string">&quot;removed in an upcoming release.&quot;</span>,</span><br><span class="line">            DeprecationWarning,</span><br><span class="line">        )</span><br><span class="line">        self.multicall = _legacymultical</span><br></pre></td></tr></table></figure>

<p>&#x4E3B;&#x8981;&#x662F;&#x6839;&#x636E;<code>HookimplMarker</code> &#x505A;&#x4E00;&#x4E0B;&#x987A;&#x5E8F;&#x7684;&#x8C03;&#x6574;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x518D;&#x53D9;&#x8FF0;&#x4E86;</p>
]]></content>
      <categories>
        <category>pytest 源码解读</category>
      </categories>
      <tags>
        <tag>pytest</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytest 源码解读 [5] - pytest 是如何测试 pytest 的</title>
    <url>/2021/06/05/pytester/</url>
    <content><![CDATA[<p>&#x4EC0;&#x4E48;&#x53EB;&#x7528; pytest &#x6765;&#x6D4B;&#x8BD5; pytest &#x5462;&#xFF1F;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x6784;&#x5EFA;&#x4E00;&#x4E2A; mini &#x7684; pytest &#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x3002;&#x6211;&#x4EEC;&#x8981;&#x5BF9;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x505A;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x6700;&#x57FA;&#x672C;&#x7684;&#x5C31;&#x662F;&#x5199;&#x4E00;&#x4E9B;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x6765;&#x6267;&#x884C;&#x5B83;&#x4EEC;&#x770B;&#x662F;&#x5426;&#x7B26;&#x5408;&#x9884;&#x671F;&#x3002;&#x53E6;&#x5916; pytest &#x672C;&#x8EAB;&#x662F;&#x4E00;&#x4E2A;&#x63D2;&#x4EF6;&#x5316;&#x7684;&#x67B6;&#x6784;&#xFF0C;&#x5C24;&#x5176;&#x5728;&#x6211;&#x4EEC;&#x5199;&#x4E00;&#x4E9B;&#x7B2C;&#x4E09;&#x65B9;&#x63D2;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x9700;&#x8981;&#x6784;&#x5EFA;&#x4E00;&#x4E2A; pytest &#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#xFF0C;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x6765;&#x6D4B;&#x8BD5;&#x81EA;&#x5DF1;&#x7F16;&#x5199;&#x7684;&#x63D2;&#x4EF6;&#x903B;&#x8F91;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;<code>pytest</code>  &#x7684;&#x4F5C;&#x8005;&#x5728;&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x8003;&#x8651;&#x5230;&#x4E86;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x4F53;&#x7528;&#x4E86;&#x4E00;&#x4E2A;&#x81EA;&#x5E26;&#x7684;mini &#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#xFF0C;&#x53EB; <code>pytester</code> &#xFF0C;&#x6458;&#x6284;&#x4E0B; <code>pytester.py</code>  &#x7684;&#x6A21;&#x5757;&#x6CE8;&#x91CA;&#x4E0A;&#x7684;&#x8BF4;&#x660E;</p>
<blockquote>
<p>(disabled by default) support for testing pytest and pytest plugins.&#x201D;&#x201D;&#x201D;</p>
</blockquote>
<p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x770B;&#x770B; <code>pytester</code> &#x662F;&#x5982;&#x4F55;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x6784;&#x5EFA;&#x8FD9;&#x4E2A;&#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x4EE5; <code>pytest</code>  &#x81EA;&#x8EAB;&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801; <code>test_marker.py</code>  &#x4E3A;&#x4F8B;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x7528;&#x6765;&#x6D4B;&#x8BD5; mark (&#x6807;&#x7B7E;) &#x63D2;&#x4EF6;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x770B;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_marked_class_run_twice</span>(<span class="params">testdir</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Test fails file is run twice that contains marked class.</span></span><br><span class="line"><span class="string">    See issue#683.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    py_file = testdir.makepyfile(</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    import pytest</span></span><br><span class="line"><span class="string">    @pytest.mark.parametrize(&apos;abc&apos;, [1, 2, 3])</span></span><br><span class="line"><span class="string">    class Test1(object):</span></span><br><span class="line"><span class="string">        def test_1(self, abc):</span></span><br><span class="line"><span class="string">            assert abc in [1, 2, 3]</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    )</span><br><span class="line">    file_name = os.path.basename(py_file.strpath)</span><br><span class="line">    rec = testdir.inline_run(file_name, file_name)</span><br><span class="line">    rec.assertoutcome(passed=<span class="number">6</span>)</span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x91CC;&#x6709;&#x51E0;&#x4E2A;&#x5173;&#x952E;&#x8BCD;&#xFF0C;&#x6211;&#x4EEC;&#x4F9D;&#x6B21;&#x6765;&#x505A;&#x4E0B;&#x5206;&#x6790;&#x4ECB;&#x7ECD;&#xFF0C;&#x5E2E;&#x52A9;&#x5927;&#x5BB6;&#x7406;&#x89E3;&#x5176;&#x4E2D;&#x7684;&#x6267;&#x884C;&#x903B;&#x8F91;</p>
<ul>
<li><code>testdir</code>  &#x8FD9;&#x4E2A; fixture</li>
<li>&#x7528; &#x201C;&#x201D;&#x201D; &#x6CE8;&#x91CA;&#x7684;&#x4E00;&#x6BB5;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x4EE3;&#x7801;</li>
<li><code>rec = testdir.inline_run</code>  &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;</li>
</ul>
<h3 id="TestDir"><a href="#TestDir" class="headerlink" title="TestDir"></a>TestDir</h3><p><code>testdir</code>  &#x662F;&#x5728; <code>pytester</code> &#x63D2;&#x4EF6;&#x5B9E;&#x73B0;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x4E00;&#x4E2A; <code>fixture</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.fixture</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">testdir</span>(<span class="params">request: FixtureRequest, tmpdir_factory</span>) -&gt; <span class="string">&quot;Testdir&quot;</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    A :class: `TestDir` instance, that can be used to run and test pytest itself.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    It is particularly useful for testing plugins. It is similar to the `tmpdir` fixture</span></span><br><span class="line"><span class="string">    but provides methods which aid in testing pytest itself.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> Testdir(request, tmpdir_factory)</span><br></pre></td></tr></table></figure>

<p>&#x5B83;&#x4F9D;&#x8D56;&#x7684;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x53EB; <code>tmpdir_factory</code>  &#x7684; <code>fixture</code> ,  &#x8FD9;&#x4E2A;&#x662F;&#x5728; <code>tmpdir</code>  &#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x5B9E;&#x73B0;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.fixture(<span class="params">scope=<span class="string">&quot;session&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tmpdir_factory</span>(<span class="params">request: FixtureRequest</span>) -&gt; TempdirFactory:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Return a :class:`_pytest.tmpdir.TempdirFactory` instance for the test session.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># Set dynamically by pytest_configure() above.</span></span><br><span class="line">    <span class="keyword">return</span> request.config._tmpdirhandler  <span class="comment"># type: ignore</span></span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x6700;&#x540E;&#x56DE;&#x6765;&#x770B;&#x4E0B; <code>TestDir</code> &#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x5B83;&#x662F;&#x5728; <code>pytester.py</code> &#x4E2D;&#x5B9E;&#x73B0;&#x7684; &#xFF0C;&#x53C2;&#x8003; <a href="https://docs.pytest.org/en/6.2.x/_modules/_pytest/pytester.html">pytester.py &#x6E90;&#x7801;</a> &#x3002;&#x8FD9;&#x91CC;&#x622A;&#x53D6;&#x4E00;&#x6BB5;&#x8FC7;&#x53BB;&#x7248;&#x672C;&#x7684;&#x6A21;&#x5757;&#x6CE8;&#x91CA;</p>
<blockquote>
<p>This is based on the <code>tmpdir</code> fixture but provides a number of methods which aid with testing pytest itself.  Unless :py:meth:<code>chdir</code> is used all methods will use :py:attr:<code>tmpdir</code> as their current working directory.</p>
</blockquote>
<p>&#x6211;&#x4EEC;&#x5927;&#x6982;&#x53EF;&#x4EE5;&#x731C;&#x5230;&#x5B83;&#x7684;&#x5DE5;&#x4F5C;&#x903B;&#x8F91;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF0C;&#x5728;&#x91CC;&#x9762;&#x5B58;&#x653E;&#x4E00;&#x4E9B;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x518D;&#x7528; pytest &#x6765;&#x6267;&#x884C;&#x5B83;&#x4EEC;&#xFF0C;&#x6765;&#x9A8C;&#x8BC1; pytest &#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x6216;&#x8005;&#x63D2;&#x4EF6;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;</p>
<h3 id="&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;"><a href="#&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;" class="headerlink" title="&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;"></a>&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;</h3><p>&#x6211;&#x4EEC;&#x7B80;&#x5355;&#x770B;&#x4E0B;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x4E2D; <code>testdir.makepyfile</code> &#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;,  <code>makepyfile</code>  &#x662F; <code>TestDir</code>  &#x7C7B;&#x578B;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x65B9;&#x6CD5;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">makepyfile</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Shortcut for .makefile() with a .py extension.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._makefile(<span class="string">&quot;.py&quot;</span>, args, kwargs)</span><br></pre></td></tr></table></figure>

<p>&#x8FDB;&#x4E00;&#x6B65;&#x8DDF;&#x8FDB;&#x5230; <code>self._makefile</code> &#x51FD;&#x6570;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_makefile</span>(<span class="params">self, ext, lines, files, encoding=<span class="string">&quot;utf-8&quot;</span></span>):</span><br><span class="line">        items = <span class="built_in">list</span>(files.items())</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">to_text</span>(<span class="params">s</span>):</span><br><span class="line">            <span class="keyword">return</span> s.decode(encoding) <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>) <span class="keyword">else</span> <span class="built_in">str</span>(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> lines:</span><br><span class="line">            source = <span class="string">&quot;\n&quot;</span>.join(to_text(x) <span class="keyword">for</span> x <span class="keyword">in</span> lines)</span><br><span class="line">            basename = self._name</span><br><span class="line">            items.insert(<span class="number">0</span>, (basename, source))</span><br><span class="line"></span><br><span class="line">        ret = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> basename, value <span class="keyword">in</span> items:</span><br><span class="line">            p = self.tmpdir.join(basename).new(ext=ext)</span><br><span class="line">            p.dirpath().ensure_dir()</span><br><span class="line">            source = Source(value)</span><br><span class="line">            source = <span class="string">&quot;\n&quot;</span>.join(to_text(line) <span class="keyword">for</span> line <span class="keyword">in</span> source.lines)</span><br><span class="line">            p.write(source.strip().encode(encoding), <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> ret <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                ret = p</span><br><span class="line">        <span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x770B;&#x5230;&#x7B2C;14&#x884C;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x4E4B;&#x524D;&#x521B;&#x5EFA;&#x7684;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#x91CC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; python &#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5199;&#x5165;&#x76F8;&#x5173;&#x7684;&#x5185;&#x5BB9;&#x3002;</p>
<h3 id="inline-run-&#x7684;&#x6267;&#x884C;&#x65B9;&#x5F0F;"><a href="#inline-run-&#x7684;&#x6267;&#x884C;&#x65B9;&#x5F0F;" class="headerlink" title="inline_run &#x7684;&#x6267;&#x884C;&#x65B9;&#x5F0F;"></a>inline_run &#x7684;&#x6267;&#x884C;&#x65B9;&#x5F0F;</h3><p>&#x6700;&#x540E;&#x5728;&#x6765;&#x770B;&#x4E0B; <code>inline_run</code>&#x662F;&#x5982;&#x4F55;&#x6765;&#x8FD0;&#x884C;&#x524D;&#x9762;&#x5B58;&#x653E;&#x5728;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#x91CC;&#x7684;&#x4E00;&#x4E9B;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x3002;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x77E5;&#x9053; pytest &#x7684;&#x8FD0;&#x884C;&#x65B9;&#x5F0F;&#x662F;&#x5728;&#x5F53;&#x524D;&#x8981;&#x6267;&#x884C;&#x7684;&#x6D4B;&#x8BD5;&#x76EE;&#x5F55;&#x4E0B;&#x8FD0;&#x884C; <code>pytest </code> &#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x600E;&#x4E48;&#x505A;&#x76EE;&#x5F55;&#x5207;&#x6362;&#x5462;&#xFF1F;</p>
<p>&#x6211;&#x4EEC;&#x770B;&#x5230; <code>TestDir</code> &#x7C7B;&#x7684;&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#x91CC;&#x5C31;&#x6709;&#x4E00;&#x884C;&#x8FD9;&#x4E2A; <code>self.chdir()</code> , &#x770B;&#x4E86;&#x4E0B;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x539F;&#x6765;&#x5728;&#x521D;&#x59CB;&#x5316; <code>TestDir</code>  &#x5B9E;&#x4F8B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x4E86;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x7684;&#x5207;&#x6362;&#x4E86;&#x3002;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">chdir</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Cd into the temporary directory.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        This is done automatically upon instantiation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.tmpdir.chdir(</span><br></pre></td></tr></table></figure>

<p>&#x6211;&#x4EEC;&#x6700;&#x540E;&#x56DE;&#x6765;&#x770B;&#x4E0B; <code>inline_run</code>  &#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5B83;&#x524D;&#x9762;&#x4E00;&#x5927;&#x90E8;&#x5206;&#x903B;&#x8F91;&#x662F;&#x7528;&#x6765;&#x5904;&#x7406; plugin &#x7684;&#x52A0;&#x8F7D;&#x548C;&#x73AF;&#x5883;&#x7684; snapshot &#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x5148;&#x4E0D;&#x5570;&#x55E6;&#x4ECB;&#x7ECD;&#x4E86;&#xFF0C;&#x6700;&#x5173;&#x952E;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x8FD9;&#x884C;, &#x7528;&#x6765;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x5230;&#x8FD9;&#x91CC;&#x5C31;&#x5B8C;&#x6210;&#x6574;&#x4F53;&#x903B;&#x8F91;&#x4E86;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ret = pytest.main(<span class="built_in">list</span>(args), plugins=plugins)</span><br></pre></td></tr></table></figure>

<h4 id="&#x8FD9;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x95EE;&#x9898;"><a href="#&#x8FD9;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x95EE;&#x9898;" class="headerlink" title="&#x8FD9;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x95EE;&#x9898;"></a>&#x8FD9;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x95EE;&#x9898;</h4><p>&#x6211;&#x4EEC;&#x770B;&#x4E0B; <code>main</code>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#xFF0C;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args=<span class="literal">None</span>, plugins=<span class="literal">None</span></span>) -&gt; <span class="type">Union</span>[<span class="built_in">int</span>, ExitCode]:</span><br></pre></td></tr></table></figure>

<p><code>main</code> &#x5C31;&#x53EA;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x9000;&#x51FA;&#x7801;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x600E;&#x4E48;&#x62FF;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x6765;&#x505A;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x8BE6;&#x7EC6;&#x7684;&#x65AD;&#x8A00;&#x5206;&#x6790;&#x5462;&#xFF1F;&#x8FD9;&#x91CC;&#x6211;&#x6211;&#x4EEC;&#x518D;&#x4ED4;&#x7EC6;&#x6316;&#x6398;&#x4E0B; <code>inline_run</code> &#x4E2D;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rec = []</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Collect</span>:</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">pytest_configure</span>(<span class="params">x, config</span>):</span><br><span class="line">		rec.append(self.make_hook_recorder(config.pluginmanager))</span><br><span class="line"></span><br><span class="line">plugins.append(Collect())</span><br></pre></td></tr></table></figure>

<p>&#x6B64;&#x5904;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684; plugin &#x53EB; Collect , &#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5728; <code>pytest_configure</code> &#x9636;&#x6BB5;&#x6CE8;&#x5165;&#x4E86;&#x4E00;&#x6BB5; recorder &#x903B;&#x8F91;&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x6765;&#x770B;&#x4E0B; <code>self.make_hook_recorder</code> &#x7684;&#x5B9E;&#x73B0;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">make_hook_recorder</span>(<span class="params">self, pluginmanager</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new :py:class:`HookRecorder` for a PluginManager.&quot;&quot;&quot;</span></span><br><span class="line">        pluginmanager.reprec = reprec = HookRecorder(pluginmanager)</span><br><span class="line">        self.request.addfinalizer(reprec.finish_recording)</span><br><span class="line">        <span class="keyword">return</span> repre</span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x91CC;&#x63D0;&#x5230;&#x4E86;&#xFF0C;&#x5B83;&#x7ED9; <code>PluginManager</code> &#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A; <code>HookRecorder</code> &#x5BF9;&#x8C61;&#xFF0C;&#x6211;&#x4EEC;&#x6700;&#x540E;&#x770B;&#x4E0B; <code>HookRecorder</code> &#x5BF9;&#x8C61;&#x662F;&#x505A;&#x4EC0;&#x4E48;&#x7684;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HookRecorder</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Record all hooks called in a plugin manager.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    This wraps all the hook calls in the plugin manager, recording each call</span></span><br><span class="line"><span class="string">    before propagating the normal calls.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, pluginmanager</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self._pluginmanager = pluginmanager</span><br><span class="line">        self.calls = []  <span class="comment"># type: <span class="type">List</span>[ParsedCall]</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">before</span>(<span class="params">hook_name: <span class="built_in">str</span>, hook_impls, kwargs</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">            self.calls.append(ParsedCall(hook_name, kwargs))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">after</span>(<span class="params">outcome, hook_name: <span class="built_in">str</span>, hook_impls, kwargs</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        self._undo_wrapping = pluginmanager.add_hookcall_monitoring(before, after</span><br></pre></td></tr></table></figure>

<p>&#x770B;&#x5230;&#x6700;&#x540E;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF0C;&#x5B83;&#x7ED9; <code>PluginManager</code> &#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E2A; monitoring &#xFF0C;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x6240;&#x6709;&#x7684; hookcall &#x7684;&#x6267;&#x884C;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x901A;&#x8FC7;&#x628A;&#x6D4B;&#x8BD5;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x7684;&#x6240;&#x6709;&#x4E0A;&#x4E0B;&#x6587; snapshot &#x4E0B;&#x6765;&#xFF0C;&#x7ED9;&#x5230;&#x6700;&#x7EC8;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x6765;&#x505A;&#x6821;&#x9A8C;&#xFF0C;&#x6240;&#x4EE5; <code>inline_run</code> &#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x7801;&#xFF0C;&#x800C;&#x662F;&#x8FD4;&#x56DE;&#x4E86; <code>HookRecorder</code> &#x5BF9;&#x8C61; &#xFF0C;&#x6700;&#x540E;&#x770B;&#x4E00;&#x4E0B; <code>inline_run</code>  &#x7684;&#x8FD4;&#x56DE;&#x903B;&#x8F91;&#xFF0C;&#x662F;&#x8FD4;&#x56DE;&#x4E86;&#x4E00;&#x4E2A; <code>List[HookRecorder]</code>  &#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rec = []</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Collect</span>:</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">pytest_configure</span>(<span class="params">x, config</span>):</span><br><span class="line">		rec.append(self.make_hook_recorder(config.pluginmanager))</span><br><span class="line"></span><br><span class="line">plugins.append(Collect())</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(rec) == <span class="number">1</span>:</span><br><span class="line">    reprec = rec.pop()</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> reprec</span><br></pre></td></tr></table></figure>

<p>&#x597D;&#x4E86;&#xFF0C;&#x4ECA;&#x5929;&#x7684;&#x4ECB;&#x7ECD;&#x5C31;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x5E0C;&#x671B;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x5927;&#x5BB6;&#x66F4;&#x597D;&#x7684;&#x7F16;&#x5199;&#x548C;&#x6D4B;&#x8BD5;&#x81EA;&#x5DF1;&#x7684; pytest &#x63D2;&#x4EF6;</p>
]]></content>
      <categories>
        <category>pytest 源码解读</category>
      </categories>
      <tags>
        <tag>pytest</tag>
      </tags>
  </entry>
  <entry>
    <title>Blog 重生记</title>
    <url>/2021/05/29/blog-renew-log/</url>
    <content><![CDATA[<p>&#x200B;	19&#x5E74;&#x7B97;&#x662F;&#x535A;&#x5BA2;&#x6700;&#x9AD8;&#x4EA7;&#x7684;&#x4E00;&#x5E74;&#x4E86;&#xFF0C;&#x6709;&#x4E9B;&#x4E1C;&#x897F;&#x5176;&#x5B9E;&#x4E4B;&#x524D;&#x4E00;&#x76F4;&#x60F3;&#x5199;&#x4F46;&#x662F;&#x56E0;&#x4E3A;&#x5404;&#x79CD;&#x539F;&#x56E0;&#x6CA1;&#x6709;&#x53BB;&#x843D;&#x5730; &#x3002;19&#x5E74;&#x56E0;&#x4E3A;&#x51FA;&#x5DEE;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x6BCF;&#x6B21;&#x56DE;&#x5230;&#x9152;&#x5E97;&#x6CA1;&#x5565;&#x4E8B;&#x60C5;&#x5E72;&#xFF0C;&#x5C31;&#x4F1A;&#x62FF;&#x51FA;&#x7535;&#x8111;&#x5199;&#x4E00;&#x70B9;&#xFF0C;&#x65E5;&#x79EF;&#x6708;&#x7D2F;&#x4E5F;&#x6709;&#x51E0;&#x5341;&#x7BC7;&#x5185;&#x5BB9;&#x4E86;&#x3002;&#x6709;&#x4E9B;&#x5DE5;&#x4F5C;&#x7B97;&#x662F;&#x5B8C;&#x6210;&#x4E86;&#x7ED3;&#x5C3E;&#xFF0C;&#x6709;&#x4E9B;&#x53EA;&#x662F;&#x5F00;&#x4E86;&#x4E2A;&#x5934;&#x3002;&#x6CA1;&#x60F3;&#x5230;20&#x5E74;&#x4F34;&#x968F;&#x7740;&#x75AB;&#x60C5;&#x4E00;&#x8D77;&#x7684;&#xFF0C;&#x6211;&#x7684;&#x61D2;&#x764C;&#x53C8;&#x4E0A;&#x8EAB;&#x4E86; (&#x6574;&#x4E2A;&#x4E00;&#x5E74;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x4EA7;&#x51FA;)&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x6CA1;&#x8138;&#x628A;&#x8D23;&#x4EFB;&#x602A;&#x5728;&#x521A;&#x51FA;&#x751F;&#x7684;&#x5973;&#x513F;&#x201C;&#x599E;&#x599E;&#x201D; &#x8EAB;&#x4E0A;&#xFF0C;&#x867D;&#x7136;&#x7684;&#x786E;&#x5979;&#x51FA;&#x751F;&#x540E;&#x4E8B;&#x60C5;&#x591A;&#x4E86;&#x5F88;&#x591A;&#x3002;&#x4F46;&#x662F;&#x4E0D;&#x53EF;&#x5426;&#x8BA4;&#xFF0C;&#x6296;&#x97F3;&#xFF0C;&#x548C;&#x5E73;&#x7CBE;&#x82F1;&#x8FD8;&#x662F;&#x6D88;&#x78E8;&#x4E86;&#x6211;&#x597D;&#x591A;&#x672C;&#x8BE5;&#x597D;&#x597D;&#x5229;&#x7528;&#x7684;&#x65F6;&#x95F4;&#x3002;</p>
<p>&#x200B;	&#x5176;&#x5B9E;&#x8FD9;&#x4E9B;&#x5E74;&#x6765;&#x8FD8;&#x662F;&#x6DF1;&#x611F;&#x5199;&#x4F5C;&#x7684;&#x91CD;&#x8981;&#x6027;&#xFF0C;&#x76F8;&#x6BD4;&#x4E8E;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#xFF0C;&#x8981;&#x628A;&#x4E00;&#x4E2A;&#x590D;&#x6742;&#x7684;&#x89C2;&#x70B9;&#x548C;&#x60F3;&#x6CD5;&#x901A;&#x8FC7;&#x6587;&#x5B57;&#x6E05;&#x6670;&#x7ED3;&#x6784;&#x5316;&#x7684;&#x8868;&#x8FBE;&#x5176;&#x5B9E;&#x662F;&#x5F88;&#x96BE;&#x7684;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x3002;&#x6211;&#x81EA;&#x5DF1;&#x7ECF;&#x5E38;&#x6279;&#x8BC4;&#x56E2;&#x961F;&#x7684;&#x540C;&#x5B66;&#x6587;&#x6863;&#x5199;&#x5F97;&#x5DEE;&#xFF0C;&#x6CA1;&#x6709;&#x903B;&#x8F91;&#xFF0C;&#x4E1C;&#x4E00;&#x53E5;&#x897F;&#x4E00;&#x53E5;&#x7684;&#x3002;&#x4F46;&#x6709;&#x65F6;&#x5019;&#x81EA;&#x5DF1;&#x8981;&#x5199;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x5BB9;&#x6613;&#x50CF;&#x65E0;&#x5934;&#x82CD;&#x8747;&#x4E00;&#x6837;&#x65E0;&#x4ECE;&#x4E0B;&#x624B;&#x3002;</p>
<p>&#x200B;	&#x8FD9;&#x4E24;&#x5E74;&#x56E0;&#x4E3A;&#x7BA1;&#x7406;&#x548C;&#x534F;&#x8C03;&#x4E8B;&#x52A1;&#x6027;&#x7684;&#x4E8B;&#x60C5;&#x504F;&#x591A;&#xFF0C;&#x5F88;&#x4E45;&#x6CA1;&#x6709;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x7CFB;&#x7EDF;&#x6027;&#x7684;&#x53BB;&#x5B66;&#x4E60;&#x4E00;&#x4E9B;&#x6280;&#x672F;&#x4E86;&#x3002;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x662F;&#x9760;&#x7740;&#x6240;&#x8C13;&#x7684;&#x201C;&#x7ECF;&#x9A8C; &#x201D;&#x5728;&#x5B89;&#x6170;&#x81EA;&#x5DF1;&#x524D;&#x884C;&#x3002;&#x65F6;&#x95F4;&#x8D8A;&#x4E45;&#x8D8A;&#x662F;&#x5FC3;&#x91CC;&#x53D1;&#x6BDB;&#xFF0C;&#x57FA;&#x7840;&#x67B6;&#x6784;&#x7684;&#x5DE5;&#x4F5C;&#x9700;&#x8981;&#x5F15;&#x9886;&#x4E1A;&#x52A1;&#x7684;&#x6280;&#x672F;&#x53D1;&#x5C55;&#xFF0C;&#x4E0D;&#x5B66;&#x4E60;&#x81EA;&#x7136;&#x662F;&#x8981;&#x88AB;&#x6DD8;&#x6C70;&#x3002;</p>
<p>&#x200B;	&#x5206;&#x4EAB;&#x601D;&#x8003;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x6109;&#x5FEB;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E4B;&#x524D;&#x7684; pytest &#x5206;&#x6790;&#x7CFB;&#x5217;&#x6536;&#x5230;&#x4E86;&#x5F88;&#x591A;&#x7528;&#x6237;&#x7684;&#x8BC4;&#x8BBA;&#x53CD;&#x9988;&#xFF0C;&#x5BF9;&#x6211;&#x81EA;&#x5DF1;&#x662F;&#x5F88;&#x5927;&#x7684;&#x9F13;&#x52B1;&#xFF0C;&#x53EF;&#x60DC;&#x8FD8;&#x662F;&#x8BA9;&#x7F51;&#x53CB;&#x5931;&#x671B;&#x6CA1;&#x6709;&#x575A;&#x6301;&#x628A;  Pytest &#x5206;&#x6790;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x7ED9;&#x505A;&#x5B8C;&#x3002;</p>
<p>&#x200B;	&#x8FD9;&#x6B21;&#x6211;&#x53C8;&#x82B1;&#x4E86;1&#x5929;&#x7684;&#x65F6;&#x95F4;&#x91CD;&#x65B0; reset &#x4E86;&#x6211;&#x7684;&#x535A;&#x5BA2; (&#x6362;&#x4E86;&#x4E3B;&#x9898;&#xFF0C;&#x5347;&#x7EA7;&#x4E86; Hexo &#xFF0C;&#x4E5F;&#x8C03;&#x6574;&#x4E86;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;) &#xFF0C;	&#x5E0C;&#x671B;&#x8FD9;&#x6B21;&#x7684;&#x535A;&#x5BA2;&#x91CD;&#x542F;&#xFF0C;&#x4E0D;&#x7ED9;&#x81EA;&#x5DF1;&#x8BBE;&#x5B9A;&#x4EC0;&#x4E48;&#x5177;&#x4F53;&#x76EE;&#x6807;&#xFF0C;&#x53EA;&#x5E0C;&#x671B;&#x53EF;&#x4EE5;&#x52AA;&#x529B;&#x575A;&#x6301;&#x53BB;&#x8BB0;&#x5F55;&#x5E73;&#x65E5;&#x91CC;&#x601D;&#x8003;&#x7684;&#x70B9;&#x70B9;&#x6EF4;&#x6EF4;&#xFF0C;&#x4E5F;&#x97AD;&#x7B56;&#x81EA;&#x5DF1;&#x7CFB;&#x7EDF;&#x6027;&#x7684;&#x5B66;&#x4E60;&#x548C;&#x5206;&#x4EAB;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#x6280;&#x672F;&#x7684;&#x8BA4;&#x77E5;&#x548C;&#x89C1;&#x89E3;&#x3002;&#x548C;&#x5927;&#x5BB6;&#x6709;&#x66F4;&#x591A;&#x7684;&#x4EA4;&#x6D41;&#x3002;</p>
<p>&#x200B;	</p>
]]></content>
  </entry>
  <entry>
    <title>理解 LSM 树: 用于多写场景下的数据库实现</title>
    <url>/2021/06/25/lsm-tree/</url>
    <content><![CDATA[<blockquote>
<p>&#x672C;&#x6587;&#x7FFB;&#x8BD1;&#x81EA; &#x201C;<a href="https://yetanotherdevblog.com/dense-vs-sparse-indexes/">What are sparse and dense indexes? (yetanotherdevblog.com)</a>&#x201C;</p>
</blockquote>
<p>&#x65E5;&#x5FD7;&#x7ED3;&#x6784;&#x7684;&#x805A;&#x5408;&#x6811; (Log-Structured Merge-Tree) &#x662F;&#x4E00;&#x79CD;&#x5178;&#x578B;&#x7528;&#x6765;&#x5904;&#x7406;&#x5B58;&#x5728;&#x5F88;&#x91CD;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x4EFB;&#x610F;&#x5199;&#x7684;&#x64CD;&#x4F5C;&#x88AB;&#x4F18;&#x5316;&#x6210;&#x4E86;&#x987A;&#x5E8F;&#x5199;&#x3002;LSM tree &#x662F;&#x5F88;&#x591A;&#x6570;&#x636E;&#x5E93;&#x80CC;&#x540E;&#x7684;&#x6838;&#x5FC3;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5305;&#x62EC; BigTable&#xFF0C; Cassandra&#xFF0C;[Scylla](<a href="https://www.scylladb.com/">ScyllaDB | The Real-Time Big Data Database</a>) &#x548C; RockDB &#x3002;</p>
<h1 id="SSTable"><a href="#SSTable" class="headerlink" title="SSTable"></a>SSTable</h1><p>LSM Tree &#x4F7F;&#x7528;&#x4E00;&#x79CD;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x57FA;&#x4E8E;&#x5B57;&#x7B26;&#x4E32;&#x6392;&#x5E8F;&#x7684;&#x8868; (SSTable) &#x6765;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x8FDB;&#x884C;&#x6301;&#x4E45;&#x5316;&#x3002;&#x4ECE;&#x5B57;&#x9762;&#x610F;&#x601D;&#x6765;&#x770B;&#xFF0C;SSTable &#x662F;&#x4E00;&#x79CD;&#x7528;&#x6765;&#x5B58;&#x50A8; key-value &#x952E;&#x503C;&#x5BF9;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x800C;&#x4E14;&#x5B83;&#x7684; key &#x662F;&#x5DF2;&#x7ECF;&#x6392;&#x5E8F;&#x8FC7;&#x7684;&#x3002;&#x4E00;&#x4E2A; SSTable &#x6709;&#x591A;&#x4E2A;&#x6392;&#x5E8F;&#x8FC7;&#x6587;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x5B83;&#x4EEC;&#x53EB;&#x505A; Segments&#x3002;&#x8FD9;&#x4E9B; Segments &#x4E00;&#x65E6;&#x88AB;&#x5199;&#x5165;&#x78C1;&#x76D8;&#x5C31;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x3002;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x4F8B;&#x5982;&#x4E0B;&#x56FE;:</p>
<p><img src="/2021/06/25/lsm-tree/example1.png"></p>
<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6BCF;&#x4E2A;segment &#x4E2D;&#x7684; key-value &#x5BF9;&#x90FD;&#x662F;&#x57FA;&#x4E8E; key &#x6392;&#x5E8F;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x4E0B;&#x4E00;&#x7AE0;&#x8282;&#x4ECB;&#x7ECD; segment &#x5230;&#x5E95;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4EE5;&#x53CA;&#x5B83;&#x662F;&#x5982;&#x4F55;&#x751F;&#x6210;&#x7684;&#x3002;</p>
<h1 id="&#x5199;&#x6570;&#x636E;"><a href="#&#x5199;&#x6570;&#x636E;" class="headerlink" title="&#x5199;&#x6570;&#x636E;"></a>&#x5199;&#x6570;&#x636E;</h1><p>&#x56DE;&#x5FC6;&#x524D;&#x6587;&#xFF0C;LSM &#x6811;&#x53EA;&#x4F1A;&#x8FDB;&#x884C;&#x987A;&#x5E8F;&#x5199;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x4F1A;&#x6000;&#x7591;&#x56E0;&#x4E3A;&#x5B9E;&#x9645;&#x7684;&#x6570;&#x636E;&#x662F;&#x65E0;&#x5E8F;&#x5199;&#x5165;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x4FDD;&#x8BC1;&#x987A;&#x5E8F;&#x5199;&#x4E14;&#x6709;&#x5E8F;&#x5462;&#xFF1F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x901A;&#x8FC7;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x6811;&#x5F62;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6765;&#x89E3;&#x51B3;&#x3002;&#x8FD9;&#x4E2A;&#x901A;&#x5E38;&#x88AB;&#x79F0;&#x4F5C; memtable (&#x5185;&#x90E8;&#x8868;)&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x80CC;&#x540E;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x901A;&#x5E38;&#x662F;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x6811;&#xFF0C;&#x4F8B;&#x5982; <code>&#x7EA2;&#x9ED1;&#x6811;</code> &#x3002;&#x5F53;&#x6570;&#x636E;&#x88AB;&#x5199;&#x5165;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x4E86;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#xFF0C;</p>
<p><img src="/2021/06/25/lsm-tree/example2.png"></p>
<p>&#x6211;&#x4EEC;&#x7684;&#x5199;&#x5165;&#x6570;&#x636E;&#x90FD;&#x88AB;&#x5B58;&#x5165;&#x8FD9;&#x68F5;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#xFF0C;&#x76F4;&#x5230;&#x5BB9;&#x91CF;&#x8FBE;&#x5230;&#x4E86;&#x6211;&#x4EEC;&#x9884;&#x8BBE;&#x503C;&#x3002;&#x4E00;&#x65E6;&#x7EA2;&#x9ED1;&#x6811;&#x8FBE;&#x5230;&#x4E86;&#x5BB9;&#x91CF;&#x4E0A;&#x9650;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x628A;&#x6570;&#x636E;&#x901A;&#x8FC7; segment &#x4EE5;&#x6709;&#x5E8F;&#x7684;&#x5F62;&#x5F0F;&#x5237;&#x65B0;&#x5230;&#x78C1;&#x76D8;&#x4E0A;&#x3002;&#x8FD9;&#x4E2A;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5728;&#x5199;&#x5165; segment &#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x4FDD;&#x8BC1;&#x5355;&#x70B9;&#x987A;&#x5E8F;&#x5199;&#x5373;&#x4F7F;&#x5916;&#x90E8;&#x6570;&#x636E;&#x8FDB;&#x5165;&#x65F6;&#x5019;&#x662F;&#x65E0;&#x9700;&#x7684;&#x3002;</p>
<p><img src="/2021/06/25/lsm-tree/example3.png" alt="example3"></p>
<h1 id="&#x8BFB;&#x6570;&#x636E;"><a href="#&#x8BFB;&#x6570;&#x636E;" class="headerlink" title="&#x8BFB;&#x6570;&#x636E;"></a>&#x8BFB;&#x6570;&#x636E;</h1><p>&#x90A3;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x5728; SStable &#x4E2D;&#x67E5;&#x627E;&#x6570;&#x636E;&#x7684;&#x5462;&#xFF1F;&#x6700;&#x76F4;&#x89C2;&#x7684;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x626B;&#x63CF; segments &#x6587;&#x4EF6;&#xFF0C;&#x5BFB;&#x627E;&#x9700;&#x8981;&#x7684; key &#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x6700;&#x65B0;&#x7684; segement &#x5F00;&#x59CB;&#x5BFB;&#x627E;&#xFF0C;&#x4ECE;&#x65B0;&#x5230;&#x65E7;&#x76F4;&#x5230;&#x6211;&#x4EEC;&#x627E;&#x5230;&#x90A3;&#x4E2A; key &#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x610F;&#x5473;&#x7740;&#x8D8A;&#x662F;&#x6700;&#x65B0;&#x5199;&#x5165;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x66F4;&#x5FEB;&#x67E5;&#x8BE2;&#x5230;&#x3002;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x7684;&#x4F18;&#x5316;&#x65B9;&#x5F0F;&#x662F;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x7A00;&#x758F;&#x7D22;&#x5F15; (sparse index)</p>
<p><img src="/2021/06/25/lsm-tree/example4.png"></p>
<p>&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x7D22;&#x5F15;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x5B9A;&#x4F4D;&#x5230;&#x8981;&#x63D2;&#x5165; value &#x5BF9;&#x5E94;&#x7684; key &#x6240;&#x5904;&#x4E8E;&#x4E0B;&#x6807;&#x7684;&#x4E0A;&#x4E0B;&#x754C;&#x4F4D;&#x7F6E;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x9488;&#x5BF9;&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x5185;&#x7684;&#x6240;&#x6709; segment &#x8FDB;&#x884C;&#x5C0F;&#x8303;&#x56F4;&#x7684;&#x626B;&#x63CF;&#x5C31;&#x597D;&#x4E86;&#x3002;&#x4F8B;&#x5982;&#x8FD9;&#x4E2A;&#x573A;&#x666F;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x5BFB;&#x627E; <code>dollar</code> &#x8FD9;&#x4E2A; key &#x5728;&#x793A;&#x4F8B; segment &#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x7A00;&#x758F;&#x7D22;&#x5F15;&#x4E2D;&#x901A;&#x8FC7;&#x4E8C;&#x5206;&#x67E5;&#x627E;&#x53D1;&#x73B0; <code>dollar</code> &#x5904;&#x4E8E; <code>dog</code> &#x548C; <code>downgrade</code> &#x4E4B;&#x95F4;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x904D;&#x5386;&#x4E0B;&#x6807;&#x4ECE; <code>17208</code> &#x5230; <code>19504</code>  &#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x8FD9;&#x4E2A; key &#x5BF9;&#x5E94;&#x7684; value (&#x6216;&#x8005;&#x5224;&#x65AD;&#x662F;&#x5426;&#x7F3A;&#x5931;)</p>
<p>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x4E0D;&#x9519;&#x7684;&#x4F18;&#x5316;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x5B58;&#x5728;&#x7684; key &#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x6700;&#x7EC8;&#x53EF;&#x80FD;&#x4F1A;&#x53BB;&#x904D;&#x5386;&#x6BCF;&#x4E00;&#x4E2A; segment file &#x4F46;&#x4E0D;&#x80FD;&#x627E;&#x5230;&#x90A3;&#x4E2A; key &#x3002;&#x8FD9;&#x91CC; <a href="https://zh.wikipedia.org/wiki/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8">&#x5E03;&#x9686;&#x8FC7;&#x6EE4;&#x5668;</a> (bloom filter) &#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x907F;&#x514D;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;bloom filter &#x662F;&#x4E00;&#x79CD;&#x7A7A;&#x95F4;&#x4F18;&#x5316;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7528;&#x6765;&#x56DE;&#x7B54;&#x6570;&#x636E;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4E8E;&#x5F53;&#x524D;&#x6570;&#x636E;&#x96C6;&#x7684;&#x95EE;&#x9898;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x6BCF;&#x6B21;&#x5199;&#x5165;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#x628A;&#x5B83;&#x6DFB;&#x52A0;&#x5230; bloom filter &#x4E2D;&#x3002;&#x6BCF;&#x6B21;&#x5728;&#x8BFB;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x5148;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x63D0;&#x5347;&#x5BF9;&#x4E8E;&#x4E0D;&#x5B58;&#x5728; key &#x7684;&#x54CD;&#x5E94;&#x6548;&#x7387;&#x3002;</p>
<h1 id="Compaction"><a href="#Compaction" class="headerlink" title="Compaction"></a>Compaction</h1><p>&#x968F;&#x7740;&#x7CFB;&#x7EDF;&#x7684;&#x6301;&#x7EED;&#x8FD0;&#x884C;&#xFF0C;&#x4E45;&#x800C;&#x4E45;&#x4E4B;&#x7CFB;&#x7EDF;&#x4F1A;&#x79EF;&#x7D2F;&#x5927;&#x91CF;&#x7684; segment &#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x4E9B; segment &#x6587;&#x4EF6;&#x9700;&#x8981;&#x88AB;&#x6E05;&#x7406;&#x548C;&#x7EF4;&#x62A4;&#x907F;&#x514D;&#x6570;&#x91CF;&#x8FBE;&#x5230;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x63A7;&#x5236;&#x7684;&#x89C4;&#x6A21;&#x3002;&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x53EB; compaction (&#x7CBE;&#x7B80;) &#x8FDB;&#x7A0B;&#x7684;&#x8D23;&#x4EFB;&#x3002;Compaction &#x662F;&#x4E00;&#x4E2A;&#x540E;&#x53F0;&#x8FDB;&#x7A0B;&#xFF0C;&#x5B83;&#x6301;&#x7EED;&#x5408;&#x5E76;&#x65E7;&#x7684; segment &#x6210;&#x65B0;&#x7684; segment</p>
<p><img src="/2021/06/25/lsm-tree/example5.png"></p>
<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x91CC;&#xFF0C;segments 1 &#x548C; 2 &#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x5171;&#x540C;&#x7684; key &#x53EB; <code>dog</code> &#x3002;&#x76F8;&#x5BF9;&#x65B0;&#x4E00;&#x70B9;&#x7684; segment (2) &#x5305;&#x542B;&#x6700;&#x65B0;&#x7684;&#x503C;&#xFF0C;&#x6240;&#x4EE5; segment 2 &#x4E2D;&#x5305;&#x542B;&#x7684;&#x503C;&#x4F1A;&#x88AB;&#x5E26;&#x5165;&#x5230;&#x65B0;&#x7684; segment 4 &#x4E2D;&#x3002;&#x4E00;&#x65E6; compaction &#x5B8C;&#x6210;&#x5408;&#x5E76;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x65E7;&#x7684; segment &#x4F1A;&#x88AB;&#x5220;&#x9664;&#x3002;</p>
<h1 id="&#x5220;&#x9664;&#x6570;&#x636E;"><a href="#&#x5220;&#x9664;&#x6570;&#x636E;" class="headerlink" title="&#x5220;&#x9664;&#x6570;&#x636E;"></a>&#x5220;&#x9664;&#x6570;&#x636E;</h1><p>&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x8BB2;&#x5B8C;&#x4E86;&#x8BFB;&#x548C;&#x5199;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5220;&#x9664;&#x6570;&#x636E;&#x5462;&#xFF1F;&#x56E0;&#x4E3A; Segment file &#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x4E0D;&#x53EF;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x5220;&#x9664; SSTable &#x4E2D;&#x7684;&#x6570;&#x636E;&#x5462;&#xFF1F;&#x5220;&#x9664;&#x5B9E;&#x9645;&#x4E0A;&#x548C;&#x5199;&#x5165;&#x662F;&#x4E00;&#x6837;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x5F53;&#x53D1;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x5220;&#x9664;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x4E2A;&#x53EB; <code>tombstone</code> &#x7684;&#x6807;&#x5FD7;&#x4F4D;&#x4F1A;&#x88AB;&#x5199;&#x5165;&#x5728;&#x90A3;&#x4E2A; key &#x4E0A;</p>
<p><img src="/2021/06/25/lsm-tree/example6.png"></p>
<p>&#x4E0A;&#x9762;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x91CC;&#x53EF;&#x4EE5;&#x770B;&#x5230; key <code>dog</code> &#x6709;&#x4E00;&#x4E2A;&#x5386;&#x53F2;&#x6570;&#x636E; <code>52</code>, &#x4F46;&#x662F;&#x6700;&#x65B0;&#x7684; segment &#x91CC;&#x6709;&#x4E00;&#x4E2A; <code>tombstone</code>  &#x7684;&#x6807;&#x5FD7;&#x4F4D;&#x3002;&#x8FD9;&#x4E2A;&#x8868;&#x660E;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x6536;&#x5230;&#x4E00;&#x4E2A; <code>dog</code> &#x7684;&#x8BFB;&#x8BF7;&#x6C42;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x8FD4;&#x56DE;&#x5B83;&#x4E0D;&#x5B58;&#x5728;&#x3002;&#x8FD9;&#x4E2A;&#x610F;&#x5473;&#x7740;&#x5220;&#x9664;&#x7684;&#x64CD;&#x4F5C;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x4ECD;&#x7136;&#x4F1A;&#x5360;&#x7528;&#x78C1;&#x76D8;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x8FD9;&#x4E2A;&#x53EF;&#x80FD;&#x4F1A;&#x8BA9;&#x5F88;&#x591A;&#x5F00;&#x53D1;&#x8005;&#x89C9;&#x5F97;&#x60CA;&#x8BB6;&#x3002;&#x6700;&#x7EC8; <code>tombstone</code> &#x4F1A;&#x968F;&#x7740; comaption &#x88AB;&#x4ECE;&#x78C1;&#x76D8;&#x4E0A;&#x5220;&#x9664;&#x3002;</p>
<h1 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h1><p>&#x5230;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x7406;&#x89E3;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x7684; LSM tree &#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x4E86;</p>
<ol>
<li>&#x5199;&#x64CD;&#x4F5C;&#x88AB;&#x5B58;&#x50A8;&#x5728;&#x4E00;&#x4E2A;&#x5185;&#x5B58;&#x7684;&#x6811;&#x7ED3;&#x6784;&#x4E2D; (&#x4E5F;&#x53EB;&#x505A; memtable) &#x3002; &#x652F;&#x6491;&#x6027;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784; (&#x5E03;&#x9686;&#x8FC7;&#x6EE4;&#x5668; bloom filter &#x548C; &#x7A00;&#x758F;&#x7D22;&#x5F15; sparse index) &#x4E5F;&#x4F1A;&#x88AB;&#x540C;&#x6B65;&#x66F4;&#x65B0;&#x3002;</li>
<li>&#x5F53; memtable &#x53D8;&#x5F97;&#x592A;&#x5927;&#x5C31;&#x4F1A;&#x88AB;&#x6309;&#x6709;&#x5E8F; key &#x7684;&#x65B9;&#x5F0F;&#x5237;&#x5165;&#x78C1;&#x76D8;</li>
<li>&#x5F53;&#x6765;&#x4E86;&#x4E00;&#x4E2A;&#x8BFB;&#x8BF7;&#x6C42;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x5148;&#x68C0;&#x67E5; bloom filter&#x3002; &#x5982;&#x679C; bloom filter &#x663E;&#x793A;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF; key not found &#x3002;&#x5982;&#x679C; bloom filter &#x63D0;&#x793A;&#x5B58;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x6839;&#x636E; segment &#x6587;&#x4EF6;&#x4ECE;&#x65B0;&#x5230;&#x65E7;&#x6765;&#x904D;&#x5386;&#x67E5;&#x8BE2;&#x3002;</li>
<li>&#x6BCF;&#x4E2A; segment file&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x67E5;&#x8BE2;&#x7A00;&#x758F;&#x7D22;&#x5F15;&#xFF0C;&#x7136;&#x540E;&#x5728; key &#x6240;&#x5728;&#x7684;&#x8303;&#x56F4;&#xFF0C;&#x6839;&#x636E;&#x4E0B;&#x6807;&#x6765;&#x904D;&#x5386;&#x76F4;&#x5230;&#x6211;&#x4EEC;&#x627E;&#x5230;&#x90A3;&#x4E2A; key&#xFF0C;&#x6700;&#x7EC8;&#x628A; value &#x8FD4;&#x56DE;&#x7ED9;&#x5230;&#x5BA2;&#x6237;&#x7AEF;&#x3002;</li>
</ol>
]]></content>
      <categories>
        <category>存储小白</category>
      </categories>
  </entry>
  <entry>
    <title>分析一个 rate-limiter 漏桶算法的实现机制</title>
    <url>/2021/07/05/leaky-bucket/</url>
    <content><![CDATA[<p>&#x670D;&#x52A1;&#x6CBB;&#x7406;&#x7684;&#x9762;&#x8BD5;&#x4E2D;&#x5E38;&#x88AB;&#x95EE;&#x5230;&#xFF0C;&#x9762;&#x5BF9;&#x7A81;&#x53D1;&#x6D41;&#x91CF;&#x5982;&#x4F55;&#x5E94;&#x5BF9;&#xFF0C;&#x901A;&#x5E38;&#x90FD;&#x662F;&#x56DE;&#x7B54;&#x9650;&#x6D41;&#x6216;&#x5219;&#x964D;&#x7EA7;&#x3002;&#x518D;&#x8FFD;&#x95EE;&#x4E00;&#x53E5;&#x9650;&#x6D41;&#x7B97;&#x6CD5;&#x6709;&#x54EA;&#x4E9B;&#xFF0C;&#x901A;&#x5E38;&#x90FD;&#x662F;&#x4F1A;&#x8BF4;&#x4EE4;&#x724C;&#x6876;&#x6216;&#x8005;&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x3002;&#x539F;&#x7406;&#x8BF4;&#x8BF4;&#x5BB9;&#x6613;&#xFF0C;&#x4F46;&#x5230;&#x4E86;&#x5B9E;&#x73B0;&#x5C42;&#x9762;&#xFF0C;&#x5927;&#x591A;&#x662F;&#x627E;&#x4E00;&#x4E2A;&#x73B0;&#x6210;&#x7684;&#x5F00;&#x6E90;&#x5B9E;&#x73B0;&#xFF0C;&#x4F8B;&#x5982; <a href="https://github.com/uber-go/ratelimit">uber-go/ratelimit: A Golang blocking leaky-bucket rate limit implementation (github.com)</a> &#x3002;&#x4ECA;&#x5929;&#x82B1;&#x4E86;&#x4E00;&#x70B9;&#x65F6;&#x95F4;&#x8BA4;&#x771F;&#x7814;&#x7A76;&#x4E86;&#x4E00;&#x4E2A;&#x9650;&#x6D41;&#x7B97;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x514D;&#x5F97;&#x65E5;&#x540E;&#x5FD8;&#x4E86;&#x3002;</p>
<h3 id="&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x539F;&#x7406;"><a href="#&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x539F;&#x7406;" class="headerlink" title="&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x539F;&#x7406;"></a>&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x539F;&#x7406;</h3><p><code>&#x6F0F;&#x6876;&#x7B97;&#x6CD5;</code> &#x539F;&#x7406;&#x672C;&#x8EAB;&#x975E;&#x5E38;&#x597D;&#x7406;&#x89E3;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x76DB;&#x6C34;&#x7684;&#x6876;&#xFF0C;&#x4E0B;&#x9762;&#x6709;&#x4E00;&#x4E2A;&#x5F00;&#x53E3;&#x3002;&#x4E0A;&#x65B9;&#x81EA;&#x6765;&#x6C34;&#x9F99;&#x5934;&#x8868;&#x793A; <code>&#x8BF7;&#x6C42;</code>&#xFF0C;&#x8BF7;&#x6C42;&#x53EF;&#x4EE5;&#x4EFB;&#x610F;&#x901F;&#x7387;&#x52A0;&#x5165;&#x5230;&#x6876;&#x91CC;&#xFF0C;&#x4F46;&#x4E0B;&#x9762;&#x7684;&#x5C0F;&#x7A7A;&#x4FDD;&#x8BC1;&#x4E86;&#x6876;&#x5185;&#x7684;&#x6C34;&#x4F1A;&#x4EE5;&#x6052;&#x5B9A;&#x7684;&#x901F;&#x7387;&#x5F80;&#x4E0B;&#x6F0F; (&#x8868;&#x793A;&#x5177;&#x4F53;&#x8BBF;&#x95EE;&#x5230;&#x4E1A;&#x52A1;&#x5C42;) &#x3002; &#x5982;&#x679C;&#x81EA;&#x6765;&#x6C34;&#x7684;&#x6D41;&#x6C34;&#x901F;&#x5EA6;&#x8D85;&#x8FC7;&#x4E86;&#x4E0B;&#x6F0F;&#x7684;&#x901F;&#x7387;&#xFF0C;&#x5C31;&#x4F1A;&#x4ECE;&#x6876;&#x6EA2;&#x51FA; (&#x8868;&#x793A;&#x629B;&#x5F03;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;)&#xFF0C;&#x5177;&#x4F53;&#x770B;&#x4E0B;&#x56FE;</p>
<p><img src="/2021/07/05/leaky-bucket/leaky-bucket.png" alt="leak-bucket"></p>
<p>&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x7684;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#x662F;&#x524A;&#x5CF0;&#xFF0C;&#x65E0;&#x8BBA;&#x5916;&#x90E8;&#x8BF7;&#x6C42;&#x4EE5;&#x600E;&#x6837;&#x7684;&#x901F;&#x7387; (QPS) &#x8FDB;&#x6765;&#xFF0C;&#x603B;&#x662F;&#x80FD;&#x591F;&#x4EE5;&#x6052;&#x5B9A;&#x7684;&#x901F;&#x7387;&#x6765;&#x8BBF;&#x95EE;&#x4E0B;&#x6E38;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x8D77;&#x5230;&#x5BF9;&#x670D;&#x52A1;&#x4FDD;&#x62A4;&#x7684;&#x4F5C;&#x7528;&#x3002;</p>
<h3 id="&#x6838;&#x5FC3;&#x8981;&#x7D20;"><a href="#&#x6838;&#x5FC3;&#x8981;&#x7D20;" class="headerlink" title="&#x6838;&#x5FC3;&#x8981;&#x7D20;"></a>&#x6838;&#x5FC3;&#x8981;&#x7D20;</h3><p>&#x5728;&#x5206;&#x6790;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x770B;&#x4E0B;&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x7684;&#x6838;&#x5FC3;&#x8981;&#x7D20;&#x6709;&#x54EA;&#x4E9B;&#x3002;&#x9996;&#x5148;&#x6709;2&#x4E2A;&#x5173;&#x952E;&#x7684;&#x7CFB;&#x6570;&#xFF0C;<code>capacity</code>  &#x8868;&#x793A;&#x6876;&#x7684;&#x5BB9;&#x91CF;&#xFF0C;&#x5F53;<code>capacity </code> &#x6EE1;&#x4E86;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x629B;&#x5F03;&#x8FD9;&#x4E9B;&#x8BF7;&#x6C42;&#x3002;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x662F; <code>leak_rate</code>  &#x4E0B;&#x6F0F;&#x7684;&#x901F;&#x7387;&#xFF0C;&#x901A;&#x5E38;&#x5355;&#x4F4D;&#x53EF;&#x4EE5;&#x662F; req/s &#xFF0C;&#x8868;&#x793A;&#x6BCF;&#x79D2;&#x653E;&#x8FC7;&#x591A;&#x5C11; request &#x5230;&#x4E0B;&#x6E38;</p>
<h4 id="Time-&#x65F6;&#x5E8F;"><a href="#Time-&#x65F6;&#x5E8F;" class="headerlink" title="Time &#x65F6;&#x5E8F;"></a>Time &#x65F6;&#x5E8F;</h4><p>&#x9664;&#x4E86; <code>capacity</code>  &#x548C; <code>leak_rate</code> , &#x6709;&#x4E00;&#x4E2A;&#x6700;&#x5BB9;&#x6613;&#x9057;&#x6F0F;&#x7684;&#x6982;&#x5FF5;&#x5C31;&#x662F; (timestamp)&#xFF0C;<code>&#x6F0F;&#x6876;&#x7B97;&#x6CD5;</code> &#x7684;&#x80CC;&#x540E;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x65F6;&#x5E8F; (time-series) &#x7684;&#x6A21;&#x578B;&#xFF0C;&#x56E0;&#x4E3A;&#x8BF7;&#x6C42;&#x662F;&#x6309;&#x7167;&#x65F6;&#x95F4;&#x5148;&#x540E;&#x8FDB;&#x6765;&#x7684;&#xFF0C;&#x6F0F;&#x51FA;&#x81EA;&#x7136;&#x4E5F;&#x4F1A;&#x6839;&#x636E;&#x65F6;&#x95F4;&#x5148;&#x540E;&#x6765;&#x6F0F;&#x51FA;&#x3002;</p>
<h3 id="&#x5B9E;&#x73B0;"><a href="#&#x5B9E;&#x73B0;" class="headerlink" title="&#x5B9E;&#x73B0;"></a>&#x5B9E;&#x73B0;</h3><p>&#x8FD9;&#x91CC;&#x5168;&#x7A0B;&#x90FD;&#x7528; python &#x6765;&#x505A;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x3002;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E2A; python &#x7684; webserver &#x4E0A;&#x5E0C;&#x671B;&#x901A;&#x8FC7;&#x6F0F;&#x6876;&#x7B97;&#x6CD5;&#x5B9E;&#x73B0;&#x9650;&#x6D41;&#xFF0C;&#x5927;&#x6982;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x8FD9;&#x6837;&#x7684;:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">request_handler</span>(<span class="params">self</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> leak_bucket.acquire():</span><br><span class="line">        <span class="comment"># &quot;&#x6F0F;&#x51FA;&quot; &#x901A;&#x8FC7;&#xFF0C;&#x5F00;&#x59CB;&#x5904;&#x7406;&#x4E1A;&#x52A1;</span></span><br><span class="line">        <span class="comment"># &#x6876;&#x6CA1;&#x6709;&#x6EE1;&#xFF0C;&#x5148;&#x963B;&#x585E;&#x6392;&#x961F;&#x7B49; &quot;&#x6F0F;&#x51FA;&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># &#x6876;&#x6EE1;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x629B;&#x5F03;&#x5F53;&#x524D;&#x8BF7;&#x6C42;</span></span><br></pre></td></tr></table></figure>

<p>&#x4ECA;&#x5929;&#x8FD9;&#x4E2A;&#x5B9E;&#x73B0;&#x4F1A;&#x6BD4;&#x8F83;&#x7279;&#x6B8A;&#xFF0C;&#x4E0D;&#x8003;&#x8651; <code>capacity</code>  &#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5206;&#x4E24;&#x4E2A;&#x573A;&#x666F;</p>
<ol>
<li>&#x53EF;&#x4EE5;&#x6F0F;&#x51FA;</li>
<li>&#x4E0D;&#x80FD;&#x6F0F;&#x51FA;&#xFF0C;&#x963B;&#x585E;&#x7EE7;&#x7EED;&#x6392;&#x961F;&#x7B49;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x629B;&#x5F03;</li>
</ol>
<p>&#x5148;&#x6765;&#x770B;&#x8FD9;&#x4E2A; <code>LeakBucket </code>  &#x7684;&#x8BBE;&#x8BA1;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LeakyBucket</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, leaky_rate</span>):</span><br><span class="line">        self.leaky_rate = <span class="built_in">float</span>(leaky_rate)  <span class="comment"># &#x6F0F;&#x51FA;&#x901F;&#x5EA6;</span></span><br><span class="line">        self._que = []  <span class="comment"># &#x8BF7;&#x6C42;&#x65F6;&#x95F4;&#x961F;&#x5217;</span></span><br><span class="line">        self._lock = threading.RLock()</span><br></pre></td></tr></table></figure>

<p>&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x662F;&#x7528;&#x4E86; self._que &#x6765;&#x5B58;&#x50A8;&#x8BF7;&#x6C42;&#x65F6;&#x95F4;&#x7684;&#x961F;&#x5217;&#xFF0C;&#x6309;&#x7167;&#x8BF7;&#x6C42;&#x65F6;&#x95F4;&#x7684;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x4F9D;&#x6B21;&#x63D2;&#x5165;&#x3002;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;<code>self._lock</code> &#x7528;&#x6765;&#x5904;&#x7406;&#x591A;&#x7EBF;&#x7A0B;&#x573A;&#x666F;&#x4E0B;&#x7684;&#x6570;&#x636E;&#x4E00;&#x81F4;&#x6027;&#x3002;</p>
<h4 id="&#x539F;&#x7406;&#x8BF4;&#x660E;"><a href="#&#x539F;&#x7406;&#x8BF4;&#x660E;" class="headerlink" title="&#x539F;&#x7406;&#x8BF4;&#x660E;"></a>&#x539F;&#x7406;&#x8BF4;&#x660E;</h4><p>&#x5148;&#x770B;&#x4E0B;&#x6838;&#x5FC3;&#x51FD;&#x6570; <code>acquire</code> &#x7684;&#x5B9E;&#x73B0;,</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">acquire</span>(<span class="params">self, block=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        block: &#x662F;&#x5426;&#x963B;&#x585E;&#x76F4;&#x5230;&#x53EF;&#x4EE5;&#x8BF7;&#x6C42;</span></span><br><span class="line"><span class="string">    returns:</span></span><br><span class="line"><span class="string">        - &#x662F;&#x5426;&#x53EF;&#x4EE5;&#x8BF7;&#x6C42;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    now = time()</span><br><span class="line">    volume = self.size()</span><br><span class="line">    <span class="keyword">with</span> self._lock:</span><br><span class="line">        <span class="keyword">if</span> volume &gt;= self.leaky_rate:  <span class="comment"># &#x5BB9;&#x91CF;&#x5DF2;&#x6EE1;&#x9700;&#x8981;&#x6E05;&#x7406;&#x5DF2;&#x6F0F;&#x51FA;&#x8BF7;&#x6C42;</span></span><br><span class="line">            pre_tick = now - <span class="number">1</span>  <span class="comment"># &#x4E0A;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7A97;&#x53E3;, &#x9ED8;&#x8BA4;&#x5355;&#x4F4D;&#x4E3A;&#x79D2;</span></span><br><span class="line">            item_count, remaining_time = self.inspect_expired_items(pre_tick)</span><br><span class="line">            <span class="keyword">if</span> item_count &gt;= self.leaky_rate:  <span class="comment"># &#x4E0A;&#x4E2A;&#x5468;&#x671F;&#x8BF7;&#x6C42;&#x5DF2;&#x8D85;&#x9650;</span></span><br><span class="line">                <span class="keyword">if</span> block:</span><br><span class="line">                    sleep(remaining_time)  <span class="comment"># &#x7B49;&#x5230;&#x51FA;&#x73B0;&#x4E00;&#x4E2A;&#x7A7A;&#x4F4D;</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&apos;Bucket Full, sleep {} seconds&apos;</span>.<span class="built_in">format</span>(remaining_time))</span><br><span class="line">                    <span class="keyword">return</span> self.acquire()  <span class="comment"># &#x518D;&#x6B21;&#x5C1D;&#x8BD5;</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            self._que[:volume - item_count] = []  <span class="comment"># &#x6E05;&#x9664;&#x4E0A;&#x4E2A;&#x5468;&#x671F;&#x6570;&#x636E;</span></span><br><span class="line">        self._que.append(now)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>

<p>&#x518D;&#x7ED3;&#x5408;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x539F;&#x7406;&#x56FE;&#xFF0C;&#x5C1D;&#x8BD5;&#x505A;&#x4E0B;&#x5206;&#x6790;&#x3002;</p>
<p><img src="/2021/07/05/leaky-bucket/leaky_bucket_theory.png" alt="leak-bucket-theory"></p>
<p>&#x56E0;&#x4E3A;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x65F6;&#x5E8F;&#x5C31;&#x662F; <code>now</code> &#x5F53;&#x524D;&#x6700;&#x65B0;&#x65F6;&#x95F4;&#x3002;<code>volume</code> &#x8868;&#x793A;&#x5F53;&#x524D; <code>queue</code>  &#x7684;&#x957F;&#x5EA6;&#x3002;&#x8FD9;&#x91CC;&#x52A0;&#x4E86;&#x4E00;&#x628A;&#x9501;&#x662F;&#x7528;&#x4E8E;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x9501;&#x7684;&#x7C92;&#x5EA6;&#x6709;&#x70B9;&#x5927;&#xFF0C;&#x5148;&#x4E0D;&#x7BA1;&#x4E86;&#x3002;</p>
<p>&#x9996;&#x5148;&#x770B;&#x5224;&#x65AD; <code>if volume &gt;= self.leaky_rate</code>, &#x5982;&#x679C; volume  &#x6CA1;&#x6709; leaky_rate &#x5927;&#xFF0C;&#x8868;&#x793A;&#x5F53;&#x524D;&#x6876;&#x6CA1;&#x6EE1;&#xFF0C;&#x4E14;&#x53EF;&#x4EE5;&#x5B57;&#x8282;&#x6F0F;&#x51FA;&#xFF0C;&#x90A3;&#x5C31;&#x5728;&#x7B2C;22&#x884C;&#xFF0C;&#x628A;&#x81EA;&#x5DF1; append &#x5230; queue &#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x76F4;&#x63A5;&#x8FD4;&#x56DE; <code>True</code>  &#x5C31;&#x597D;&#x4E86;&#x3002;</p>
<p>&#x53CD;&#x4E4B;&#xFF0C;&#x8868;&#x793A;&#x5BB9;&#x91CF;&#x662F;&#x8D85;&#x8FC7;&#x6F0F;&#x51FA;&#x7684;&#x901F;&#x7387;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x901A;&#x8FC7; <code>pre_tick</code> &#x6765;&#x83B7;&#x53D6;&#x524D;&#x4E00;&#x79D2;&#x65F6;&#x95F4;&#x7A97;&#x53E3;&#xFF0C;&#x901A;&#x8FC7; <code>self.inspect_expired_items(pre_tick)</code>  &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6765;&#x83B7;&#x53D6;&#x54EA;&#x4E9B;&#x8BF7;&#x6C42;&#x5DF2;&#x7ECF;&#x6F0F;&#x51FA;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x770B;&#x4E0B; <code>inspect_expired_items</code>  &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">inspect_expired_items</span>(<span class="params">self, time: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;&#x68C0;&#x67E5;&#x5DF2;&#x7ECF;&#x6F0F;&#x51FA;&#x7684;&#x8BF7;&#x6C42;</span></span><br><span class="line"><span class="string">    args:</span></span><br><span class="line"><span class="string">        time: &#x4E0A;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7A97;&#x53E3;, &#x9ED8;&#x8BA4;&#x662F;&#x79D2;</span></span><br><span class="line"><span class="string">    returns:</span></span><br><span class="line"><span class="string">        item_count: &#x5DF2;&#x6F0F;&#x51FA;&#x7684;&#x8BF7;&#x6C42;&#x4E2A;&#x6570;</span></span><br><span class="line"><span class="string">        remaining_time: &#x7B2C;&#x4E00;&#x4E2A;&#x672A;&#x6F0F;&#x51FA;&#x8BF7;&#x6C42;&#x7684;&#x5269;&#x4F59;&#x65F6;&#x95F4;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    volume = self.size()</span><br><span class="line">    item_count, remaining_time = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> log_idx, log_item <span class="keyword">in</span> <span class="built_in">enumerate</span>(self._que):</span><br><span class="line">        <span class="keyword">if</span> log_item &gt; time:</span><br><span class="line">            item_count = volume - log_idx</span><br><span class="line">            remaining_time = log_item - time</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> item_count, remaining_time</span><br></pre></td></tr></table></figure>

<p>&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x904D;&#x5386;&#x6574;&#x4E2A; queue &#x627E;&#x5230;&#x65F6;&#x5E8F;&#x6BD4;&#x4F20;&#x5165;&#x7684;&#x65F6;&#x95F4;&#x53C2;&#x6570;&#x5927;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x901A;&#x8FC7; <code>volume - log_idx</code> &#x8BA1;&#x7B97;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x8BF7;&#x6C42;&#x5E94;&#x8BE5;&#x6F0F;&#x51FA;&#x4E86; (&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x662F;&#x5E94;&#x8BE5;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5DF2;&#x7ECF;)&#xFF0C;&#x53E6;&#x5916;&#x7B2C;&#x4E00;&#x4E2A;&#x672A;&#x6F0F;&#x51FA;&#x8BF7;&#x6C42;&#x7684;&#x5269;&#x4F59;&#x65F6;&#x95F4;&#x3002;(&#x8FD9;&#x91CC;&#x5927;&#x5BB6;&#x53EF;&#x80FD;&#x4F1A;&#x548C;&#x6211;&#x6709;&#x4E00;&#x6837;&#x7684;&#x8D28;&#x7591;&#xFF0C;&#x4E3A;&#x5565; &gt; time &#x5C31;&#x8868;&#x793A;&#x8FD8;&#x672A;&#x6F0F;&#x51FA;&#xFF0C;&#x8FD9;&#x91CC;&#x540E;&#x9762;&#x4F1A;&#x4ECB;&#x7ECD;)&#x3002;</p>
<p>&#x518D;&#x56DE;&#x5230; <code>acquire</code>  &#x51FD;&#x6570;&#x7684;&#x7B2C;15&#x884C;&#xFF0C;&#x5982;&#x679C; <code>item_count &gt; leak_rate</code>  &#x8868;&#x793A;&#x8FD9;&#x4E9B;&#x5E94;&#x8BE5;&#x6F0F;&#x51FA;&#x7684;&#x8BF7;&#x6C42;&#x4E5F;&#x8FD8;&#x5728;&#x6392;&#x961F;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C31;&#x7B49;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x65F6;&#x95F4; <code>remaining_time</code>, &#x7136;&#x540E;&#x7EE7;&#x7EED;&#x901A;&#x8FC7;&#x9012;&#x5F52;&#x6765;&#x5224;&#x65AD;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x6F0F;&#x51FA;&#x4E86;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x6700;&#x540E;&#x770B;&#x4E0B; 22 &#x884C;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x5F53;&#x6211;&#x4EEC;&#x5224;&#x65AD;&#x53EF;&#x4EE5;&#x6F0F;&#x51FA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x628A;&#x4E4B;&#x524D;&#x7684;&#x6570;&#x636E;&#x6E05;&#x9664;&#x6389;&#xFF0C;&#x8FD9;&#x5C31;&#x56DE;&#x7B54;&#x4E86;&#x524D;&#x9762;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4E3A;&#x5565;&#x5728;<code>inspect_expired_items</code> &#x91CC;&#x53EA;&#x8981;&#x5224;&#x65AD;&#x65F6;&#x5E8F;&#x5927;&#x4E8E;&#x53C2;&#x6570; time &#x5C31;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x5E94;&#x8BE5;&#x6F0F;&#x51FA;&#x4E86;&#x3002;</p>
<h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x5199;&#x7684;&#x542C;&#x7ED5;&#x7684;&#xFF0C;&#x1F605;</p>
]]></content>
      <tags>
        <tag>服务治理</tag>
      </tags>
  </entry>
</search>
